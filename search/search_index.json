{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Click on the appropriate module to the left. Check out the README file first. EEE205 is 1st year Introduction to Artificial Intelligence EEE205 README COM326 is 2nd year Object Oriented Programming COM326 README","title":"Home"},{"location":"COM326/COM326%20README/","text":"The key focus in this class is to learn C++ and to improve your programming skill. Object Orientation is part of this, though given changes in attitudes to coding in recent years, class design and use will be the key focus rather than some of the broader OOP ideas. Structure \u00b6 The class structure each week is: A lecture to go over important detail and explain in detail A 1st practical class using REPLIT to learn the basics of C++ A 2nd practical class focused using Visual Studio to look at a range of C++ applications Class Files \u00b6 Class files presented are provided to support lecture, seminar, and practical classes within classes onsite in the university. Class files can be accessed here: COM326 README - Dr.Charles - Obsidian Publish Ideally you will install Obsidian , create your own local Obsidian Vault by cloning my files off Github , and take your own notes within the within this Vault. This allows you to add to my notes, and link to your own notes. You should take your own notes!! Getting started with Obsidian . Nicole van der Hoeven - YouTube Zsolt's Visual Personal Knowledge Management - YouTube Recommended Book \u00b6 I will reference this book throughout the module. C++ in One Hour a Day, Sams Teach Yourself: Amazon.co.uk: Rao, Siddhartha: 9780137334681: Books Additional Video Tutorials \u00b6 C++: C++ Tutorial for Complete Beginners | Udemy C++: The Cherno - (19) C++ - YouTube C++: NeuralNine - (19) C++ Beginner Tutorials - YouTube COM326, #Cplusplus \u00b6","title":"COM326 README"},{"location":"COM326/COM326%20README/#structure","text":"The class structure each week is: A lecture to go over important detail and explain in detail A 1st practical class using REPLIT to learn the basics of C++ A 2nd practical class focused using Visual Studio to look at a range of C++ applications","title":"Structure"},{"location":"COM326/COM326%20README/#class-files","text":"Class files presented are provided to support lecture, seminar, and practical classes within classes onsite in the university. Class files can be accessed here: COM326 README - Dr.Charles - Obsidian Publish Ideally you will install Obsidian , create your own local Obsidian Vault by cloning my files off Github , and take your own notes within the within this Vault. This allows you to add to my notes, and link to your own notes. You should take your own notes!! Getting started with Obsidian . Nicole van der Hoeven - YouTube Zsolt's Visual Personal Knowledge Management - YouTube","title":"Class Files"},{"location":"COM326/COM326%20README/#recommended-book","text":"I will reference this book throughout the module. C++ in One Hour a Day, Sams Teach Yourself: Amazon.co.uk: Rao, Siddhartha: 9780137334681: Books","title":"Recommended Book"},{"location":"COM326/COM326%20README/#additional-video-tutorials","text":"C++: C++ Tutorial for Complete Beginners | Udemy C++: The Cherno - (19) C++ - YouTube C++: NeuralNine - (19) C++ Beginner Tutorials - YouTube","title":"Additional Video Tutorials"},{"location":"COM326/COM326%20README/#com326-cplusplus","text":"","title":"COM326, #Cplusplus"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/","text":"Hello World \u00b6 Overview \u00b6 The goal of this session is to get you started programming in C++, and begin to understand compiling and linking C++ code to create executable programs. We will look at: Using Replit for C++ The main() function Keyboard input and console screen output Variables and functions Debugging code that does work Instructions: C++ Class Files in Replit \u00b6 Each Replit practical session will have a C++ project , and an instructions.md file. The instructions are in markdown format and can best be viewed by opening a Markdown tab or opening a preview window . Instructions.md can be downloaded, but is best viewed in an application that can render markdown properly. Click on this link to go straight to today's class. Hello World Follow the instruction steps to complete the lab exercises. Reflection and Further Study \u00b6 NeuralNine Videos \u00b6 C++ Introduction C++ Installation in Visual Code C++ Hello World The Cherno Videos \u00b6 How C++ Works and the Main Function How the C++ Compiler Works How the C++ Linker Works COM326, #Cplusplus, #replit, #main, #helloworld, #console, #input, #debug, #variable, #function \u00b6","title":"Hello World"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#hello-world","text":"","title":"Hello World"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#overview","text":"The goal of this session is to get you started programming in C++, and begin to understand compiling and linking C++ code to create executable programs. We will look at: Using Replit for C++ The main() function Keyboard input and console screen output Variables and functions Debugging code that does work","title":"Overview"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#instructions-c-class-files-in-replit","text":"Each Replit practical session will have a C++ project , and an instructions.md file. The instructions are in markdown format and can best be viewed by opening a Markdown tab or opening a preview window . Instructions.md can be downloaded, but is best viewed in an application that can render markdown properly. Click on this link to go straight to today's class. Hello World Follow the instruction steps to complete the lab exercises.","title":"Instructions: C++ Class Files in Replit"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#reflection-and-further-study","text":"","title":"Reflection and Further Study"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#neuralnine-videos","text":"C++ Introduction C++ Installation in Visual Code C++ Hello World","title":"NeuralNine Videos"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#the-cherno-videos","text":"How C++ Works and the Main Function How the C++ Compiler Works How the C++ Linker Works","title":"The Cherno Videos"},{"location":"COM326/Classes/Labs/Practical%201%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#com326-cplusplus-replit-main-helloworld-console-input-debug-variable-function","text":"","title":"COM326, #Cplusplus, #replit, #main, #helloworld, #console, #input, #debug, #variable, #function"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/","text":"Using Visual Studio \u00b6 Overview \u00b6 In this lab you will use MS Visual Studio to compile a C++ program. You will need to use this in your group project. Visual Studio has a built in proprietary compiler , which can be installed when the main Visual Studio IDE is installed. This is makes VS a decent place to start coding C++ - though some aspects of VS development is complex. Clion is another decent IDE that is easy to install and is cross-platform. I have always been a fan of C++ Builder as it is a good tool for creating visually attractive Windows applications with C++, but it has become more complex to use in recent years. A lot of experienced C++ coders install a compiler such as Clang , or MINGW and use their favourite editor to code in, e.g. VS Code , Sublime Text , Atom , Notepad++ , or UltraEdit . Folks who like Unix/ Linux may use Emacs or VIM . Instructions: C++ Visual Studio \u00b6 1. C++ Hello World \u00b6 The following diagram explains how to create a C++ Hello World project in Visual Studio. 1 (Dynamic drawing if viewed in Obsidian Hello World in VStudio.excalidraw ) Note that you have several options - you can create a Debug or Release program executable and it can be 64 bit ( x64 ) or 32 bit ( x86 ). Note also that F5 will run the program in Debug mode or Ctrl + F5 to run without debugging. 2. Find your Executable! \u00b6 The executable that you create will be in the Hello_World project folder that has been created. In the case of an x64 exe , the executable file can be found by locating the folder containing the solution file with the extension .sln and opening (in this case) the \\x64\\Debug folder 2 . The diagram below shows how to find the project folder by mouse right clicking on the tab of a file in Visual Studio. (Dynamic drawing if viewed in Obsidian Find Executable.excalidraw ) 3. Run the Executable \u00b6 Challenge \u00b6 Reflection and Further Study \u00b6 COM326, #Cplusplus, #VStudio, #main, #helloworld, #input, #debug, #variable, #function \u00b6 On browser view right click and open image in new tab. In Obsidian, change to reading view and click on the picture to zoom in. \u21a9 Note that the containing folder will change if a Release exe is made and/or an x86 version is compiled. \u21a9","title":"Using Visual Studio"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#using-visual-studio","text":"","title":"Using Visual Studio"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#overview","text":"In this lab you will use MS Visual Studio to compile a C++ program. You will need to use this in your group project. Visual Studio has a built in proprietary compiler , which can be installed when the main Visual Studio IDE is installed. This is makes VS a decent place to start coding C++ - though some aspects of VS development is complex. Clion is another decent IDE that is easy to install and is cross-platform. I have always been a fan of C++ Builder as it is a good tool for creating visually attractive Windows applications with C++, but it has become more complex to use in recent years. A lot of experienced C++ coders install a compiler such as Clang , or MINGW and use their favourite editor to code in, e.g. VS Code , Sublime Text , Atom , Notepad++ , or UltraEdit . Folks who like Unix/ Linux may use Emacs or VIM .","title":"Overview"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#instructions-c-visual-studio","text":"","title":"Instructions: C++ Visual Studio"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#1-c-hello-world","text":"The following diagram explains how to create a C++ Hello World project in Visual Studio. 1 (Dynamic drawing if viewed in Obsidian Hello World in VStudio.excalidraw ) Note that you have several options - you can create a Debug or Release program executable and it can be 64 bit ( x64 ) or 32 bit ( x86 ). Note also that F5 will run the program in Debug mode or Ctrl + F5 to run without debugging.","title":"1. C++ Hello World"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#2-find-your-executable","text":"The executable that you create will be in the Hello_World project folder that has been created. In the case of an x64 exe , the executable file can be found by locating the folder containing the solution file with the extension .sln and opening (in this case) the \\x64\\Debug folder 2 . The diagram below shows how to find the project folder by mouse right clicking on the tab of a file in Visual Studio. (Dynamic drawing if viewed in Obsidian Find Executable.excalidraw )","title":"2. Find your Executable!"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#3-run-the-executable","text":"","title":"3. Run the Executable"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#challenge","text":"","title":"Challenge"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#reflection-and-further-study","text":"","title":"Reflection and Further Study"},{"location":"COM326/Classes/Labs/Practical%202%20-%20First%20C%2B%2B%20Programs%20%28Week%201%29/#com326-cplusplus-vstudio-main-helloworld-input-debug-variable-function","text":"On browser view right click and open image in new tab. In Obsidian, change to reading view and click on the picture to zoom in. \u21a9 Note that the containing folder will change if a Release exe is made and/or an x86 version is compiled. \u21a9","title":"COM326, #Cplusplus, #VStudio, #main, #helloworld, #input, #debug, #variable, #function"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/","text":"Introduction to C++ \u00b6 Dr Darryl Charles \u00b6 Preparation \u00b6 Videos 5 - 8: C++: The Cherno - C++ - YouTube First 4 videos. C++: NeuralNine - C++ Beginner Tutorials - YouTube Consider buying the book Book code \"C++ in One Hour a Day, Sams Teach Yourself\", Siddhartha Rao. Note that much of the code that we use is similar to that store on GitHub from the book Code samples from Teach Yourself C++ In One Hour a Day, Ninth Edition by Siddhartha Rao . Overview \u00b6 Introduction COM326 module structure and assignments About C++ and Object Orientation Hello World and the anatomy of a C++ program Compilers, compiling and linking IDEs or command line C++ basics and functions Conclusion Introduction \u00b6 In this module you will be learning to code C++ Why C++? fast, compatible, stable specification, engineering, game development Why Object Orientation? modularity, inheritance, polymorphism, large projects Issues with C++ misbehaving with types, integer overflow, pointers COM326 module structure \u00b6 Coursework \u00b6 Coursework is worth 100% of the marks for this module. - There are Two assignments: an individual assessment (50%), and a group assessment (50%) Assignment 1: In Replit Assignment 2: In Visual Studio (or similar) Replit vs Visual Studio \u00b6 Object Orientation \u00b6 Hello World and the anatomy of a C++ program \u00b6 Input/Output, namespaces \u00b6 Comments in code \u00b6 Integrated Development Environments for C++ \u00b6 Compilers and building an executable \u00b6 C++ Keywords and Libraries \u00b6 Variables and constants \u00b6 Functions \u00b6 Summary \u00b6 Reflection and Further Study \u00b6 Cplusplus, #replit, #main, #helloworld, #console, #input, #debug, #variable, #function, #compiler, #OOP, #class \u00b6","title":"Introduction to C++"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#introduction-to-c","text":"","title":"Introduction to C++"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#dr-darryl-charles","text":"","title":"Dr Darryl Charles"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#preparation","text":"Videos 5 - 8: C++: The Cherno - C++ - YouTube First 4 videos. C++: NeuralNine - C++ Beginner Tutorials - YouTube Consider buying the book Book code \"C++ in One Hour a Day, Sams Teach Yourself\", Siddhartha Rao. Note that much of the code that we use is similar to that store on GitHub from the book Code samples from Teach Yourself C++ In One Hour a Day, Ninth Edition by Siddhartha Rao .","title":"Preparation"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#overview","text":"Introduction COM326 module structure and assignments About C++ and Object Orientation Hello World and the anatomy of a C++ program Compilers, compiling and linking IDEs or command line C++ basics and functions Conclusion","title":"Overview"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#introduction","text":"In this module you will be learning to code C++ Why C++? fast, compatible, stable specification, engineering, game development Why Object Orientation? modularity, inheritance, polymorphism, large projects Issues with C++ misbehaving with types, integer overflow, pointers","title":"Introduction"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#com326-module-structure","text":"","title":"COM326 module structure"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#coursework","text":"Coursework is worth 100% of the marks for this module. - There are Two assignments: an individual assessment (50%), and a group assessment (50%) Assignment 1: In Replit Assignment 2: In Visual Studio (or similar)","title":"Coursework"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#replit-vs-visual-studio","text":"","title":"Replit vs Visual Studio"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#object-orientation","text":"","title":"Object Orientation"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#hello-world-and-the-anatomy-of-a-c-program","text":"","title":"Hello World and the anatomy of a C++ program"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#inputoutput-namespaces","text":"","title":"Input/Output, namespaces"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#comments-in-code","text":"","title":"Comments in code"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#integrated-development-environments-for-c","text":"","title":"Integrated Development Environments for C++"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#compilers-and-building-an-executable","text":"","title":"Compilers and building an executable"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#c-keywords-and-libraries","text":"","title":"C++ Keywords and Libraries"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#variables-and-constants","text":"","title":"Variables and constants"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#functions","text":"","title":"Functions"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#summary","text":"","title":"Summary"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#reflection-and-further-study","text":"","title":"Reflection and Further Study"},{"location":"COM326/Classes/Lectures/Lecture%201%20-%20Hello%20Magee/#cplusplus-replit-main-helloworld-console-input-debug-variable-function-compiler-oop-class","text":"","title":"Cplusplus, #replit, #main, #helloworld, #console, #input, #debug, #variable, #function, #compiler, #OOP, #class"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/","text":"Lecture Title \u00b6 Lecturer Name \u00b6 previous lecture practical class next lecture Overview \u00b6 Introduction a b c d e Conclusion Introduction \u00b6 Slide 1 \u00b6 Slide 2 \u00b6 Slide 3 \u00b6 Slide 4 \u00b6 Slide 5 \u00b6 Slide 6 \u00b6 Slide 7 \u00b6 Slide 8 \u00b6 Slide 9 \u00b6 Slide 10 \u00b6 Summary \u00b6 Reflection and Further Study \u00b6","title":"Lecture Title"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#lecture-title","text":"","title":"Lecture Title"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#lecturer-name","text":"previous lecture practical class next lecture","title":"Lecturer Name"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#overview","text":"Introduction a b c d e Conclusion","title":"Overview"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#introduction","text":"","title":"Introduction"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-1","text":"","title":"Slide 1"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-2","text":"","title":"Slide 2"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-3","text":"","title":"Slide 3"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-4","text":"","title":"Slide 4"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-5","text":"","title":"Slide 5"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-6","text":"","title":"Slide 6"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-7","text":"","title":"Slide 7"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-8","text":"","title":"Slide 8"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-9","text":"","title":"Slide 9"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#slide-10","text":"","title":"Slide 10"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#summary","text":"","title":"Summary"},{"location":"COM326/Classes/Lectures/Lecture%202%20-/#reflection-and-further-study","text":"","title":"Reflection and Further Study"},{"location":"COM326/Classes/Notes/C%2B%2B%20vs%20Other%20Languages/","text":"The Most Popular Programming Languages - 1965/2022 - New Update - Statistics and Data ![[Pasted image 20220823174727.png]]","title":"C++ vs Other Languages"},{"location":"COM326/Classes/Notes/Find%20Executable.excalidraw/","tags":["excalidraw"],"text":"\u26a0 Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 Text Elements \u00b6 Mouse right Click on the tab of the file that you wish to locate ^Sz1IjLHV This will open the folder in Explorer containing the file ^kHY2eSku To find the .exe file you need to go back up one folder and then go into the x64 folder ^RevlsSzw You should then be able to see the .exe that has been created ^23OwhW4r Embedded files \u00b6 594f45536ae95ffd83e41644efc573669647dee6: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830094802_231.png c7c6918c650505b041536050a1a85fab76bcead5: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830095333_707.png 73e4eb7104cd12648b9a5207afccf88e15aa3d80: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830095443_920.png 73e2218858deb47b3bf7b2a9681f91c4ca1dc542: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830100007_573.png %% Drawing \u00b6 { \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"type\": \"image\", \"version\": 268, \"versionNonce\": 198957467, \"isDeleted\": false, \"id\": \"D3EUmFyIQcwqbIjaSGlvv\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -352.4427270411596, \"y\": -123.06398701023409, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 196.19404753746346, \"height\": 201.49658936280028, \"seed\": 1880680795, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"73e2218858deb47b3bf7b2a9681f91c4ca1dc542\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 650, \"versionNonce\": 329015701, \"isDeleted\": false, \"id\": \"735TEYeHx3OXLpl3PZ4Ry\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -602.9604220920139, \"y\": 46.195090430375075, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 248.64282429379216, \"height\": 147.3949152323311, \"seed\": 531513179, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"594f45536ae95ffd83e41644efc573669647dee6\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 557, \"versionNonce\": 1275326011, \"isDeleted\": false, \"id\": \"jRlJE6CJh2b_4Cb85YEk4\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -280.18673598150014, \"y\": 87.69183052910694, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 228.3856933964785, \"height\": 200.3703816731771, \"seed\": 369748117, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [ { \"id\": \"EsRqUxDl1KFLBdL6vhePK\", \"type\": \"arrow\" } ], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"c7c6918c650505b041536050a1a85fab76bcead5\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 375, \"versionNonce\": 1495623413, \"isDeleted\": false, \"id\": \"ExRK2haPJEyi1OuapzgjA\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -92.03091106322654, \"y\": -68.93779627482095, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 198.48765903049048, \"height\": 119.09259541829428, \"seed\": 673914939, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"73e4eb7104cd12648b9a5207afccf88e15aa3d80\", \"scale\": [ 1, 1 ] }, { \"type\": \"arrow\", \"version\": 1338, \"versionNonce\": 1132490459, \"isDeleted\": false, \"id\": \"eTi163bL2txspB1ADzm8V\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -447.03091106322654, \"y\": 56.581911591492684, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 114.27740947881574, \"height\": 71.61722366982505, \"seed\": 826145211, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"startBinding\": null, \"endBinding\": { \"elementId\": \"kHY2eSku\", \"focus\": -0.8637164350484304, \"gap\": 1 }, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 114.27740947881574, -71.61722366982505 ] ] }, { \"type\": \"arrow\", \"version\": 377, \"versionNonce\": 103202901, \"isDeleted\": false, \"id\": \"EsRqUxDl1KFLBdL6vhePK\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -282.67896878892105, \"y\": 61.4880646599664, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 49.536946614583314, \"height\": 162.5000169542101, \"seed\": 718932181, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"startBinding\": { \"elementId\": \"jRlJE6CJh2b_4Cb85YEk4\", \"focus\": 0.5400013644467799, \"gap\": 26.20376586914054 }, \"endBinding\": null, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 49.536946614583314, 162.5000169542101 ] ] }, { \"type\": \"arrow\", \"version\": 189, \"versionNonce\": 1692654459, \"isDeleted\": false, \"id\": \"qHF74U6dsr--BA7aEj96l\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -98.88278552069187, \"y\": 129.54367107815216, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 47.684936523437614, \"height\": 113.42595418294275, \"seed\": 1838001915, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"startBinding\": null, \"endBinding\": null, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 47.684936523437614, -113.42595418294275 ] ] }, { \"type\": \"text\", \"version\": 438, \"versionNonce\": 813034933, \"isDeleted\": false, \"id\": \"Sz1IjLHV\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -516.0123360306745, \"y\": 174.71043947007928, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 189, \"height\": 60, \"seed\": 1301762293, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.756174723307295, \"fontFamily\": 1, \"text\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\", \"rawText\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\", \"baseline\": 54, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\" }, { \"type\": \"text\", \"version\": 1219, \"versionNonce\": 745583643, \"isDeleted\": false, \"id\": \"kHY2eSku\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -504.0586718867943, \"y\": -55.998272215593644, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 171, \"height\": 52, \"seed\": 1892386619, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [ { \"id\": \"eTi163bL2txspB1ADzm8V\", \"type\": \"arrow\" } ], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 13.76493337761117, \"fontFamily\": 1, \"text\": \"This will open the folder \\nin Explorer containing \\nthe file\", \"rawText\": \"This will open the folder \\nin Explorer containing \\nthe file\", \"baseline\": 48, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"This will open the folder \\nin Explorer containing \\nthe file\" }, { \"type\": \"text\", \"version\": 1386, \"versionNonce\": 389574421, \"isDeleted\": false, \"id\": \"RevlsSzw\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -141.0587905662647, \"y\": 247.85849719577362, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 195, \"height\": 80, \"seed\": 537916635, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.93397942142208, \"fontFamily\": 1, \"text\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \", \"rawText\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \", \"baseline\": 74, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \" }, { \"type\": \"text\", \"version\": 380, \"versionNonce\": 1780054203, \"isDeleted\": false, \"id\": \"23OwhW4r\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -41.75320110228893, \"y\": 41.377004411485444, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 187, \"height\": 57, \"seed\": 862935739, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.275884442318576, \"fontFamily\": 1, \"text\": \"You should then be able \\nto see the .exe \\nthat has been created\", \"rawText\": \"You should then be able \\nto see the .exe \\nthat has been created\", \"baseline\": 52, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"You should then be able \\nto see the .exe \\nthat has been created\" }, { \"id\": \"G6Fje1i6U8j0_ov6IYeZ3\", \"type\": \"freedraw\", \"x\": -556.6888428471514, \"y\": 207.39730659118285, \"width\": 12.083343505859375, \"height\": 27.083282470703125, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 201702427, \"version\": 43, \"versionNonce\": 1266723163, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, -0.416717529296875 ], [ 0.416656494140625, -0.8333740234375 ], [ 0.833343505859375, -1.25 ], [ 1.666656494140625, -1.666717529296875 ], [ 2.5, -2.5 ], [ 3.75, -2.916717529296875 ], [ 4.166656494140625, -3.75 ], [ 5.416656494140625, -5 ], [ 6.25, -5.8333740234375 ], [ 7.083343505859375, -6.666717529296875 ], [ 7.916656494140625, -7.5 ], [ 8.75, -7.916717529296875 ], [ 9.583343505859375, -8.75 ], [ 10.416656494140625, -9.5833740234375 ], [ 10.833343505859375, -9.5833740234375 ], [ 10.833343505859375, -10 ], [ 11.25, -10 ], [ 11.25, -9.5833740234375 ], [ 11.666656494140625, -9.166717529296875 ], [ 11.666656494140625, -8.3333740234375 ], [ 11.666656494140625, -7.0833740234375 ], [ 11.666656494140625, -5.8333740234375 ], [ 11.666656494140625, -4.166717529296875 ], [ 12.083343505859375, -2.5 ], [ 12.083343505859375, -0.416717529296875 ], [ 12.083343505859375, 2.083282470703125 ], [ 12.083343505859375, 4.1666259765625 ], [ 12.083343505859375, 6.6666259765625 ], [ 12.083343505859375, 8.75 ], [ 12.083343505859375, 10.833282470703125 ], [ 12.083343505859375, 12.5 ], [ 12.083343505859375, 13.75 ], [ 12.083343505859375, 15 ], [ 12.083343505859375, 15.833282470703125 ], [ 12.083343505859375, 16.25 ], [ 12.083343505859375, 17.083282470703125 ], [ 12.083343505859375, 17.083282470703125 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 12.083343505859375, 17.083282470703125 ] }, { \"id\": \"VVB6HccXO04RjZoWETxiN\", \"type\": \"freedraw\", \"x\": -548.355499341292, \"y\": -37.60272392639527, \"width\": 25, \"height\": 30, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 637060603, \"version\": 80, \"versionNonce\": 1307112661, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850253897, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -0.41668701171875, 0 ], [ -0.833343505859375, 0 ], [ -1.25, 0 ], [ -1.66668701171875, 0 ], [ -2.083343505859375, -0.4166717529296875 ], [ -2.5, -0.4166717529296875 ], [ -2.5, -0.833343505859375 ], [ -2.5, -1.25 ], [ -2.5, -2.083343505859375 ], [ -2.5, -2.5 ], [ -2.5, -2.9166717529296875 ], [ -1.66668701171875, -3.75 ], [ -1.66668701171875, -4.583343505859375 ], [ -1.25, -5.833343505859375 ], [ -1.25, -6.6666717529296875 ], [ -0.833343505859375, -7.5 ], [ -0.833343505859375, -7.9166717529296875 ], [ -0.41668701171875, -8.75 ], [ 0, -9.166671752929688 ], [ 0.416656494140625, -9.166671752929688 ], [ 0.83331298828125, -9.583343505859375 ], [ 1.666656494140625, -10 ], [ 2.08331298828125, -10.416671752929688 ], [ 2.916656494140625, -10.416671752929688 ], [ 3.75, -10.833343505859375 ], [ 4.58331298828125, -10.833343505859375 ], [ 5.416656494140625, -10.833343505859375 ], [ 6.25, -10.833343505859375 ], [ 7.08331298828125, -10.833343505859375 ], [ 7.5, -10.833343505859375 ], [ 7.916656494140625, -10.833343505859375 ], [ 8.33331298828125, -10.833343505859375 ], [ 8.75, -10 ], [ 9.166656494140625, -9.583343505859375 ], [ 9.58331298828125, -8.75 ], [ 10, -7.9166717529296875 ], [ 10.416656494140625, -7.083343505859375 ], [ 10.83331298828125, -6.25 ], [ 11.25, -5 ], [ 11.25, -4.1666717529296875 ], [ 11.666656494140625, -3.333343505859375 ], [ 11.666656494140625, -2.083343505859375 ], [ 11.666656494140625, -0.833343505859375 ], [ 11.666656494140625, 0.416656494140625 ], [ 11.666656494140625, 1.25 ], [ 11.25, 2.916656494140625 ], [ 10.83331298828125, 4.166656494140625 ], [ 10, 5.8333282470703125 ], [ 9.58331298828125, 7.5000152587890625 ], [ 8.33331298828125, 9.166656494140625 ], [ 7.916656494140625, 10.833328247070312 ], [ 7.5, 12.500015258789062 ], [ 5, 15.416656494140625 ], [ 4.58331298828125, 15.833328247070312 ], [ 4.166656494140625, 16.666656494140625 ], [ 3.33331298828125, 17.500015258789062 ], [ 2.916656494140625, 17.916656494140625 ], [ 2.916656494140625, 18.333328247070312 ], [ 2.5, 18.750015258789062 ], [ 2.5, 19.166656494140625 ], [ 2.916656494140625, 19.166656494140625 ], [ 3.33331298828125, 19.166656494140625 ], [ 4.166656494140625, 19.166656494140625 ], [ 5.416656494140625, 19.166656494140625 ], [ 6.25, 18.750015258789062 ], [ 7.916656494140625, 18.750015258789062 ], [ 9.166656494140625, 18.750015258789062 ], [ 10.83331298828125, 18.750015258789062 ], [ 12.916656494140625, 18.333328247070312 ], [ 15, 18.333328247070312 ], [ 16.666656494140625, 17.916656494140625 ], [ 18.33331298828125, 17.916656494140625 ], [ 20, 17.500015258789062 ], [ 20.83331298828125, 17.500015258789062 ], [ 21.25, 17.500015258789062 ], [ 22.08331298828125, 17.500015258789062 ], [ 22.5, 17.500015258789062 ], [ 22.5, 17.500015258789062 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 22.5, 17.500015258789062 ] }, { \"id\": \"tMWEYZVEzLGNA-6FMTNmQ\", \"type\": \"freedraw\", \"x\": -177.10543830613574, \"y\": 275.3139325677454, \"width\": 19.16656494140625, \"height\": 33.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 418197243, \"version\": 129, \"versionNonce\": 1149884155, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850259712, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.833343505859375 ], [ 0.41656494140625, -0.833343505859375 ], [ 0.833251953125, -1.25 ], [ 1.25, -1.25 ], [ 1.66656494140625, -1.666656494140625 ], [ 2.083251953125, -1.666656494140625 ], [ 2.91656494140625, -2.083343505859375 ], [ 3.75, -2.5 ], [ 4.583251953125, -2.5 ], [ 5.833251953125, -2.5 ], [ 6.25, -2.916656494140625 ], [ 7.083251953125, -2.916656494140625 ], [ 7.91656494140625, -2.916656494140625 ], [ 8.333251953125, -2.916656494140625 ], [ 9.16656494140625, -2.916656494140625 ], [ 10, -2.916656494140625 ], [ 10.833251953125, -2.916656494140625 ], [ 11.66656494140625, -2.916656494140625 ], [ 12.5, -2.5 ], [ 12.91656494140625, -2.083343505859375 ], [ 13.333251953125, -2.083343505859375 ], [ 14.16656494140625, -1.666656494140625 ], [ 14.583251953125, -1.25 ], [ 15, -0.833343505859375 ], [ 15.833251953125, -0.416656494140625 ], [ 15.833251953125, 0 ], [ 16.25, 0 ], [ 16.66656494140625, 0.416656494140625 ], [ 17.083251953125, 1.25 ], [ 17.5, 1.666656494140625 ], [ 17.5, 2.083343505859375 ], [ 17.91656494140625, 2.916656494140625 ], [ 17.91656494140625, 3.333343505859375 ], [ 17.91656494140625, 3.75 ], [ 17.91656494140625, 4.583343505859375 ], [ 17.91656494140625, 5 ], [ 17.91656494140625, 5.833343505859375 ], [ 17.5, 6.25 ], [ 17.083251953125, 6.666656494140625 ], [ 16.66656494140625, 7.5 ], [ 16.25, 7.916656494140625 ], [ 15.41656494140625, 8.333343505859375 ], [ 15, 8.75 ], [ 14.583251953125, 9.166656494140625 ], [ 13.75, 9.583343505859375 ], [ 12.91656494140625, 10 ], [ 12.083251953125, 10.416656494140625 ], [ 11.25, 10.833343505859375 ], [ 10.833251953125, 11.666656494140625 ], [ 9.583251953125, 12.083343505859375 ], [ 8.75, 12.5 ], [ 7.91656494140625, 12.916656494140625 ], [ 7.083251953125, 13.333343505859375 ], [ 6.25, 13.75 ], [ 5.41656494140625, 13.75 ], [ 4.583251953125, 14.166656494140625 ], [ 4.16656494140625, 14.166656494140625 ], [ 3.75, 14.166656494140625 ], [ 4.16656494140625, 14.166656494140625 ], [ 4.583251953125, 14.166656494140625 ], [ 5.833251953125, 14.166656494140625 ], [ 6.25, 14.166656494140625 ], [ 7.5, 14.583343505859375 ], [ 8.333251953125, 14.583343505859375 ], [ 9.16656494140625, 15 ], [ 10.41656494140625, 15 ], [ 10.833251953125, 15.416656494140625 ], [ 11.66656494140625, 15.416656494140625 ], [ 12.083251953125, 15.833343505859375 ], [ 12.5, 15.833343505859375 ], [ 12.91656494140625, 16.25 ], [ 13.333251953125, 16.666656494140625 ], [ 13.75, 16.666656494140625 ], [ 14.16656494140625, 17.083343505859375 ], [ 14.583251953125, 17.5 ], [ 15, 18.333343505859375 ], [ 15, 18.75 ], [ 15.833251953125, 19.166656494140625 ], [ 15.833251953125, 19.583343505859375 ], [ 16.25, 20 ], [ 16.66656494140625, 20.416656494140625 ], [ 17.91656494140625, 21.666656494140625 ], [ 17.91656494140625, 22.083343505859375 ], [ 18.333251953125, 22.5 ], [ 18.75, 22.916656494140625 ], [ 19.16656494140625, 22.916656494140625 ], [ 19.16656494140625, 23.75 ], [ 19.16656494140625, 24.166656494140625 ], [ 19.16656494140625, 24.583343505859375 ], [ 19.16656494140625, 25.416656494140625 ], [ 19.16656494140625, 25.833343505859375 ], [ 19.16656494140625, 26.25 ], [ 19.16656494140625, 27.083343505859375 ], [ 18.75, 27.083343505859375 ], [ 18.333251953125, 27.5 ], [ 18.333251953125, 27.916656494140625 ], [ 17.91656494140625, 28.75 ], [ 17.083251953125, 28.75 ], [ 16.66656494140625, 29.166656494140625 ], [ 16.25, 29.583343505859375 ], [ 15.41656494140625, 29.583343505859375 ], [ 15, 30 ], [ 13.75, 30 ], [ 13.333251953125, 30.416656494140625 ], [ 12.5, 30.416656494140625 ], [ 11.66656494140625, 30.416656494140625 ], [ 11.25, 30.833343505859375 ], [ 10.41656494140625, 30.833343505859375 ], [ 9.583251953125, 30.833343505859375 ], [ 9.16656494140625, 30.833343505859375 ], [ 8.333251953125, 30.833343505859375 ], [ 7.5, 30.833343505859375 ], [ 6.66656494140625, 30.833343505859375 ], [ 6.25, 30.833343505859375 ], [ 5.41656494140625, 30.833343505859375 ], [ 3.75, 30.833343505859375 ], [ 3.333251953125, 30.833343505859375 ], [ 2.91656494140625, 30.833343505859375 ], [ 2.5, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ], [ 1.25, 30.833343505859375 ], [ 0.833251953125, 30.833343505859375 ], [ 0.41656494140625, 30.833343505859375 ], [ 0.833251953125, 30.833343505859375 ], [ 1.25, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 1.66656494140625, 30.833343505859375 ] }, { \"id\": \"MGcMmZ8cty5DuNC4phLna\", \"type\": \"freedraw\", \"x\": -60.85549934129199, \"y\": 66.56393256774535, \"width\": 17.5, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 48196149, \"version\": 52, \"versionNonce\": 1498092347, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850262082, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.416656494140625 ], [ 0, 0.833343505859375 ], [ 0.4166259765625, 1.25 ], [ 0.4166259765625, 2.083343505859375 ], [ 0.4166259765625, 2.916656494140625 ], [ 0.4166259765625, 4.166656494140625 ], [ 0.4166259765625, 5.416656494140625 ], [ 0.4166259765625, 6.25 ], [ 0.4166259765625, 7.916656494140625 ], [ 0.4166259765625, 9.166656494140625 ], [ 0.4166259765625, 10.416656494140625 ], [ 0.4166259765625, 11.666656494140625 ], [ 0.4166259765625, 12.916656494140625 ], [ 0.4166259765625, 14.166656494140625 ], [ 0.4166259765625, 15 ], [ 0, 16.25 ], [ 0, 17.083343505859375 ], [ -0.41668701171875, 18.333343505859375 ], [ -0.41668701171875, 18.75 ], [ -0.41668701171875, 19.583343505859375 ], [ -0.41668701171875, 20.416656494140625 ], [ -0.8333740234375, 20.416656494140625 ], [ -0.8333740234375, 21.25 ], [ -0.8333740234375, 21.666656494140625 ], [ -0.8333740234375, 22.083343505859375 ], [ -0.8333740234375, 22.5 ], [ -0.8333740234375, 22.916656494140625 ], [ -0.8333740234375, 23.333343505859375 ], [ -0.41668701171875, 23.333343505859375 ], [ 0, 23.333343505859375 ], [ 0.83331298828125, 23.75 ], [ 2.08331298828125, 23.75 ], [ 3.33331298828125, 23.75 ], [ 4.58331298828125, 23.75 ], [ 6.25, 24.166656494140625 ], [ 7.5, 24.166656494140625 ], [ 9.1666259765625, 24.166656494140625 ], [ 10.83331298828125, 24.166656494140625 ], [ 12.08331298828125, 24.166656494140625 ], [ 12.9166259765625, 24.166656494140625 ], [ 13.33331298828125, 24.166656494140625 ], [ 13.75, 24.166656494140625 ], [ 14.1666259765625, 24.166656494140625 ], [ 14.58331298828125, 24.166656494140625 ], [ 14.58331298828125, 24.583343505859375 ], [ 15, 24.583343505859375 ], [ 15.83331298828125, 24.583343505859375 ], [ 16.25, 25 ], [ 16.6666259765625, 25 ], [ 16.6666259765625, 25 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 16.6666259765625, 25 ] }, { \"id\": \"Gwrlss3R-1JOHCl04Lk5b\", \"type\": \"freedraw\", \"x\": -48.77218635301074, \"y\": 78.23058906188598, \"width\": 4.58331298828125, \"height\": 23.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 51319285, \"version\": 26, \"versionNonce\": 900227931, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850262815, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.41668701171875 ], [ 0, 0.833343505859375 ], [ 0, 1.25 ], [ 0, 1.66668701171875 ], [ 0, 2.5 ], [ 0, 2.91668701171875 ], [ 0, 3.75 ], [ -0.41668701171875, 5 ], [ -0.41668701171875, 6.25 ], [ -0.83331298828125, 7.91668701171875 ], [ -1.25, 9.16668701171875 ], [ -1.66668701171875, 11.25 ], [ -2.08331298828125, 12.5 ], [ -2.08331298828125, 14.16668701171875 ], [ -2.5, 15.41668701171875 ], [ -2.5, 17.083343505859375 ], [ -2.91668701171875, 18.333343505859375 ], [ -3.33331298828125, 19.583343505859375 ], [ -3.33331298828125, 20.41668701171875 ], [ -3.75, 21.25 ], [ -4.16668701171875, 22.91668701171875 ], [ -4.16668701171875, 23.333343505859375 ], [ -4.58331298828125, 23.75 ], [ -4.58331298828125, 23.75 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -4.58331298828125, 23.75 ] }, { \"id\": \"1N7qlOl_ZA0AEJhc0VAqN\", \"type\": \"freedraw\", \"x\": -549.1888428471514, \"y\": 204.89730659118285, \"width\": 7.083343505859375, \"height\": 24.166717529296875, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1571131259, \"version\": 59, \"versionNonce\": 2028192885, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, 0 ], [ 0.416656494140625, -0.416717529296875 ], [ 1.25, -0.8333740234375 ], [ 1.666656494140625, -1.25 ], [ 2.083343505859375, -1.666717529296875 ], [ 2.916656494140625, -2.5 ], [ 3.333343505859375, -2.916717529296875 ], [ 4.166656494140625, -3.75 ], [ 4.583343505859375, -4.166717529296875 ], [ 5.416656494140625, -4.5833740234375 ], [ 5.833343505859375, -5.416717529296875 ], [ 6.25, -5.416717529296875 ], [ 6.666656494140625, -5.8333740234375 ], [ 6.666656494140625, -6.25 ], [ 7.083343505859375, -6.25 ], [ 7.083343505859375, -6.666717529296875 ], [ 7.083343505859375, -5.8333740234375 ], [ 7.083343505859375, -4.5833740234375 ], [ 7.083343505859375, -4.166717529296875 ], [ 7.083343505859375, -3.3333740234375 ], [ 7.083343505859375, -2.5 ], [ 6.666656494140625, -1.25 ], [ 6.25, 0 ], [ 5.833343505859375, 0.833282470703125 ], [ 5.833343505859375, 2.083282470703125 ], [ 5.416656494140625, 3.333282470703125 ], [ 5.416656494140625, 4.1666259765625 ], [ 5.416656494140625, 5 ], [ 5.416656494140625, 5.833282470703125 ], [ 5, 6.6666259765625 ], [ 5, 7.5 ], [ 5, 7.9166259765625 ], [ 5, 9.1666259765625 ], [ 5, 10 ], [ 5, 10.833282470703125 ], [ 5, 11.6666259765625 ], [ 5, 12.5 ], [ 5, 12.9166259765625 ], [ 5, 13.75 ], [ 4.583343505859375, 14.1666259765625 ], [ 4.583343505859375, 14.583282470703125 ], [ 4.583343505859375, 15 ], [ 4.583343505859375, 15.4166259765625 ], [ 4.583343505859375, 15.833282470703125 ], [ 5, 15.833282470703125 ], [ 5, 16.25 ], [ 5, 16.6666259765625 ], [ 5, 17.083282470703125 ], [ 5.416656494140625, 17.5 ], [ 5.416656494140625, 17.083282470703125 ], [ 5.833343505859375, 16.6666259765625 ], [ 5.833343505859375, 16.6666259765625 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 5.833343505859375, 16.6666259765625 ] }, { \"id\": \"Qx6kDv6yMVkOJHleDVXbz\", \"type\": \"freedraw\", \"x\": -536.6888428471514, \"y\": -48.85272392639527, \"width\": 28.75, \"height\": 31.66668701171875, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 12966197, \"version\": 68, \"versionNonce\": 585269301, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850245534, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.4166717529296875 ], [ 0.416656494140625, -0.833343505859375 ], [ 0.833343505859375, -0.833343505859375 ], [ 0.833343505859375, -1.25 ], [ 1.25, -1.6666717529296875 ], [ 2.083343505859375, -2.083343505859375 ], [ 2.5, -2.5 ], [ 3.333343505859375, -2.5 ], [ 4.166656494140625, -2.9166717529296875 ], [ 5, -2.9166717529296875 ], [ 5.833343505859375, -2.9166717529296875 ], [ 7.083343505859375, -2.9166717529296875 ], [ 8.333343505859375, -2.9166717529296875 ], [ 10, -2.9166717529296875 ], [ 12.083343505859375, -2.9166717529296875 ], [ 13.75, -2.9166717529296875 ], [ 15, -2.5 ], [ 15.833343505859375, -2.083343505859375 ], [ 16.666656494140625, -1.6666717529296875 ], [ 17.5, -1.25 ], [ 17.916656494140625, -0.833343505859375 ], [ 17.916656494140625, -0.4166717529296875 ], [ 18.333343505859375, 0.416656494140625 ], [ 18.75, 1.25 ], [ 18.75, 2.5 ], [ 18.75, 3.75 ], [ 18.75, 5 ], [ 18.75, 6.25 ], [ 18.75, 7.5 ], [ 18.333343505859375, 9.166656494140625 ], [ 17.916656494140625, 10.416656494140625 ], [ 17.083343505859375, 11.666656494140625 ], [ 16.25, 12.916656494140625 ], [ 15.416656494140625, 14.166656494140625 ], [ 14.583343505859375, 15.416656494140625 ], [ 13.75, 15.833328247070312 ], [ 12.916656494140625, 17.083328247070312 ], [ 11.666656494140625, 17.500015258789062 ], [ 10.416656494140625, 18.333328247070312 ], [ 9.583343505859375, 18.750015258789062 ], [ 8.75, 19.166656494140625 ], [ 7.916656494140625, 19.583328247070312 ], [ 7.5, 20.000015258789062 ], [ 7.083343505859375, 20.416656494140625 ], [ 6.666656494140625, 20.833328247070312 ], [ 6.25, 20.833328247070312 ], [ 6.25, 21.250015258789062 ], [ 5.833343505859375, 21.250015258789062 ], [ 5.833343505859375, 21.666656494140625 ], [ 8.75, 22.500015258789062 ], [ 10.416656494140625, 23.333328247070312 ], [ 11.666656494140625, 23.750015258789062 ], [ 13.333343505859375, 24.166656494140625 ], [ 15.416656494140625, 24.583328247070312 ], [ 17.5, 25.416656494140625 ], [ 19.583343505859375, 26.250015258789062 ], [ 21.666656494140625, 27.083328247070312 ], [ 23.333343505859375, 27.500015258789062 ], [ 24.583343505859375, 27.500015258789062 ], [ 26.25, 28.333328247070312 ], [ 27.5, 28.750015258789062 ], [ 28.333343505859375, 28.750015258789062 ], [ 28.75, 28.750015258789062 ], [ 28.75, 28.333328247070312 ], [ 28.75, 28.333328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 28.75, 28.333328247070312 ] }, { \"id\": \"_h0KEG6H4nwI3APSyBHei\", \"type\": \"freedraw\", \"x\": -541.6888428471514, \"y\": -45.51939567932496, \"width\": 22.083343505859375, \"height\": 23.333358764648438, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1387039131, \"version\": 64, \"versionNonce\": 1558326619, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850247659, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.4166717529296875 ], [ 0.416656494140625, 0.4166717529296875 ], [ 0.833343505859375, 0.4166717529296875 ], [ 1.666656494140625, 0.4166717529296875 ], [ 2.5, 0.4166717529296875 ], [ 3.333343505859375, 0.4166717529296875 ], [ 5, 0.4166717529296875 ], [ 6.25, 0 ], [ 7.916656494140625, 0 ], [ 9.583343505859375, -0.4166717529296875 ], [ 11.25, -0.4166717529296875 ], [ 12.916656494140625, -0.4166717529296875 ], [ 14.166656494140625, -0.4166717529296875 ], [ 15, -0.4166717529296875 ], [ 16.25, -0.4166717529296875 ], [ 16.666656494140625, -0.4166717529296875 ], [ 17.5, -0.4166717529296875 ], [ 18.333343505859375, 0 ], [ 18.75, 0.8333282470703125 ], [ 18.75, 1.6666717529296875 ], [ 19.166656494140625, 2.9166717529296875 ], [ 19.166656494140625, 4.1666717529296875 ], [ 19.166656494140625, 6.25 ], [ 18.75, 7.9166717529296875 ], [ 17.916656494140625, 9.583328247070312 ], [ 17.5, 11.66668701171875 ], [ 16.666656494140625, 13.333328247070312 ], [ 15.833343505859375, 15 ], [ 15, 15.41668701171875 ], [ 14.166656494140625, 16.25 ], [ 13.333343505859375, 17.083328247070312 ], [ 12.5, 17.5 ], [ 11.666656494140625, 17.5 ], [ 10.416656494140625, 17.91668701171875 ], [ 10, 17.91668701171875 ], [ 9.166656494140625, 18.333328247070312 ], [ 8.75, 18.333328247070312 ], [ 8.333343505859375, 18.333328247070312 ], [ 8.333343505859375, 18.75 ], [ 8.333343505859375, 19.16668701171875 ], [ 8.333343505859375, 19.583328247070312 ], [ 8.333343505859375, 20 ], [ 8.333343505859375, 20.41668701171875 ], [ 8.333343505859375, 20.833328247070312 ], [ 8.75, 21.66668701171875 ], [ 9.166656494140625, 22.083328247070312 ], [ 10, 22.5 ], [ 10.833343505859375, 22.5 ], [ 11.666656494140625, 22.5 ], [ 12.916656494140625, 22.91668701171875 ], [ 14.166656494140625, 22.91668701171875 ], [ 15.416656494140625, 22.91668701171875 ], [ 17.083343505859375, 22.91668701171875 ], [ 17.916656494140625, 22.91668701171875 ], [ 19.166656494140625, 22.91668701171875 ], [ 20, 22.91668701171875 ], [ 20.833343505859375, 22.91668701171875 ], [ 21.666656494140625, 22.91668701171875 ], [ 22.083343505859375, 22.91668701171875 ], [ 22.083343505859375, 22.5 ], [ 22.083343505859375, 22.5 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 22.083343505859375, 22.5 ] }, { \"id\": \"GVxvr5y2hqNd5f0HGNZTe\", \"type\": \"freedraw\", \"x\": -545.855499341292, \"y\": -44.26939567932496, \"width\": 27.08331298828125, \"height\": 23.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2074487253, \"version\": 71, \"versionNonce\": 167779227, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850250267, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.4166717529296875 ], [ 0.416656494140625, -0.8333282470703125 ], [ 0.83331298828125, -1.25 ], [ 0.83331298828125, -1.6666717529296875 ], [ 1.25, -1.6666717529296875 ], [ 1.666656494140625, -2.0833282470703125 ], [ 2.08331298828125, -2.0833282470703125 ], [ 2.5, -2.0833282470703125 ], [ 2.916656494140625, -2.5 ], [ 3.33331298828125, -2.5 ], [ 3.75, -2.5 ], [ 4.58331298828125, -2.5 ], [ 5.416656494140625, -2.5 ], [ 6.25, -2.5 ], [ 7.5, -2.5 ], [ 8.33331298828125, -2.5 ], [ 9.58331298828125, -2.5 ], [ 10.83331298828125, -2.5 ], [ 11.666656494140625, -2.5 ], [ 12.916656494140625, -2.5 ], [ 13.33331298828125, -2.5 ], [ 14.166656494140625, -2.5 ], [ 14.58331298828125, -2.5 ], [ 14.58331298828125, -2.0833282470703125 ], [ 15, -2.0833282470703125 ], [ 15, -1.25 ], [ 15.416656494140625, -0.8333282470703125 ], [ 15.416656494140625, -0.4166717529296875 ], [ 15.83331298828125, 0.8333282470703125 ], [ 15.83331298828125, 1.6666717529296875 ], [ 15.83331298828125, 2.5 ], [ 15.83331298828125, 3.75 ], [ 15.83331298828125, 5.4166717529296875 ], [ 15.83331298828125, 6.6666717529296875 ], [ 15.416656494140625, 7.9166717529296875 ], [ 14.58331298828125, 9.166671752929688 ], [ 13.75, 10.41668701171875 ], [ 12.916656494140625, 11.66668701171875 ], [ 11.666656494140625, 12.5 ], [ 10.416656494140625, 13.333328247070312 ], [ 9.166656494140625, 14.583328247070312 ], [ 7.916656494140625, 15 ], [ 6.666656494140625, 15.833328247070312 ], [ 5.416656494140625, 16.25 ], [ 5, 16.66668701171875 ], [ 4.166656494140625, 17.083328247070312 ], [ 3.33331298828125, 17.5 ], [ 2.916656494140625, 17.91668701171875 ], [ 2.5, 18.333328247070312 ], [ 2.08331298828125, 18.333328247070312 ], [ 2.08331298828125, 18.75 ], [ 2.5, 18.75 ], [ 2.916656494140625, 19.16668701171875 ], [ 4.166656494140625, 19.16668701171875 ], [ 5.83331298828125, 19.583328247070312 ], [ 7.916656494140625, 20 ], [ 10.416656494140625, 20.41668701171875 ], [ 13.33331298828125, 20.833328247070312 ], [ 16.25, 21.25 ], [ 18.75, 21.25 ], [ 21.25, 21.25 ], [ 23.33331298828125, 21.25 ], [ 25.416656494140625, 21.25 ], [ 25.83331298828125, 21.25 ], [ 26.666656494140625, 21.25 ], [ 27.08331298828125, 21.25 ], [ 27.08331298828125, 20.833328247070312 ], [ 27.08331298828125, 20.833328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 27.08331298828125, 20.833328247070312 ] }, { \"id\": \"Y7jdsUo9zbU2pdZbKHCxa\", \"type\": \"freedraw\", \"x\": -549.605499341292, \"y\": -34.26939567932496, \"width\": 20, \"height\": 33.33332824707031, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 710229909, \"version\": 96, \"versionNonce\": 691891669, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, 0 ], [ 0.416656494140625, -0.4166717529296875 ], [ 0.83331298828125, -0.4166717529296875 ], [ 0.83331298828125, -0.8333282470703125 ], [ 1.666656494140625, -1.25 ], [ 1.666656494140625, -1.6666717529296875 ], [ 2.08331298828125, -2.0833282470703125 ], [ 2.08331298828125, -2.5 ], [ 2.5, -2.9166717529296875 ], [ 2.5, -3.3333282470703125 ], [ 2.5, -4.1666717529296875 ], [ 2.916656494140625, -4.5833282470703125 ], [ 3.33331298828125, -5 ], [ 3.33331298828125, -6.25 ], [ 3.75, -6.6666717529296875 ], [ 3.75, -7.5 ], [ 3.75, -8.333328247070312 ], [ 4.166656494140625, -9.166671752929688 ], [ 4.58331298828125, -10 ], [ 5, -10.833328247070312 ], [ 5.416656494140625, -11.666671752929688 ], [ 5.83331298828125, -12.5 ], [ 5.83331298828125, -12.916671752929688 ], [ 6.666656494140625, -13.333328247070312 ], [ 7.08331298828125, -14.166671752929688 ], [ 7.5, -15 ], [ 8.33331298828125, -15.416671752929688 ], [ 9.166656494140625, -16.25 ], [ 9.58331298828125, -16.666671752929688 ], [ 10.416656494140625, -17.083328247070312 ], [ 11.25, -17.5 ], [ 12.08331298828125, -17.916671752929688 ], [ 12.916656494140625, -17.916671752929688 ], [ 13.75, -18.333328247070312 ], [ 14.58331298828125, -18.333328247070312 ], [ 15.416656494140625, -18.333328247070312 ], [ 15.83331298828125, -18.333328247070312 ], [ 16.25, -18.333328247070312 ], [ 17.08331298828125, -18.333328247070312 ], [ 17.5, -17.5 ], [ 17.5, -17.083328247070312 ], [ 17.916656494140625, -16.25 ], [ 17.916656494140625, -15 ], [ 17.916656494140625, -13.75 ], [ 17.916656494140625, -12.5 ], [ 17.916656494140625, -11.25 ], [ 17.916656494140625, -9.583328247070312 ], [ 17.916656494140625, -7.9166717529296875 ], [ 17.5, -6.25 ], [ 16.666656494140625, -5 ], [ 16.25, -3.3333282470703125 ], [ 15.83331298828125, -1.6666717529296875 ], [ 15, 0 ], [ 14.58331298828125, 1.66668701171875 ], [ 13.33331298828125, 3.3333282470703125 ], [ 12.5, 4.5833282470703125 ], [ 11.666656494140625, 5.41668701171875 ], [ 10.83331298828125, 6.66668701171875 ], [ 10, 7.5 ], [ 9.166656494140625, 8.333328247070312 ], [ 8.33331298828125, 8.75 ], [ 7.5, 9.16668701171875 ], [ 6.666656494140625, 10 ], [ 5.83331298828125, 10 ], [ 5.416656494140625, 10.41668701171875 ], [ 4.58331298828125, 10.41668701171875 ], [ 4.166656494140625, 10.833328247070312 ], [ 3.75, 10.833328247070312 ], [ 3.33331298828125, 10.833328247070312 ], [ 3.33331298828125, 11.25 ], [ 2.916656494140625, 11.25 ], [ 2.916656494140625, 11.66668701171875 ], [ 3.75, 12.083328247070312 ], [ 4.166656494140625, 12.5 ], [ 5.416656494140625, 12.91668701171875 ], [ 6.666656494140625, 12.91668701171875 ], [ 7.916656494140625, 13.333328247070312 ], [ 9.166656494140625, 13.75 ], [ 10.83331298828125, 14.16668701171875 ], [ 12.5, 14.16668701171875 ], [ 14.166656494140625, 14.583328247070312 ], [ 15.416656494140625, 14.583328247070312 ], [ 16.25, 14.583328247070312 ], [ 17.5, 15 ], [ 18.33331298828125, 15 ], [ 19.166656494140625, 15 ], [ 19.58331298828125, 15 ], [ 20, 15 ], [ 20, 14.583328247070312 ], [ 20, 14.16668701171875 ], [ 20, 13.75 ], [ 20, 13.333328247070312 ], [ 20, 13.333328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 20, 13.333328247070312 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#2b8a3e\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"center\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Find Executable.excalidraw"},{"location":"COM326/Classes/Notes/Find%20Executable.excalidraw/#text-elements","text":"Mouse right Click on the tab of the file that you wish to locate ^Sz1IjLHV This will open the folder in Explorer containing the file ^kHY2eSku To find the .exe file you need to go back up one folder and then go into the x64 folder ^RevlsSzw You should then be able to see the .exe that has been created ^23OwhW4r","title":"Text Elements"},{"location":"COM326/Classes/Notes/Find%20Executable.excalidraw/#embedded-files","text":"594f45536ae95ffd83e41644efc573669647dee6: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830094802_231.png c7c6918c650505b041536050a1a85fab76bcead5: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830095333_707.png 73e4eb7104cd12648b9a5207afccf88e15aa3d80: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830095443_920.png 73e2218858deb47b3bf7b2a9681f91c4ca1dc542: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830100007_573.png %%","title":"Embedded files"},{"location":"COM326/Classes/Notes/Find%20Executable.excalidraw/#drawing","text":"{ \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"type\": \"image\", \"version\": 268, \"versionNonce\": 198957467, \"isDeleted\": false, \"id\": \"D3EUmFyIQcwqbIjaSGlvv\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -352.4427270411596, \"y\": -123.06398701023409, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 196.19404753746346, \"height\": 201.49658936280028, \"seed\": 1880680795, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"73e2218858deb47b3bf7b2a9681f91c4ca1dc542\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 650, \"versionNonce\": 329015701, \"isDeleted\": false, \"id\": \"735TEYeHx3OXLpl3PZ4Ry\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -602.9604220920139, \"y\": 46.195090430375075, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 248.64282429379216, \"height\": 147.3949152323311, \"seed\": 531513179, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"594f45536ae95ffd83e41644efc573669647dee6\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 557, \"versionNonce\": 1275326011, \"isDeleted\": false, \"id\": \"jRlJE6CJh2b_4Cb85YEk4\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -280.18673598150014, \"y\": 87.69183052910694, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 228.3856933964785, \"height\": 200.3703816731771, \"seed\": 369748117, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [ { \"id\": \"EsRqUxDl1KFLBdL6vhePK\", \"type\": \"arrow\" } ], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"c7c6918c650505b041536050a1a85fab76bcead5\", \"scale\": [ 1, 1 ] }, { \"type\": \"image\", \"version\": 375, \"versionNonce\": 1495623413, \"isDeleted\": false, \"id\": \"ExRK2haPJEyi1OuapzgjA\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -92.03091106322654, \"y\": -68.93779627482095, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"width\": 198.48765903049048, \"height\": 119.09259541829428, \"seed\": 673914939, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"73e4eb7104cd12648b9a5207afccf88e15aa3d80\", \"scale\": [ 1, 1 ] }, { \"type\": \"arrow\", \"version\": 1338, \"versionNonce\": 1132490459, \"isDeleted\": false, \"id\": \"eTi163bL2txspB1ADzm8V\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -447.03091106322654, \"y\": 56.581911591492684, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 114.27740947881574, \"height\": 71.61722366982505, \"seed\": 826145211, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"startBinding\": null, \"endBinding\": { \"elementId\": \"kHY2eSku\", \"focus\": -0.8637164350484304, \"gap\": 1 }, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 114.27740947881574, -71.61722366982505 ] ] }, { \"type\": \"arrow\", \"version\": 377, \"versionNonce\": 103202901, \"isDeleted\": false, \"id\": \"EsRqUxDl1KFLBdL6vhePK\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -282.67896878892105, \"y\": 61.4880646599664, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 49.536946614583314, \"height\": 162.5000169542101, \"seed\": 718932181, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252606, \"link\": null, \"locked\": false, \"startBinding\": { \"elementId\": \"jRlJE6CJh2b_4Cb85YEk4\", \"focus\": 0.5400013644467799, \"gap\": 26.20376586914054 }, \"endBinding\": null, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 49.536946614583314, 162.5000169542101 ] ] }, { \"type\": \"arrow\", \"version\": 189, \"versionNonce\": 1692654459, \"isDeleted\": false, \"id\": \"qHF74U6dsr--BA7aEj96l\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -98.88278552069187, \"y\": 129.54367107815216, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"width\": 47.684936523437614, \"height\": 113.42595418294275, \"seed\": 1838001915, \"groupIds\": [], \"strokeSharpness\": \"round\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"startBinding\": null, \"endBinding\": null, \"lastCommittedPoint\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\", \"points\": [ [ 0, 0 ], [ 47.684936523437614, -113.42595418294275 ] ] }, { \"type\": \"text\", \"version\": 438, \"versionNonce\": 813034933, \"isDeleted\": false, \"id\": \"Sz1IjLHV\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -516.0123360306745, \"y\": 174.71043947007928, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 189, \"height\": 60, \"seed\": 1301762293, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.756174723307295, \"fontFamily\": 1, \"text\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\", \"rawText\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\", \"baseline\": 54, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"Mouse right Click on \\nthe tab of the file \\nthat you wish to locate\" }, { \"type\": \"text\", \"version\": 1219, \"versionNonce\": 745583643, \"isDeleted\": false, \"id\": \"kHY2eSku\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -504.0586718867943, \"y\": -55.998272215593644, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 171, \"height\": 52, \"seed\": 1892386619, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [ { \"id\": \"eTi163bL2txspB1ADzm8V\", \"type\": \"arrow\" } ], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 13.76493337761117, \"fontFamily\": 1, \"text\": \"This will open the folder \\nin Explorer containing \\nthe file\", \"rawText\": \"This will open the folder \\nin Explorer containing \\nthe file\", \"baseline\": 48, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"This will open the folder \\nin Explorer containing \\nthe file\" }, { \"type\": \"text\", \"version\": 1386, \"versionNonce\": 389574421, \"isDeleted\": false, \"id\": \"RevlsSzw\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -141.0587905662647, \"y\": 247.85849719577362, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 195, \"height\": 80, \"seed\": 537916635, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.93397942142208, \"fontFamily\": 1, \"text\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \", \"rawText\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \", \"baseline\": 74, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"To find the .exe file you\\n need to go back up one\\nfolder and then go into\\nthe x64 folder \" }, { \"type\": \"text\", \"version\": 380, \"versionNonce\": 1780054203, \"isDeleted\": false, \"id\": \"23OwhW4r\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"angle\": 0, \"x\": -41.75320110228893, \"y\": 41.377004411485444, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"width\": 187, \"height\": 57, \"seed\": 862935739, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"boundElements\": [], \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"fontSize\": 15.275884442318576, \"fontFamily\": 1, \"text\": \"You should then be able \\nto see the .exe \\nthat has been created\", \"rawText\": \"You should then be able \\nto see the .exe \\nthat has been created\", \"baseline\": 52, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"containerId\": null, \"originalText\": \"You should then be able \\nto see the .exe \\nthat has been created\" }, { \"id\": \"G6Fje1i6U8j0_ov6IYeZ3\", \"type\": \"freedraw\", \"x\": -556.6888428471514, \"y\": 207.39730659118285, \"width\": 12.083343505859375, \"height\": 27.083282470703125, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 201702427, \"version\": 43, \"versionNonce\": 1266723163, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, -0.416717529296875 ], [ 0.416656494140625, -0.8333740234375 ], [ 0.833343505859375, -1.25 ], [ 1.666656494140625, -1.666717529296875 ], [ 2.5, -2.5 ], [ 3.75, -2.916717529296875 ], [ 4.166656494140625, -3.75 ], [ 5.416656494140625, -5 ], [ 6.25, -5.8333740234375 ], [ 7.083343505859375, -6.666717529296875 ], [ 7.916656494140625, -7.5 ], [ 8.75, -7.916717529296875 ], [ 9.583343505859375, -8.75 ], [ 10.416656494140625, -9.5833740234375 ], [ 10.833343505859375, -9.5833740234375 ], [ 10.833343505859375, -10 ], [ 11.25, -10 ], [ 11.25, -9.5833740234375 ], [ 11.666656494140625, -9.166717529296875 ], [ 11.666656494140625, -8.3333740234375 ], [ 11.666656494140625, -7.0833740234375 ], [ 11.666656494140625, -5.8333740234375 ], [ 11.666656494140625, -4.166717529296875 ], [ 12.083343505859375, -2.5 ], [ 12.083343505859375, -0.416717529296875 ], [ 12.083343505859375, 2.083282470703125 ], [ 12.083343505859375, 4.1666259765625 ], [ 12.083343505859375, 6.6666259765625 ], [ 12.083343505859375, 8.75 ], [ 12.083343505859375, 10.833282470703125 ], [ 12.083343505859375, 12.5 ], [ 12.083343505859375, 13.75 ], [ 12.083343505859375, 15 ], [ 12.083343505859375, 15.833282470703125 ], [ 12.083343505859375, 16.25 ], [ 12.083343505859375, 17.083282470703125 ], [ 12.083343505859375, 17.083282470703125 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 12.083343505859375, 17.083282470703125 ] }, { \"id\": \"VVB6HccXO04RjZoWETxiN\", \"type\": \"freedraw\", \"x\": -548.355499341292, \"y\": -37.60272392639527, \"width\": 25, \"height\": 30, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 637060603, \"version\": 80, \"versionNonce\": 1307112661, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850253897, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -0.41668701171875, 0 ], [ -0.833343505859375, 0 ], [ -1.25, 0 ], [ -1.66668701171875, 0 ], [ -2.083343505859375, -0.4166717529296875 ], [ -2.5, -0.4166717529296875 ], [ -2.5, -0.833343505859375 ], [ -2.5, -1.25 ], [ -2.5, -2.083343505859375 ], [ -2.5, -2.5 ], [ -2.5, -2.9166717529296875 ], [ -1.66668701171875, -3.75 ], [ -1.66668701171875, -4.583343505859375 ], [ -1.25, -5.833343505859375 ], [ -1.25, -6.6666717529296875 ], [ -0.833343505859375, -7.5 ], [ -0.833343505859375, -7.9166717529296875 ], [ -0.41668701171875, -8.75 ], [ 0, -9.166671752929688 ], [ 0.416656494140625, -9.166671752929688 ], [ 0.83331298828125, -9.583343505859375 ], [ 1.666656494140625, -10 ], [ 2.08331298828125, -10.416671752929688 ], [ 2.916656494140625, -10.416671752929688 ], [ 3.75, -10.833343505859375 ], [ 4.58331298828125, -10.833343505859375 ], [ 5.416656494140625, -10.833343505859375 ], [ 6.25, -10.833343505859375 ], [ 7.08331298828125, -10.833343505859375 ], [ 7.5, -10.833343505859375 ], [ 7.916656494140625, -10.833343505859375 ], [ 8.33331298828125, -10.833343505859375 ], [ 8.75, -10 ], [ 9.166656494140625, -9.583343505859375 ], [ 9.58331298828125, -8.75 ], [ 10, -7.9166717529296875 ], [ 10.416656494140625, -7.083343505859375 ], [ 10.83331298828125, -6.25 ], [ 11.25, -5 ], [ 11.25, -4.1666717529296875 ], [ 11.666656494140625, -3.333343505859375 ], [ 11.666656494140625, -2.083343505859375 ], [ 11.666656494140625, -0.833343505859375 ], [ 11.666656494140625, 0.416656494140625 ], [ 11.666656494140625, 1.25 ], [ 11.25, 2.916656494140625 ], [ 10.83331298828125, 4.166656494140625 ], [ 10, 5.8333282470703125 ], [ 9.58331298828125, 7.5000152587890625 ], [ 8.33331298828125, 9.166656494140625 ], [ 7.916656494140625, 10.833328247070312 ], [ 7.5, 12.500015258789062 ], [ 5, 15.416656494140625 ], [ 4.58331298828125, 15.833328247070312 ], [ 4.166656494140625, 16.666656494140625 ], [ 3.33331298828125, 17.500015258789062 ], [ 2.916656494140625, 17.916656494140625 ], [ 2.916656494140625, 18.333328247070312 ], [ 2.5, 18.750015258789062 ], [ 2.5, 19.166656494140625 ], [ 2.916656494140625, 19.166656494140625 ], [ 3.33331298828125, 19.166656494140625 ], [ 4.166656494140625, 19.166656494140625 ], [ 5.416656494140625, 19.166656494140625 ], [ 6.25, 18.750015258789062 ], [ 7.916656494140625, 18.750015258789062 ], [ 9.166656494140625, 18.750015258789062 ], [ 10.83331298828125, 18.750015258789062 ], [ 12.916656494140625, 18.333328247070312 ], [ 15, 18.333328247070312 ], [ 16.666656494140625, 17.916656494140625 ], [ 18.33331298828125, 17.916656494140625 ], [ 20, 17.500015258789062 ], [ 20.83331298828125, 17.500015258789062 ], [ 21.25, 17.500015258789062 ], [ 22.08331298828125, 17.500015258789062 ], [ 22.5, 17.500015258789062 ], [ 22.5, 17.500015258789062 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 22.5, 17.500015258789062 ] }, { \"id\": \"tMWEYZVEzLGNA-6FMTNmQ\", \"type\": \"freedraw\", \"x\": -177.10543830613574, \"y\": 275.3139325677454, \"width\": 19.16656494140625, \"height\": 33.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 418197243, \"version\": 129, \"versionNonce\": 1149884155, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850259712, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.833343505859375 ], [ 0.41656494140625, -0.833343505859375 ], [ 0.833251953125, -1.25 ], [ 1.25, -1.25 ], [ 1.66656494140625, -1.666656494140625 ], [ 2.083251953125, -1.666656494140625 ], [ 2.91656494140625, -2.083343505859375 ], [ 3.75, -2.5 ], [ 4.583251953125, -2.5 ], [ 5.833251953125, -2.5 ], [ 6.25, -2.916656494140625 ], [ 7.083251953125, -2.916656494140625 ], [ 7.91656494140625, -2.916656494140625 ], [ 8.333251953125, -2.916656494140625 ], [ 9.16656494140625, -2.916656494140625 ], [ 10, -2.916656494140625 ], [ 10.833251953125, -2.916656494140625 ], [ 11.66656494140625, -2.916656494140625 ], [ 12.5, -2.5 ], [ 12.91656494140625, -2.083343505859375 ], [ 13.333251953125, -2.083343505859375 ], [ 14.16656494140625, -1.666656494140625 ], [ 14.583251953125, -1.25 ], [ 15, -0.833343505859375 ], [ 15.833251953125, -0.416656494140625 ], [ 15.833251953125, 0 ], [ 16.25, 0 ], [ 16.66656494140625, 0.416656494140625 ], [ 17.083251953125, 1.25 ], [ 17.5, 1.666656494140625 ], [ 17.5, 2.083343505859375 ], [ 17.91656494140625, 2.916656494140625 ], [ 17.91656494140625, 3.333343505859375 ], [ 17.91656494140625, 3.75 ], [ 17.91656494140625, 4.583343505859375 ], [ 17.91656494140625, 5 ], [ 17.91656494140625, 5.833343505859375 ], [ 17.5, 6.25 ], [ 17.083251953125, 6.666656494140625 ], [ 16.66656494140625, 7.5 ], [ 16.25, 7.916656494140625 ], [ 15.41656494140625, 8.333343505859375 ], [ 15, 8.75 ], [ 14.583251953125, 9.166656494140625 ], [ 13.75, 9.583343505859375 ], [ 12.91656494140625, 10 ], [ 12.083251953125, 10.416656494140625 ], [ 11.25, 10.833343505859375 ], [ 10.833251953125, 11.666656494140625 ], [ 9.583251953125, 12.083343505859375 ], [ 8.75, 12.5 ], [ 7.91656494140625, 12.916656494140625 ], [ 7.083251953125, 13.333343505859375 ], [ 6.25, 13.75 ], [ 5.41656494140625, 13.75 ], [ 4.583251953125, 14.166656494140625 ], [ 4.16656494140625, 14.166656494140625 ], [ 3.75, 14.166656494140625 ], [ 4.16656494140625, 14.166656494140625 ], [ 4.583251953125, 14.166656494140625 ], [ 5.833251953125, 14.166656494140625 ], [ 6.25, 14.166656494140625 ], [ 7.5, 14.583343505859375 ], [ 8.333251953125, 14.583343505859375 ], [ 9.16656494140625, 15 ], [ 10.41656494140625, 15 ], [ 10.833251953125, 15.416656494140625 ], [ 11.66656494140625, 15.416656494140625 ], [ 12.083251953125, 15.833343505859375 ], [ 12.5, 15.833343505859375 ], [ 12.91656494140625, 16.25 ], [ 13.333251953125, 16.666656494140625 ], [ 13.75, 16.666656494140625 ], [ 14.16656494140625, 17.083343505859375 ], [ 14.583251953125, 17.5 ], [ 15, 18.333343505859375 ], [ 15, 18.75 ], [ 15.833251953125, 19.166656494140625 ], [ 15.833251953125, 19.583343505859375 ], [ 16.25, 20 ], [ 16.66656494140625, 20.416656494140625 ], [ 17.91656494140625, 21.666656494140625 ], [ 17.91656494140625, 22.083343505859375 ], [ 18.333251953125, 22.5 ], [ 18.75, 22.916656494140625 ], [ 19.16656494140625, 22.916656494140625 ], [ 19.16656494140625, 23.75 ], [ 19.16656494140625, 24.166656494140625 ], [ 19.16656494140625, 24.583343505859375 ], [ 19.16656494140625, 25.416656494140625 ], [ 19.16656494140625, 25.833343505859375 ], [ 19.16656494140625, 26.25 ], [ 19.16656494140625, 27.083343505859375 ], [ 18.75, 27.083343505859375 ], [ 18.333251953125, 27.5 ], [ 18.333251953125, 27.916656494140625 ], [ 17.91656494140625, 28.75 ], [ 17.083251953125, 28.75 ], [ 16.66656494140625, 29.166656494140625 ], [ 16.25, 29.583343505859375 ], [ 15.41656494140625, 29.583343505859375 ], [ 15, 30 ], [ 13.75, 30 ], [ 13.333251953125, 30.416656494140625 ], [ 12.5, 30.416656494140625 ], [ 11.66656494140625, 30.416656494140625 ], [ 11.25, 30.833343505859375 ], [ 10.41656494140625, 30.833343505859375 ], [ 9.583251953125, 30.833343505859375 ], [ 9.16656494140625, 30.833343505859375 ], [ 8.333251953125, 30.833343505859375 ], [ 7.5, 30.833343505859375 ], [ 6.66656494140625, 30.833343505859375 ], [ 6.25, 30.833343505859375 ], [ 5.41656494140625, 30.833343505859375 ], [ 3.75, 30.833343505859375 ], [ 3.333251953125, 30.833343505859375 ], [ 2.91656494140625, 30.833343505859375 ], [ 2.5, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ], [ 1.25, 30.833343505859375 ], [ 0.833251953125, 30.833343505859375 ], [ 0.41656494140625, 30.833343505859375 ], [ 0.833251953125, 30.833343505859375 ], [ 1.25, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ], [ 1.66656494140625, 30.833343505859375 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 1.66656494140625, 30.833343505859375 ] }, { \"id\": \"MGcMmZ8cty5DuNC4phLna\", \"type\": \"freedraw\", \"x\": -60.85549934129199, \"y\": 66.56393256774535, \"width\": 17.5, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 48196149, \"version\": 52, \"versionNonce\": 1498092347, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850262082, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.416656494140625 ], [ 0, 0.833343505859375 ], [ 0.4166259765625, 1.25 ], [ 0.4166259765625, 2.083343505859375 ], [ 0.4166259765625, 2.916656494140625 ], [ 0.4166259765625, 4.166656494140625 ], [ 0.4166259765625, 5.416656494140625 ], [ 0.4166259765625, 6.25 ], [ 0.4166259765625, 7.916656494140625 ], [ 0.4166259765625, 9.166656494140625 ], [ 0.4166259765625, 10.416656494140625 ], [ 0.4166259765625, 11.666656494140625 ], [ 0.4166259765625, 12.916656494140625 ], [ 0.4166259765625, 14.166656494140625 ], [ 0.4166259765625, 15 ], [ 0, 16.25 ], [ 0, 17.083343505859375 ], [ -0.41668701171875, 18.333343505859375 ], [ -0.41668701171875, 18.75 ], [ -0.41668701171875, 19.583343505859375 ], [ -0.41668701171875, 20.416656494140625 ], [ -0.8333740234375, 20.416656494140625 ], [ -0.8333740234375, 21.25 ], [ -0.8333740234375, 21.666656494140625 ], [ -0.8333740234375, 22.083343505859375 ], [ -0.8333740234375, 22.5 ], [ -0.8333740234375, 22.916656494140625 ], [ -0.8333740234375, 23.333343505859375 ], [ -0.41668701171875, 23.333343505859375 ], [ 0, 23.333343505859375 ], [ 0.83331298828125, 23.75 ], [ 2.08331298828125, 23.75 ], [ 3.33331298828125, 23.75 ], [ 4.58331298828125, 23.75 ], [ 6.25, 24.166656494140625 ], [ 7.5, 24.166656494140625 ], [ 9.1666259765625, 24.166656494140625 ], [ 10.83331298828125, 24.166656494140625 ], [ 12.08331298828125, 24.166656494140625 ], [ 12.9166259765625, 24.166656494140625 ], [ 13.33331298828125, 24.166656494140625 ], [ 13.75, 24.166656494140625 ], [ 14.1666259765625, 24.166656494140625 ], [ 14.58331298828125, 24.166656494140625 ], [ 14.58331298828125, 24.583343505859375 ], [ 15, 24.583343505859375 ], [ 15.83331298828125, 24.583343505859375 ], [ 16.25, 25 ], [ 16.6666259765625, 25 ], [ 16.6666259765625, 25 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 16.6666259765625, 25 ] }, { \"id\": \"Gwrlss3R-1JOHCl04Lk5b\", \"type\": \"freedraw\", \"x\": -48.77218635301074, \"y\": 78.23058906188598, \"width\": 4.58331298828125, \"height\": 23.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 51319285, \"version\": 26, \"versionNonce\": 900227931, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661850262815, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.41668701171875 ], [ 0, 0.833343505859375 ], [ 0, 1.25 ], [ 0, 1.66668701171875 ], [ 0, 2.5 ], [ 0, 2.91668701171875 ], [ 0, 3.75 ], [ -0.41668701171875, 5 ], [ -0.41668701171875, 6.25 ], [ -0.83331298828125, 7.91668701171875 ], [ -1.25, 9.16668701171875 ], [ -1.66668701171875, 11.25 ], [ -2.08331298828125, 12.5 ], [ -2.08331298828125, 14.16668701171875 ], [ -2.5, 15.41668701171875 ], [ -2.5, 17.083343505859375 ], [ -2.91668701171875, 18.333343505859375 ], [ -3.33331298828125, 19.583343505859375 ], [ -3.33331298828125, 20.41668701171875 ], [ -3.75, 21.25 ], [ -4.16668701171875, 22.91668701171875 ], [ -4.16668701171875, 23.333343505859375 ], [ -4.58331298828125, 23.75 ], [ -4.58331298828125, 23.75 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -4.58331298828125, 23.75 ] }, { \"id\": \"1N7qlOl_ZA0AEJhc0VAqN\", \"type\": \"freedraw\", \"x\": -549.1888428471514, \"y\": 204.89730659118285, \"width\": 7.083343505859375, \"height\": 24.166717529296875, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1571131259, \"version\": 59, \"versionNonce\": 2028192885, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, 0 ], [ 0.416656494140625, -0.416717529296875 ], [ 1.25, -0.8333740234375 ], [ 1.666656494140625, -1.25 ], [ 2.083343505859375, -1.666717529296875 ], [ 2.916656494140625, -2.5 ], [ 3.333343505859375, -2.916717529296875 ], [ 4.166656494140625, -3.75 ], [ 4.583343505859375, -4.166717529296875 ], [ 5.416656494140625, -4.5833740234375 ], [ 5.833343505859375, -5.416717529296875 ], [ 6.25, -5.416717529296875 ], [ 6.666656494140625, -5.8333740234375 ], [ 6.666656494140625, -6.25 ], [ 7.083343505859375, -6.25 ], [ 7.083343505859375, -6.666717529296875 ], [ 7.083343505859375, -5.8333740234375 ], [ 7.083343505859375, -4.5833740234375 ], [ 7.083343505859375, -4.166717529296875 ], [ 7.083343505859375, -3.3333740234375 ], [ 7.083343505859375, -2.5 ], [ 6.666656494140625, -1.25 ], [ 6.25, 0 ], [ 5.833343505859375, 0.833282470703125 ], [ 5.833343505859375, 2.083282470703125 ], [ 5.416656494140625, 3.333282470703125 ], [ 5.416656494140625, 4.1666259765625 ], [ 5.416656494140625, 5 ], [ 5.416656494140625, 5.833282470703125 ], [ 5, 6.6666259765625 ], [ 5, 7.5 ], [ 5, 7.9166259765625 ], [ 5, 9.1666259765625 ], [ 5, 10 ], [ 5, 10.833282470703125 ], [ 5, 11.6666259765625 ], [ 5, 12.5 ], [ 5, 12.9166259765625 ], [ 5, 13.75 ], [ 4.583343505859375, 14.1666259765625 ], [ 4.583343505859375, 14.583282470703125 ], [ 4.583343505859375, 15 ], [ 4.583343505859375, 15.4166259765625 ], [ 4.583343505859375, 15.833282470703125 ], [ 5, 15.833282470703125 ], [ 5, 16.25 ], [ 5, 16.6666259765625 ], [ 5, 17.083282470703125 ], [ 5.416656494140625, 17.5 ], [ 5.416656494140625, 17.083282470703125 ], [ 5.833343505859375, 16.6666259765625 ], [ 5.833343505859375, 16.6666259765625 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 5.833343505859375, 16.6666259765625 ] }, { \"id\": \"Qx6kDv6yMVkOJHleDVXbz\", \"type\": \"freedraw\", \"x\": -536.6888428471514, \"y\": -48.85272392639527, \"width\": 28.75, \"height\": 31.66668701171875, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 12966197, \"version\": 68, \"versionNonce\": 585269301, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850245534, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.4166717529296875 ], [ 0.416656494140625, -0.833343505859375 ], [ 0.833343505859375, -0.833343505859375 ], [ 0.833343505859375, -1.25 ], [ 1.25, -1.6666717529296875 ], [ 2.083343505859375, -2.083343505859375 ], [ 2.5, -2.5 ], [ 3.333343505859375, -2.5 ], [ 4.166656494140625, -2.9166717529296875 ], [ 5, -2.9166717529296875 ], [ 5.833343505859375, -2.9166717529296875 ], [ 7.083343505859375, -2.9166717529296875 ], [ 8.333343505859375, -2.9166717529296875 ], [ 10, -2.9166717529296875 ], [ 12.083343505859375, -2.9166717529296875 ], [ 13.75, -2.9166717529296875 ], [ 15, -2.5 ], [ 15.833343505859375, -2.083343505859375 ], [ 16.666656494140625, -1.6666717529296875 ], [ 17.5, -1.25 ], [ 17.916656494140625, -0.833343505859375 ], [ 17.916656494140625, -0.4166717529296875 ], [ 18.333343505859375, 0.416656494140625 ], [ 18.75, 1.25 ], [ 18.75, 2.5 ], [ 18.75, 3.75 ], [ 18.75, 5 ], [ 18.75, 6.25 ], [ 18.75, 7.5 ], [ 18.333343505859375, 9.166656494140625 ], [ 17.916656494140625, 10.416656494140625 ], [ 17.083343505859375, 11.666656494140625 ], [ 16.25, 12.916656494140625 ], [ 15.416656494140625, 14.166656494140625 ], [ 14.583343505859375, 15.416656494140625 ], [ 13.75, 15.833328247070312 ], [ 12.916656494140625, 17.083328247070312 ], [ 11.666656494140625, 17.500015258789062 ], [ 10.416656494140625, 18.333328247070312 ], [ 9.583343505859375, 18.750015258789062 ], [ 8.75, 19.166656494140625 ], [ 7.916656494140625, 19.583328247070312 ], [ 7.5, 20.000015258789062 ], [ 7.083343505859375, 20.416656494140625 ], [ 6.666656494140625, 20.833328247070312 ], [ 6.25, 20.833328247070312 ], [ 6.25, 21.250015258789062 ], [ 5.833343505859375, 21.250015258789062 ], [ 5.833343505859375, 21.666656494140625 ], [ 8.75, 22.500015258789062 ], [ 10.416656494140625, 23.333328247070312 ], [ 11.666656494140625, 23.750015258789062 ], [ 13.333343505859375, 24.166656494140625 ], [ 15.416656494140625, 24.583328247070312 ], [ 17.5, 25.416656494140625 ], [ 19.583343505859375, 26.250015258789062 ], [ 21.666656494140625, 27.083328247070312 ], [ 23.333343505859375, 27.500015258789062 ], [ 24.583343505859375, 27.500015258789062 ], [ 26.25, 28.333328247070312 ], [ 27.5, 28.750015258789062 ], [ 28.333343505859375, 28.750015258789062 ], [ 28.75, 28.750015258789062 ], [ 28.75, 28.333328247070312 ], [ 28.75, 28.333328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 28.75, 28.333328247070312 ] }, { \"id\": \"_h0KEG6H4nwI3APSyBHei\", \"type\": \"freedraw\", \"x\": -541.6888428471514, \"y\": -45.51939567932496, \"width\": 22.083343505859375, \"height\": 23.333358764648438, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1387039131, \"version\": 64, \"versionNonce\": 1558326619, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850247659, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 0.4166717529296875 ], [ 0.416656494140625, 0.4166717529296875 ], [ 0.833343505859375, 0.4166717529296875 ], [ 1.666656494140625, 0.4166717529296875 ], [ 2.5, 0.4166717529296875 ], [ 3.333343505859375, 0.4166717529296875 ], [ 5, 0.4166717529296875 ], [ 6.25, 0 ], [ 7.916656494140625, 0 ], [ 9.583343505859375, -0.4166717529296875 ], [ 11.25, -0.4166717529296875 ], [ 12.916656494140625, -0.4166717529296875 ], [ 14.166656494140625, -0.4166717529296875 ], [ 15, -0.4166717529296875 ], [ 16.25, -0.4166717529296875 ], [ 16.666656494140625, -0.4166717529296875 ], [ 17.5, -0.4166717529296875 ], [ 18.333343505859375, 0 ], [ 18.75, 0.8333282470703125 ], [ 18.75, 1.6666717529296875 ], [ 19.166656494140625, 2.9166717529296875 ], [ 19.166656494140625, 4.1666717529296875 ], [ 19.166656494140625, 6.25 ], [ 18.75, 7.9166717529296875 ], [ 17.916656494140625, 9.583328247070312 ], [ 17.5, 11.66668701171875 ], [ 16.666656494140625, 13.333328247070312 ], [ 15.833343505859375, 15 ], [ 15, 15.41668701171875 ], [ 14.166656494140625, 16.25 ], [ 13.333343505859375, 17.083328247070312 ], [ 12.5, 17.5 ], [ 11.666656494140625, 17.5 ], [ 10.416656494140625, 17.91668701171875 ], [ 10, 17.91668701171875 ], [ 9.166656494140625, 18.333328247070312 ], [ 8.75, 18.333328247070312 ], [ 8.333343505859375, 18.333328247070312 ], [ 8.333343505859375, 18.75 ], [ 8.333343505859375, 19.16668701171875 ], [ 8.333343505859375, 19.583328247070312 ], [ 8.333343505859375, 20 ], [ 8.333343505859375, 20.41668701171875 ], [ 8.333343505859375, 20.833328247070312 ], [ 8.75, 21.66668701171875 ], [ 9.166656494140625, 22.083328247070312 ], [ 10, 22.5 ], [ 10.833343505859375, 22.5 ], [ 11.666656494140625, 22.5 ], [ 12.916656494140625, 22.91668701171875 ], [ 14.166656494140625, 22.91668701171875 ], [ 15.416656494140625, 22.91668701171875 ], [ 17.083343505859375, 22.91668701171875 ], [ 17.916656494140625, 22.91668701171875 ], [ 19.166656494140625, 22.91668701171875 ], [ 20, 22.91668701171875 ], [ 20.833343505859375, 22.91668701171875 ], [ 21.666656494140625, 22.91668701171875 ], [ 22.083343505859375, 22.91668701171875 ], [ 22.083343505859375, 22.5 ], [ 22.083343505859375, 22.5 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 22.083343505859375, 22.5 ] }, { \"id\": \"GVxvr5y2hqNd5f0HGNZTe\", \"type\": \"freedraw\", \"x\": -545.855499341292, \"y\": -44.26939567932496, \"width\": 27.08331298828125, \"height\": 23.75, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2074487253, \"version\": 71, \"versionNonce\": 167779227, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850250267, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -0.4166717529296875 ], [ 0.416656494140625, -0.8333282470703125 ], [ 0.83331298828125, -1.25 ], [ 0.83331298828125, -1.6666717529296875 ], [ 1.25, -1.6666717529296875 ], [ 1.666656494140625, -2.0833282470703125 ], [ 2.08331298828125, -2.0833282470703125 ], [ 2.5, -2.0833282470703125 ], [ 2.916656494140625, -2.5 ], [ 3.33331298828125, -2.5 ], [ 3.75, -2.5 ], [ 4.58331298828125, -2.5 ], [ 5.416656494140625, -2.5 ], [ 6.25, -2.5 ], [ 7.5, -2.5 ], [ 8.33331298828125, -2.5 ], [ 9.58331298828125, -2.5 ], [ 10.83331298828125, -2.5 ], [ 11.666656494140625, -2.5 ], [ 12.916656494140625, -2.5 ], [ 13.33331298828125, -2.5 ], [ 14.166656494140625, -2.5 ], [ 14.58331298828125, -2.5 ], [ 14.58331298828125, -2.0833282470703125 ], [ 15, -2.0833282470703125 ], [ 15, -1.25 ], [ 15.416656494140625, -0.8333282470703125 ], [ 15.416656494140625, -0.4166717529296875 ], [ 15.83331298828125, 0.8333282470703125 ], [ 15.83331298828125, 1.6666717529296875 ], [ 15.83331298828125, 2.5 ], [ 15.83331298828125, 3.75 ], [ 15.83331298828125, 5.4166717529296875 ], [ 15.83331298828125, 6.6666717529296875 ], [ 15.416656494140625, 7.9166717529296875 ], [ 14.58331298828125, 9.166671752929688 ], [ 13.75, 10.41668701171875 ], [ 12.916656494140625, 11.66668701171875 ], [ 11.666656494140625, 12.5 ], [ 10.416656494140625, 13.333328247070312 ], [ 9.166656494140625, 14.583328247070312 ], [ 7.916656494140625, 15 ], [ 6.666656494140625, 15.833328247070312 ], [ 5.416656494140625, 16.25 ], [ 5, 16.66668701171875 ], [ 4.166656494140625, 17.083328247070312 ], [ 3.33331298828125, 17.5 ], [ 2.916656494140625, 17.91668701171875 ], [ 2.5, 18.333328247070312 ], [ 2.08331298828125, 18.333328247070312 ], [ 2.08331298828125, 18.75 ], [ 2.5, 18.75 ], [ 2.916656494140625, 19.16668701171875 ], [ 4.166656494140625, 19.16668701171875 ], [ 5.83331298828125, 19.583328247070312 ], [ 7.916656494140625, 20 ], [ 10.416656494140625, 20.41668701171875 ], [ 13.33331298828125, 20.833328247070312 ], [ 16.25, 21.25 ], [ 18.75, 21.25 ], [ 21.25, 21.25 ], [ 23.33331298828125, 21.25 ], [ 25.416656494140625, 21.25 ], [ 25.83331298828125, 21.25 ], [ 26.666656494140625, 21.25 ], [ 27.08331298828125, 21.25 ], [ 27.08331298828125, 20.833328247070312 ], [ 27.08331298828125, 20.833328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 27.08331298828125, 20.833328247070312 ] }, { \"id\": \"Y7jdsUo9zbU2pdZbKHCxa\", \"type\": \"freedraw\", \"x\": -549.605499341292, \"y\": -34.26939567932496, \"width\": 20, \"height\": 33.33332824707031, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 710229909, \"version\": 96, \"versionNonce\": 691891669, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661850252607, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.416656494140625, 0 ], [ 0.416656494140625, -0.4166717529296875 ], [ 0.83331298828125, -0.4166717529296875 ], [ 0.83331298828125, -0.8333282470703125 ], [ 1.666656494140625, -1.25 ], [ 1.666656494140625, -1.6666717529296875 ], [ 2.08331298828125, -2.0833282470703125 ], [ 2.08331298828125, -2.5 ], [ 2.5, -2.9166717529296875 ], [ 2.5, -3.3333282470703125 ], [ 2.5, -4.1666717529296875 ], [ 2.916656494140625, -4.5833282470703125 ], [ 3.33331298828125, -5 ], [ 3.33331298828125, -6.25 ], [ 3.75, -6.6666717529296875 ], [ 3.75, -7.5 ], [ 3.75, -8.333328247070312 ], [ 4.166656494140625, -9.166671752929688 ], [ 4.58331298828125, -10 ], [ 5, -10.833328247070312 ], [ 5.416656494140625, -11.666671752929688 ], [ 5.83331298828125, -12.5 ], [ 5.83331298828125, -12.916671752929688 ], [ 6.666656494140625, -13.333328247070312 ], [ 7.08331298828125, -14.166671752929688 ], [ 7.5, -15 ], [ 8.33331298828125, -15.416671752929688 ], [ 9.166656494140625, -16.25 ], [ 9.58331298828125, -16.666671752929688 ], [ 10.416656494140625, -17.083328247070312 ], [ 11.25, -17.5 ], [ 12.08331298828125, -17.916671752929688 ], [ 12.916656494140625, -17.916671752929688 ], [ 13.75, -18.333328247070312 ], [ 14.58331298828125, -18.333328247070312 ], [ 15.416656494140625, -18.333328247070312 ], [ 15.83331298828125, -18.333328247070312 ], [ 16.25, -18.333328247070312 ], [ 17.08331298828125, -18.333328247070312 ], [ 17.5, -17.5 ], [ 17.5, -17.083328247070312 ], [ 17.916656494140625, -16.25 ], [ 17.916656494140625, -15 ], [ 17.916656494140625, -13.75 ], [ 17.916656494140625, -12.5 ], [ 17.916656494140625, -11.25 ], [ 17.916656494140625, -9.583328247070312 ], [ 17.916656494140625, -7.9166717529296875 ], [ 17.5, -6.25 ], [ 16.666656494140625, -5 ], [ 16.25, -3.3333282470703125 ], [ 15.83331298828125, -1.6666717529296875 ], [ 15, 0 ], [ 14.58331298828125, 1.66668701171875 ], [ 13.33331298828125, 3.3333282470703125 ], [ 12.5, 4.5833282470703125 ], [ 11.666656494140625, 5.41668701171875 ], [ 10.83331298828125, 6.66668701171875 ], [ 10, 7.5 ], [ 9.166656494140625, 8.333328247070312 ], [ 8.33331298828125, 8.75 ], [ 7.5, 9.16668701171875 ], [ 6.666656494140625, 10 ], [ 5.83331298828125, 10 ], [ 5.416656494140625, 10.41668701171875 ], [ 4.58331298828125, 10.41668701171875 ], [ 4.166656494140625, 10.833328247070312 ], [ 3.75, 10.833328247070312 ], [ 3.33331298828125, 10.833328247070312 ], [ 3.33331298828125, 11.25 ], [ 2.916656494140625, 11.25 ], [ 2.916656494140625, 11.66668701171875 ], [ 3.75, 12.083328247070312 ], [ 4.166656494140625, 12.5 ], [ 5.416656494140625, 12.91668701171875 ], [ 6.666656494140625, 12.91668701171875 ], [ 7.916656494140625, 13.333328247070312 ], [ 9.166656494140625, 13.75 ], [ 10.83331298828125, 14.16668701171875 ], [ 12.5, 14.16668701171875 ], [ 14.166656494140625, 14.583328247070312 ], [ 15.416656494140625, 14.583328247070312 ], [ 16.25, 14.583328247070312 ], [ 17.5, 15 ], [ 18.33331298828125, 15 ], [ 19.166656494140625, 15 ], [ 19.58331298828125, 15 ], [ 20, 15 ], [ 20, 14.583328247070312 ], [ 20, 14.16668701171875 ], [ 20, 13.75 ], [ 20, 13.333328247070312 ], [ 20, 13.333328247070312 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 20, 13.333328247070312 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#2b8a3e\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"center\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Drawing"},{"location":"COM326/Classes/Notes/Hello%20World%20in%20VStudio.excalidraw/","tags":["excalidraw"],"text":"\u26a0 Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 Text Elements \u00b6 Open VS 2019 ^aQaDDNhK Click create a new project ^UaaJf2jP Filter selection to a C++ Windows application ^vtY8Wyvm Then choose a Console App ^QcZBPD6b Locate a suitable location and save the project as Hello_World ^2DX9QRfu You should see your project in a Class View tab. Clicking on Functions and Variables should give you the option to double click and open main(). ^nLRlsVjs You should then open a CPP file with the Hello World code snippet ^VxK6YtOt The program can be run and debugged by clicking the green arrow ^Mgn3oXvk Embedded files \u00b6 91169eaf0a646fb035e5545d924929ceda73720f: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175954.png 6ca0cfddd3b2d127c751fc167f457530091fed01: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175709.png 3ef956cbaa18ea2ec69abd3ced9556247e29a72a: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175445.png 1746f0016c0bea89005a3dd4ac62ca27db3d43f1: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829174622.png 463c356e4300532f3f6e6bcb083c84637414fa3d: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173910.png 41265119fec4c83a323f8b7153967523f080c251: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173805.png f01341042c07fc51fb5b7395de2250f05a7bfe0c: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173731.png be6f08b2e8313fee59206634ba2cf91b52f6d687: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173619.png %% Drawing \u00b6 { \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"id\": \"7W4G7QR7\", \"type\": \"image\", \"x\": 370.68208818142966, \"y\": -259.84286450049547, \"width\": 405.456071892482, \"height\": 102.29396309213996, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 99520, \"version\": 1250, \"versionNonce\": 572432515, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"91169eaf0a646fb035e5545d924929ceda73720f\", \"scale\": [ 1, 1 ] }, { \"id\": \"F01V9C0C\", \"type\": \"image\", \"x\": 399.09679050789936, \"y\": -536.1244086375681, \"width\": 348.9559794398921, \"height\": 156.76640113066424, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 61445, \"version\": 1205, \"versionNonce\": 217832749, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"6ca0cfddd3b2d127c751fc167f457530091fed01\", \"scale\": [ 1, 1 ] }, { \"id\": \"oF4AuXQ5\", \"type\": \"image\", \"x\": 71.62061805417022, \"y\": -524.3339276849053, \"width\": 192.5, \"height\": 109.92763157894736, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 88206, \"version\": 1140, \"versionNonce\": 924686371, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [ { \"id\": \"XrSILbBoiObMqJYn5Iy0G\", \"type\": \"arrow\" } ], \"link\": null, \"locked\": false, \"fileId\": \"3ef956cbaa18ea2ec69abd3ced9556247e29a72a\", \"scale\": [ 1, 1 ] }, { \"id\": \"VIzo7bXP\", \"type\": \"image\", \"x\": 48.34638541575532, \"y\": -373.46844077816684, \"width\": 257.9166870117188, \"height\": 132.55161004317435, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 40574, \"version\": 728, \"versionNonce\": 88190861, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"1746f0016c0bea89005a3dd4ac62ca27db3d43f1\", \"scale\": [ 1, 1 ] }, { \"id\": \"gMHl8tMQ\", \"type\": \"image\", \"x\": -407.1134338378906, \"y\": -341.0029524693723, \"width\": 277.91668701171875, \"height\": 56.494539654841184, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 16541, \"version\": 518, \"versionNonce\": 748460995, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"463c356e4300532f3f6e6bcb083c84637414fa3d\", \"scale\": [ 1, 1 ] }, { \"id\": \"ZJ0oObbF\", \"type\": \"image\", \"x\": -229.36325073242188, \"y\": -570.3637630715555, \"width\": 134.91656494140625, \"height\": 27.952326990622847, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 71139, \"version\": 346, \"versionNonce\": 1843279341, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [ { \"id\": \"qCArOxz727wOlWZLDDPDx\", \"type\": \"arrow\" } ], \"link\": null, \"locked\": false, \"fileId\": \"41265119fec4c83a323f8b7153967523f080c251\", \"scale\": [ 1, 1 ] }, { \"id\": \"O54ybJ6O\", \"type\": \"image\", \"x\": -293.1366467114479, \"y\": -208.0828282379838, \"width\": 307.91656494140625, \"height\": 58.99577882910977, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 14681, \"version\": 1039, \"versionNonce\": 247081827, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"f01341042c07fc51fb5b7395de2250f05a7bfe0c\", \"scale\": [ 1, 1 ] }, { \"id\": \"XiaGXQBX\", \"type\": \"image\", \"x\": -271.6132507324219, \"y\": -491.8641592933532, \"width\": 214.41656494140625, \"height\": 83.70272321242062, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 85364, \"version\": 424, \"versionNonce\": 1910173773, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"be6f08b2e8313fee59206634ba2cf91b52f6d687\", \"scale\": [ 1, 1 ] }, { \"id\": \"qCArOxz727wOlWZLDDPDx\", \"type\": \"arrow\", \"x\": -134.56316080605126, \"y\": -548.512776114816, \"width\": 16.489040447179406, \"height\": 67.88219963799747, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 341342765, \"version\": 1240, \"versionNonce\": 1640285955, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005763, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 16.489040447179406, 67.88219963799747 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"ISbF7ISe7eyN2LU8YwuY_\", \"type\": \"arrow\", \"x\": -233.6562023334211, \"y\": -420.11459841512385, \"width\": 115.92448597682335, \"height\": 105.21705278509455, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1658272131, \"version\": 834, \"versionNonce\": 521232045, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005763, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -115.92448597682335, 105.21705278509455 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"qpLwwU6vDWUDb7ETlFfXc\", \"type\": \"arrow\", \"x\": -173.4215100823855, \"y\": -296.82891796446756, \"width\": 64.45785848057938, \"height\": 106.17295838578895, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2022844867, \"version\": 919, \"versionNonce\": 473624227, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 64.45785848057938, 106.17295838578895 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"tN5Pe_9df65WOZGt0jB75\", \"type\": \"arrow\", \"x\": -48.493499755859375, \"y\": -183.58326530456543, \"width\": 102.54327939863663, \"height\": 104.21791743128426, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2025317325, \"version\": 428, \"versionNonce\": 204144909, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 102.54327939863663, -104.21791743128426 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"XrSILbBoiObMqJYn5Iy0G\", \"type\": \"arrow\", \"x\": 103.4489110392849, \"y\": -348.1780965228311, \"width\": 0.02900684234194273, \"height\": 57.24589062091019, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1940662701, \"version\": 396, \"versionNonce\": 1623925315, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -0.02900684234194273, -57.24589062091019 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": { \"elementId\": \"oF4AuXQ5\", \"focus\": 0.6697606501755824, \"gap\": 8.982308962216763 }, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"RIhWCua43bhRtOhI2bCyj\", \"type\": \"arrow\", \"x\": 259.5793503822397, \"y\": -500.90215976481034, \"width\": 157.72878035404972, \"height\": 47.24770966025142, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 522270125, \"version\": 609, \"versionNonce\": 1050761069, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 157.72878035404972, 47.24770966025142 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"x7dtq0yCgbIhQJyzJLO6m\", \"type\": \"arrow\", \"x\": 589.7725561691608, \"y\": -403.7156428941262, \"width\": 111.22930243732623, \"height\": 151.62593229620325, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 202791917, \"version\": 654, \"versionNonce\": 2018763235, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -111.22930243732623, 151.62593229620325 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"aQaDDNhK\", \"type\": \"text\", \"x\": -240.89978369303287, \"y\": -532.2834283063092, \"width\": 165.9000672725951, \"height\": 30.4897420933418, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 976400579, \"version\": 1355, \"versionNonce\": 1354621389, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Open VS 2019\", \"rawText\": \"Open VS 2019\", \"fontSize\": 24.805155832942226, \"fontFamily\": 1, \"textAlign\": \"left\", \"verticalAlign\": \"top\", \"baseline\": 21.4897420933418, \"containerId\": null, \"originalText\": \"Open VS 2019\" }, { \"id\": \"UaaJf2jP\", \"type\": \"text\", \"x\": -472.44888137592284, \"y\": -390.2585973395355, \"width\": 396, \"height\": 38, \"angle\": 6.269720806792705, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 729038851, \"version\": 770, \"versionNonce\": 199470467, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Click create a new project\", \"rawText\": \"Click create a new project\", \"fontSize\": 30.16739592589649, \"fontFamily\": 1, \"textAlign\": \"left\", \"verticalAlign\": \"top\", \"baseline\": 27, \"containerId\": null, \"originalText\": \"Click create a new project\" }, { \"id\": \"vtY8Wyvm\", \"type\": \"text\", \"x\": -460.73517757008096, \"y\": -278.8163063951808, \"width\": 296, \"height\": 63, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 647853581, \"version\": 659, \"versionNonce\": 1469718573, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Filter selection to a \\nC++ Windows application\", \"rawText\": \"Filter selection to a \\nC++ Windows application\", \"fontSize\": 25.192305560865993, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 54, \"containerId\": null, \"originalText\": \"Filter selection to a \\nC++ Windows application\" }, { \"id\": \"QcZBPD6b\", \"type\": \"text\", \"x\": -241.19423127932862, \"y\": -135.74604508558764, \"width\": 202.27782050578654, \"height\": 66.10386291038775, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 6756035, \"version\": 288, \"versionNonce\": 515441955, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Then choose a \\nConsole App\", \"rawText\": \"Then choose a \\nConsole App\", \"fontSize\": 26.441545164155105, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 56.10386291038775, \"containerId\": null, \"originalText\": \"Then choose a \\nConsole App\" }, { \"id\": \"2DX9QRfu\", \"type\": \"text\", \"x\": 26.989359960175364, \"y\": -225.4235554507519, \"width\": 318, \"height\": 90, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1842914467, \"version\": 326, \"versionNonce\": 153064077, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Locate a suitable location\\n and save the project \\nas Hello_World\", \"rawText\": \"Locate a suitable location\\n and save the project \\nas Hello_World\", \"fontSize\": 23.97950423729789, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 81, \"containerId\": null, \"originalText\": \"Locate a suitable location\\n and save the project \\nas Hello_World\" }, { \"id\": \"nLRlsVjs\", \"type\": \"text\", \"x\": -54.445092070158466, \"y\": -616.6358107021016, \"width\": 548.6436967967765, \"height\": 81.64340726142507, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 67232653, \"version\": 203, \"versionNonce\": 1212311747, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\", \"rawText\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\", \"fontSize\": 21.771575269713345, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 72.64340726142507, \"containerId\": null, \"originalText\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\" }, { \"id\": \"VxK6YtOt\", \"type\": \"text\", \"x\": 351.0780207727323, \"y\": -368.669171886331, \"width\": 420.6101944636313, \"height\": 64.1174076926267, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 975467405, \"version\": 974, \"versionNonce\": 773740643, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should then open a CPP file \\nwith the Hello World code snippet\", \"rawText\": \"You should then open a CPP file \\nwith the Hello World code snippet\", \"fontSize\": 25.646963077050685, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 54.1174076926267, \"containerId\": null, \"originalText\": \"You should then open a CPP file \\nwith the Hello World code snippet\" }, { \"id\": \"Mgn3oXvk\", \"type\": \"text\", \"x\": 340.55715599363407, \"y\": -138.80579657004034, \"width\": 438, \"height\": 62, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1184937517, \"version\": 265, \"versionNonce\": 198972237, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"The program can be run and \\ndebugged by clicking the green arrow\", \"rawText\": \"The program can be run and \\ndebugged by clicking the green arrow\", \"fontSize\": 24.65044590557881, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 53, \"containerId\": null, \"originalText\": \"The program can be run and \\ndebugged by clicking the green arrow\" }, { \"id\": \"fwQqrnaF9pDKc3bhLgAfi\", \"type\": \"freedraw\", \"x\": -249.58243692701507, \"y\": -643.7079112125721, \"width\": 14.117407692626784, \"height\": 44.84327271623488, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 275910499, \"version\": 50, \"versionNonce\": 1041978371, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.8304107020328502, 0 ], [ 1.6609430492281945, 0 ], [ 2.4912929286797407, -0.8303802907422551 ], [ 3.321703630712534, -0.8303802907422551 ], [ 4.152235977907878, -1.6608518153564091 ], [ 5.812996559392275, -2.4912929286797407 ], [ 7.473878786039165, -3.321673219421996 ], [ 8.304289488072016, -3.321673219421996 ], [ 8.304289488072016, -4.15214474403615 ], [ 9.965171714718906, -4.15214474403615 ], [ 9.965171714718906, -4.9825858573594815 ], [ 10.7955824167517, -4.9825858573594815 ], [ 10.7955824167517, -5.812966148101623 ], [ 11.626114763947044, -5.812966148101623 ], [ 12.45646464339859, -5.812966148101623 ], [ 12.45646464339859, -6.643437672715777 ], [ 13.28687534543144, -6.643437672715777 ], [ 14.117407692626784, -6.643437672715777 ], [ 14.117407692626784, -7.473878786039222 ], [ 14.117407692626784, -6.643437672715777 ], [ 14.117407692626784, -4.9825858573594815 ], [ 14.117407692626784, -3.321673219421996 ], [ 14.117407692626784, -1.6608518153564091 ], [ 14.117407692626784, 0.8304411133233316 ], [ 14.117407692626784, 3.3217340420030723 ], [ 14.117407692626784, 5.813026970682813 ], [ 14.117407692626784, 9.134791423976594 ], [ 14.117407692626784, 12.456464643398476 ], [ 14.117407692626784, 15.778198685401776 ], [ 14.117407692626784, 17.439050500757958 ], [ 14.117407692626784, 19.9303434294377 ], [ 14.117407692626784, 22.42163635811744 ], [ 14.117407692626784, 24.082548996054925 ], [ 14.117407692626784, 24.91292928679718 ], [ 14.117407692626784, 26.573841924734666 ], [ 14.117407692626784, 27.40422221547692 ], [ 14.117407692626784, 29.065134853414406 ], [ 14.117407692626784, 29.895515144156548 ], [ 14.117407692626784, 30.725956257479993 ], [ 14.117407692626784, 31.556427782094033 ], [ 14.117407692626784, 33.217249186159734 ], [ 14.117407692626784, 34.87810100151603 ], [ 14.117407692626784, 35.708542114839474 ], [ 14.117407692626784, 36.539013639453515 ], [ 14.117407692626784, 37.369393930195656 ], [ 14.117407692626784, 37.369393930195656 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 14.117407692626784, 37.369393930195656 ] }, { \"id\": \"s390ptqKN_X71cPytsCAa\", \"type\": \"freedraw\", \"x\": -371.3904169667471, \"y\": -475.71631100683817, \"width\": 40.52471209395492, \"height\": 58.189355554726376, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 674749347, \"version\": 67, \"versionNonce\": 1599972163, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805007345, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039069813361607, 0 ], [ 2.078215732327294, 0 ], [ 3.117285545688901, 0 ], [ 5.195501278016195, 0 ], [ 6.234571091377688, -1.0391078661635902 ], [ 7.273640904739295, -2.078177679525197 ], [ 8.312786823704982, -2.078177679525197 ], [ 9.35185663706659, -3.1172855456887874 ], [ 10.390926450428083, -4.156393411852491 ], [ 11.43007236939377, -5.1954632252139845 ], [ 13.508211996116984, -6.234571091377688 ], [ 14.54735791508267, -7.273678957541279 ], [ 15.586427728444164, -7.273678957541279 ], [ 16.62549754180577, -8.312748770902886 ], [ 17.664643460771458, -8.312748770902886 ], [ 18.703713274133065, -9.351856637066476 ], [ 19.742783087494672, -10.39096450323018 ], [ 20.78192900646036, -10.39096450323018 ], [ 21.820998819821853, -10.39096450323018 ], [ 22.86006863318346, -10.39096450323018 ], [ 23.899214552149147, -10.39096450323018 ], [ 24.938284365510754, -10.39096450323018 ], [ 27.016500097838048, -9.351856637066476 ], [ 27.016500097838048, -8.312748770902886 ], [ 28.05556991119954, -8.312748770902886 ], [ 28.05556991119954, -7.273678957541279 ], [ 28.05556991119954, -5.1954632252139845 ], [ 28.05556991119954, -4.156393411852491 ], [ 28.05556991119954, -1.0391078661635902 ], [ 28.05556991119954, 1.0391078661635902 ], [ 28.05556991119954, 3.117285545688901 ], [ 28.05556991119954, 6.234571091377688 ], [ 27.016500097838048, 9.351818584264493 ], [ 24.938284365510754, 11.430034316591673 ], [ 23.899214552149147, 14.547319862280574 ], [ 21.820998819821853, 17.66460540796936 ], [ 19.742783087494672, 20.781890953658262 ], [ 16.62549754180577, 23.89917649934705 ], [ 14.54735791508267, 27.01646204503595 ], [ 11.43007236939377, 30.133747590724738 ], [ 8.312786823704982, 33.251033136413525 ], [ 5.195501278016195, 36.36831868210243 ], [ 2.078215732327294, 39.485604227791214 ], [ 0, 40.52467404115282 ], [ -1.0390698133614933, 42.602889773480115 ], [ -3.1172855456887874, 44.68110550580741 ], [ -4.156355359050394, 46.75924513253051 ], [ -5.195501278016081, 46.75924513253051 ], [ -5.195501278016081, 47.798391051496196 ], [ -4.156355359050394, 47.798391051496196 ], [ -3.1172855456887874, 47.798391051496196 ], [ -1.0390698133614933, 47.798391051496196 ], [ 2.078215732327294, 47.798391051496196 ], [ 5.195501278016195, 47.798391051496196 ], [ 9.35185663706659, 47.798391051496196 ], [ 12.469142182755377, 47.798391051496196 ], [ 15.586427728444164, 47.798391051496196 ], [ 19.742783087494672, 46.75924513253051 ], [ 22.86006863318346, 46.75924513253051 ], [ 27.016500097838048, 46.75924513253051 ], [ 30.133785643526835, 46.75924513253051 ], [ 32.211925270249935, 46.75924513253051 ], [ 34.29014100257723, 46.75924513253051 ], [ 35.329210815938836, 45.7201753191689 ], [ 35.329210815938836, 45.7201753191689 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 35.329210815938836, 45.7201753191689 ] }, { \"id\": \"uEqlR7kVT3keL3sy7ab1r\", \"type\": \"freedraw\", \"x\": -496.08183879430055, \"y\": -214.90343303513953, \"width\": 38.446496361627624, \"height\": 58.189431660330456, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 154363501, \"version\": 94, \"versionNonce\": 1530797475, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805013963, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.0390698133615501, 0 ], [ 2.078291837931431, 0 ], [ 3.117285545688844, 0 ], [ 4.156355359050394, -1.0389937077574132 ], [ 5.195577383620275, -1.0389937077574132 ], [ 6.234571091377688, -2.078215732327294 ], [ 7.2736409047392385, -2.078215732327294 ], [ 9.351856637066533, -2.078215732327294 ], [ 10.390926450428083, -3.1172855456887874 ], [ 12.46914218275532, -3.1172855456887874 ], [ 14.547434020686751, -3.1172855456887874 ], [ 15.586427728444164, -3.1172855456887874 ], [ 17.664719566375595, -3.1172855456887874 ], [ 19.74278308749456, -3.1172855456887874 ], [ 20.78200511206444, -3.1172855456887874 ], [ 23.899290657753284, -2.078215732327294 ], [ 24.938284365510697, -1.0389937077574132 ], [ 27.016576203442128, 0 ], [ 28.05556991119954, 1.039069813361607 ], [ 29.09463972456109, 2.078291837931374 ], [ 29.09463972456109, 3.1172855456887874 ], [ 30.133861749130915, 4.156355359050394 ], [ 30.133861749130915, 6.234571091377688 ], [ 30.133861749130915, 7.273640904739295 ], [ 30.133861749130915, 8.312862929309063 ], [ 30.133861749130915, 9.351856637066476 ], [ 29.09463972456109, 10.390926450428083 ], [ 24.938284365510697, 13.50821199611687 ], [ 23.899290657753284, 14.547434020686751 ], [ 14.547434020686751, 21.820998819821853 ], [ 12.46914218275532, 21.820998819821853 ], [ 11.430148474997907, 22.86006863318346 ], [ 9.351856637066533, 22.86006863318346 ], [ 8.312862929309063, 22.86006863318346 ], [ 7.2736409047392385, 22.86006863318346 ], [ 8.312862929309063, 22.86006863318346 ], [ 10.390926450428083, 22.86006863318346 ], [ 12.46914218275532, 22.86006863318346 ], [ 14.547434020686751, 22.86006863318346 ], [ 16.62549754180577, 22.86006863318346 ], [ 19.74278308749456, 22.86006863318346 ], [ 20.78200511206444, 22.86006863318346 ], [ 23.899290657753284, 22.86006863318346 ], [ 24.938284365510697, 22.86006863318346 ], [ 27.016576203442128, 22.86006863318346 ], [ 28.05556991119954, 22.86006863318346 ], [ 29.09463972456109, 22.86006863318346 ], [ 29.09463972456109, 23.899290657753227 ], [ 29.09463972456109, 24.93828436551064 ], [ 30.133861749130915, 24.93828436551064 ], [ 30.133861749130915, 25.977354178872247 ], [ 31.172855456888385, 27.016576203442128 ], [ 32.211925270249935, 29.094639724561148 ], [ 32.211925270249935, 30.133861749130915 ], [ 33.25114729481976, 31.17285545688833 ], [ 34.29014100257717, 33.251147294819816 ], [ 35.32921081593872, 35.32921081593872 ], [ 36.36835673490452, 36.3684328405086 ], [ 36.36835673490452, 37.40742654826602 ], [ 37.40742654826602, 39.485718386197505 ], [ 37.40742654826602, 40.52471209395492 ], [ 38.446496361627624, 40.52471209395492 ], [ 38.446496361627624, 42.60300393188629 ], [ 38.446496361627624, 43.641997639643705 ], [ 38.446496361627624, 44.68106745300531 ], [ 38.446496361627624, 45.72028947757508 ], [ 37.40742654826602, 46.759283185332606 ], [ 36.36835673490452, 46.759283185332606 ], [ 35.32921081593872, 47.7983529986941 ], [ 33.25114729481976, 48.83757502326398 ], [ 32.211925270249935, 48.83757502326398 ], [ 30.133861749130915, 49.87656873102139 ], [ 28.05556991119954, 50.915638544383 ], [ 25.977354178872247, 51.95486056895277 ], [ 23.899290657753284, 51.95486056895277 ], [ 20.78200511206444, 52.99385427671018 ], [ 18.70371327413301, 54.03292409007179 ], [ 16.62549754180577, 55.07214611464167 ], [ 13.508211996116927, 55.07214611464167 ], [ 12.46914218275532, 55.07214611464167 ], [ 10.390926450428083, 55.07214611464167 ], [ 9.351856637066533, 55.07214611464167 ], [ 8.312862929309063, 55.07214611464167 ], [ 6.234571091377688, 55.07214611464167 ], [ 4.156355359050394, 55.07214611464167 ], [ 4.156355359050394, 54.03292409007179 ], [ 3.117285545688844, 54.03292409007179 ], [ 2.078291837931431, 52.99385427671018 ], [ 2.078291837931431, 51.95486056895277 ], [ 2.078291837931431, 50.915638544383 ], [ 2.078291837931431, 49.87656873102139 ], [ 2.078291837931431, 49.87656873102139 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 2.078291837931431, 49.87656873102139 ] }, { \"id\": \"RpHzmjRQjJgTKCR78-_Oj\", \"type\": \"freedraw\", \"x\": -293.4582783245262, \"y\": -99.56386784465258, \"width\": 48.83742281205559, \"height\": 31.17285545688833, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 360071693, \"version\": 36, \"versionNonce\": 1508354787, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805016072, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 1.039069813361607 ], [ 0, 2.078291837931374 ], [ 0, 3.1172855456887874 ], [ -1.039069813361607, 4.156355359050394 ], [ -2.078215732327294, 6.234571091377688 ], [ -2.078215732327294, 8.312862929309063 ], [ -2.078215732327294, 11.430148474997964 ], [ -3.1172855456887874, 14.547434020686751 ], [ -4.156355359050394, 17.664719566375652 ], [ -5.195501278016081, 20.78200511206444 ], [ -5.195501278016081, 23.899290657753227 ], [ -6.234571091377688, 25.977354178872247 ], [ -6.234571091377688, 28.05556991119954 ], [ -6.234571091377688, 29.094639724561148 ], [ -7.273640904739182, 30.133861749130915 ], [ -7.273640904739182, 31.17285545688833 ], [ -6.234571091377688, 31.17285545688833 ], [ -4.156355359050394, 31.17285545688833 ], [ 0, 31.17285545688833 ], [ 3.117285545688901, 31.17285545688833 ], [ 7.273640904739295, 31.17285545688833 ], [ 12.469142182755377, 31.17285545688833 ], [ 16.62549754180577, 31.17285545688833 ], [ 21.820998819821853, 31.17285545688833 ], [ 27.016500097837934, 31.17285545688833 ], [ 31.17285545688833, 31.17285545688833 ], [ 35.32921081593872, 31.17285545688833 ], [ 38.446496361627624, 31.17285545688833 ], [ 39.48564228059331, 31.17285545688833 ], [ 40.52471209395492, 31.17285545688833 ], [ 41.56378190731641, 31.17285545688833 ], [ 41.56378190731641, 30.133861749130915 ], [ 41.56378190731641, 29.094639724561148 ], [ 41.56378190731641, 29.094639724561148 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 41.56378190731641, 29.094639724561148 ] }, { \"id\": \"agEwBnm6_vA7f90W2b_TS\", \"type\": \"freedraw\", \"x\": -275.79363486375473, \"y\": -91.25100491534351, \"width\": 2.0781396267231003, \"height\": 48.83734670645151, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1508321485, \"version\": 26, \"versionNonce\": 418515459, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805016633, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039069813361607, 0 ], [ 1.039069813361607, 1.0389937077574132 ], [ 1.039069813361607, 3.117285545688901 ], [ 1.039069813361607, 4.156279253446314 ], [ 1.039069813361607, 6.234571091377688 ], [ 1.039069813361607, 8.312634612496709 ], [ 1.039069813361607, 11.429920158185496 ], [ 1.039069813361607, 14.547205703874397 ], [ 1.039069813361607, 17.664491249563184 ], [ 1.039069813361607, 21.820998819821853 ], [ 1.039069813361607, 25.977278073268167 ], [ 1.039069813361607, 31.172855456888442 ], [ 1.039069813361607, 36.36820452369625 ], [ 1.039069813361607, 40.52471209395492 ], [ 1.039069813361607, 43.641997639643705 ], [ 1.039069813361607, 45.720061160762725 ], [ 1.039069813361607, 47.79827689309002 ], [ 1.039069813361607, 48.83734670645151 ], [ 1.039069813361607, 47.79827689309002 ], [ 1.039069813361607, 46.759283185332606 ], [ 1.039069813361607, 44.68099134740112 ], [ 2.0781396267231003, 42.60277561507394 ], [ 2.0781396267231003, 40.52471209395492 ], [ 2.0781396267231003, 40.52471209395492 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 2.0781396267231003, 40.52471209395492 ] }, { \"id\": \"FpE7szPAkFZfoLczSL8HU\", \"type\": \"freedraw\", \"x\": 231.28476316456, \"y\": -113.07200373516537, \"width\": 72.73671346980882, \"height\": 47.79850520990237, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 781044653, \"version\": 96, \"versionNonce\": 1695832067, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805019589, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.039145918965687, 0 ], [ -3.117285545688901, 0 ], [ -4.156431464654588, 0 ], [ -6.234571091377802, 0 ], [ -8.312558506892628, 0 ], [ -11.42984405258153, 0 ], [ -14.547129598270203, 0 ], [ -17.664415143959104, 0 ], [ -20.781700689648005, -1.0392220245698809 ], [ -23.89898623533668, -1.0392220245698809 ], [ -28.055569911199655, -1.0392220245698809 ], [ -31.17285545688833, -2.078291837931374 ], [ -34.29014100257723, -2.078291837931374 ], [ -38.44657246723182, -2.078291837931374 ], [ -40.52471209395503, -3.1172855456887874 ], [ -43.641997639643705, -3.1172855456887874 ], [ -44.68114355860939, -3.1172855456887874 ], [ -46.759283185332606, -3.1172855456887874 ], [ -47.79842910429829, -3.1172855456887874 ], [ -48.83727060084743, -4.156507570258668 ], [ -49.87656873102151, -4.156507570258668 ], [ -50.915714649987194, -4.156507570258668 ], [ -51.95455614653633, -4.156507570258668 ], [ -51.95455614653633, -3.1172855456887874 ], [ -51.95455614653633, -2.078291837931374 ], [ -51.95455614653633, 0 ], [ -51.95455614653633, 2.07806352111902 ], [ -49.87656873102151, 4.156279253446314 ], [ -49.87656873102151, 6.234571091377688 ], [ -48.83727060084743, 9.35185663706659 ], [ -48.83727060084743, 11.429920158185496 ], [ -48.83727060084743, 13.50813589051279 ], [ -47.79842910429829, 14.547205703874397 ], [ -47.79842910429829, 15.586427728444164 ], [ -47.79842910429829, 16.625421436201577 ], [ -47.79842910429829, 17.664491249563184 ], [ -47.79842910429829, 18.703713274133065 ], [ -47.79842910429829, 19.74270698189048 ], [ -47.79842910429829, 20.781776795252085 ], [ -46.759283185332606, 20.781776795252085 ], [ -44.68114355860939, 20.781776795252085 ], [ -43.641997639643705, 20.781776795252085 ], [ -41.56385801292072, 20.781776795252085 ], [ -39.48541396378096, 20.781776795252085 ], [ -36.368128418092056, 20.781776795252085 ], [ -32.21200137585424, 19.74270698189048 ], [ -29.09471583016534, 19.74270698189048 ], [ -24.938284365510754, 19.74270698189048 ], [ -22.86014473878754, 19.74270698189048 ], [ -18.70371327413318, 19.74270698189048 ], [ -14.547129598270203, 19.74270698189048 ], [ -11.42984405258153, 20.781776795252085 ], [ -9.351856637066476, 21.820998819821853 ], [ -6.234571091377802, 21.820998819821853 ], [ -4.156431464654588, 22.859992527579266 ], [ -3.117285545688901, 22.859992527579266 ], [ -1.039145918965687, 23.899062340940873 ], [ 0, 23.899062340940873 ], [ 1.0392981301738473, 25.977278073268167 ], [ 1.0392981301738473, 27.01634788662966 ], [ 2.0781396267229866, 28.05556991119954 ], [ 2.0781396267229866, 30.13363343231856 ], [ 3.1172855456886737, 31.172855456888442 ], [ 3.1172855456886737, 32.211849164645855 ], [ 3.1172855456886737, 34.29014100257723 ], [ 3.1172855456886737, 35.32913471033464 ], [ 3.1172855456886737, 36.36820452369625 ], [ 3.1172855456886737, 38.44642025602343 ], [ 3.1172855456886737, 39.48549006938504 ], [ 3.1172855456886737, 40.52471209395492 ], [ 2.0781396267229866, 42.60277561507394 ], [ 0, 42.60277561507394 ], [ -2.0779874155148264, 43.641997639643705 ], [ -4.156431464654588, 43.641997639643705 ], [ -8.312558506892628, 43.641997639643705 ], [ -11.42984405258153, 43.641997639643705 ], [ -15.586427728444278, 43.641997639643705 ], [ -20.781700689648005, 41.56370580171233 ], [ -25.97743028447644, 40.52471209395492 ], [ -31.17285545688833, 38.44642025602343 ], [ -37.40742654826613, 37.40742654826602 ], [ -42.60269950946986, 36.36820452369625 ], [ -47.79842910429829, 35.32913471033464 ], [ -51.95455614653633, 34.29014100257723 ], [ -56.11113982239908, 34.29014100257723 ], [ -59.22842536808798, 34.29014100257723 ], [ -62.345710913776884, 34.29014100257723 ], [ -64.42369832929171, 34.29014100257723 ], [ -66.50214237843124, 34.29014100257723 ], [ -67.54098387498038, 34.29014100257723 ], [ -68.58028200515446, 34.29014100257723 ], [ -69.61942792412015, 34.29014100257723 ], [ -69.61942792412015, 33.25091897800735 ], [ -69.61942792412015, 33.25091897800735 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -69.61942792412015, 33.25091897800735 ] }, { \"id\": \"MO8Ri45CyyREgOd_Vqw21\", \"type\": \"freedraw\", \"x\": 174.13447742319522, \"y\": -684.5744425679902, \"width\": 40.52471209395503, \"height\": 46.759283185332606, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1728011693, \"version\": 104, \"versionNonce\": 1104809091, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805021937, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.0388414965491393, 0 ], [ -2.078139626723214, 0 ], [ -3.117285545688901, 0 ], [ -4.15612704223804, 0 ], [ -5.195425172412115, 0 ], [ -6.234571091377802, 0 ], [ -7.273412587926941, 1.039145918965687 ], [ -9.351856637066476, 1.039145918965687 ], [ -10.390698133615615, 2.078177679525197 ], [ -11.42999626378969, 3.117285545688901 ], [ -13.507983679304516, 3.117285545688901 ], [ -14.54728180947859, 4.156431464654588 ], [ -16.625269224993417, 5.195463225214098 ], [ -18.70371327413318, 6.234571091377688 ], [ -20.781852900856165, 7.2737170103433755 ], [ -22.859840316370992, 8.312748770902886 ], [ -23.899138446545066, 10.391002556032163 ], [ -25.977125862059893, 11.430034316591673 ], [ -28.055569911199655, 12.469142182755377 ], [ -30.13370953792264, 13.508288101721064 ], [ -31.17285545688833, 15.586427728444278 ], [ -33.25099508361154, 16.625573647409965 ], [ -35.32898249912637, 16.625573647409965 ], [ -35.32898249912637, 17.664605407969475 ], [ -36.36828062930044, 18.70371327413295 ], [ -37.40742654826613, 19.742859193098752 ], [ -38.44626804481527, 20.78189095365815 ], [ -39.48556617498912, 20.78189095365815 ], [ -39.48556617498912, 21.820998819821853 ], [ -39.48556617498912, 22.86014473878754 ], [ -39.48556617498912, 23.89917649934705 ], [ -40.52471209395503, 23.89917649934705 ], [ -40.52471209395503, 24.938284365510754 ], [ -40.52471209395503, 25.97743028447644 ], [ -40.52471209395503, 27.01646204503595 ], [ -40.52471209395503, 28.05556991119954 ], [ -40.52471209395503, 29.094715830165228 ], [ -40.52471209395503, 30.133747590724738 ], [ -40.52471209395503, 31.17285545688833 ], [ -40.52471209395503, 32.212001375854015 ], [ -40.52471209395503, 33.251033136413525 ], [ -40.52471209395503, 34.29014100257723 ], [ -40.52471209395503, 35.329286921542916 ], [ -40.52471209395503, 37.40742654826613 ], [ -40.52471209395503, 38.44657246723182 ], [ -39.48556617498912, 39.48560422779133 ], [ -38.44626804481527, 41.563858012920605 ], [ -37.40742654826613, 42.60288977348 ], [ -37.40742654826613, 43.641997639643705 ], [ -36.36828062930044, 43.641997639643705 ], [ -36.36828062930044, 44.68114355860939 ], [ -35.32898249912637, 45.7201753191689 ], [ -34.29014100257723, 45.7201753191689 ], [ -33.25099508361154, 45.7201753191689 ], [ -32.21169695343747, 45.7201753191689 ], [ -31.17285545688833, 46.759283185332606 ], [ -29.094411407748794, 46.759283185332606 ], [ -28.055569911199655, 46.759283185332606 ], [ -27.016423992233968, 46.759283185332606 ], [ -25.977125862059893, 46.759283185332606 ], [ -24.938284365510754, 46.759283185332606 ], [ -23.899138446545066, 46.759283185332606 ], [ -22.859840316370992, 46.759283185332606 ], [ -21.820998819821853, 46.759283185332606 ], [ -20.781852900856165, 46.759283185332606 ], [ -19.742554770682318, 46.759283185332606 ], [ -18.70371327413318, 46.759283185332606 ], [ -18.70371327413318, 45.7201753191689 ], [ -18.70371327413318, 44.68114355860939 ], [ -17.664567355167264, 44.68114355860939 ], [ -16.625269224993417, 43.641997639643705 ], [ -16.625269224993417, 42.60288977348 ], [ -16.625269224993417, 41.563858012920605 ], [ -15.586427728444278, 40.524712093954804 ], [ -15.586427728444278, 39.48560422779133 ], [ -15.586427728444278, 38.44657246723182 ], [ -14.54728180947859, 37.40742654826613 ], [ -14.54728180947859, 36.36831868210243 ], [ -14.54728180947859, 35.329286921542916 ], [ -14.54728180947859, 34.29014100257723 ], [ -14.54728180947859, 33.251033136413525 ], [ -14.54728180947859, 32.212001375854015 ], [ -14.54728180947859, 31.17285545688833 ], [ -14.54728180947859, 30.133747590724738 ], [ -15.586427728444278, 30.133747590724738 ], [ -16.625269224993417, 29.094715830165228 ], [ -17.664567355167264, 28.05556991119954 ], [ -18.70371327413318, 28.05556991119954 ], [ -18.70371327413318, 27.01646204503595 ], [ -19.742554770682318, 27.01646204503595 ], [ -20.781852900856165, 27.01646204503595 ], [ -21.820998819821853, 27.01646204503595 ], [ -22.859840316370992, 25.97743028447644 ], [ -24.938284365510754, 25.97743028447644 ], [ -25.977125862059893, 25.97743028447644 ], [ -27.016423992233968, 25.97743028447644 ], [ -28.055569911199655, 25.97743028447644 ], [ -30.13370953792264, 25.97743028447644 ], [ -31.17285545688833, 24.938284365510754 ], [ -32.21169695343747, 24.938284365510754 ], [ -33.25099508361154, 24.938284365510754 ], [ -33.25099508361154, 24.938284365510754 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -33.25099508361154, 24.938284365510754 ] }, { \"id\": \"gWU3Z-b1RbusE2XsafUkc\", \"type\": \"freedraw\", \"x\": 592.8903430980895, \"y\": -597.290447288703, \"width\": 65.46299645946556, \"height\": 63.38481877994025, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1778200877, \"version\": 53, \"versionNonce\": 1333924589, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805025604, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.0388414965491393, 0 ], [ 2.0779874155148264, 0 ], [ 5.195272961203727, 0 ], [ 8.312558506892628, 0 ], [ 12.469142182755377, 1.0391078661635902 ], [ 16.625269224993417, 1.0391078661635902 ], [ 20.781700689647778, 1.0391078661635902 ], [ 25.977125862059893, 2.078177679525197 ], [ 32.21169695343747, 2.078177679525197 ], [ 38.44626804481527, 2.078177679525197 ], [ 44.680839136192844, 3.1172855456887874 ], [ 48.83727060084743, 3.1172855456887874 ], [ 52.99385427671018, 3.1172855456887874 ], [ 56.11113982239908, 3.1172855456887874 ], [ 58.18912723791391, 3.1172855456887874 ], [ 60.26726686463712, 4.1563934118523775 ], [ 62.34571091377666, 4.1563934118523775 ], [ 63.384552410325796, 4.1563934118523775 ], [ 64.42369832929148, 4.1563934118523775 ], [ 65.46299645946556, 5.1954632252139845 ], [ 65.46299645946556, 6.234571091377575 ], [ 65.46299645946556, 7.273678957541279 ], [ 65.46299645946556, 9.351856637066476 ], [ 65.46299645946556, 11.430034316591673 ], [ 64.42369832929148, 13.508250048918967 ], [ 63.384552410325796, 16.625535594607754 ], [ 62.34571091377666, 19.74282114029654 ], [ 60.26726686463712, 23.899176499346936 ], [ 58.18912723791391, 27.016462045035837 ], [ 55.07184169222501, 30.133747590724624 ], [ 52.99385427671018, 33.251033136413525 ], [ 50.91541022757042, 36.36831868210231 ], [ 48.83727060084743, 39.485604227791214 ], [ 46.759283185332606, 41.563819960118394 ], [ 45.71998505515853, 44.681105505807295 ], [ 44.680839136192844, 47.79839105149608 ], [ 43.641997639643705, 49.87656873102128 ], [ 42.60269950946963, 51.95474641054648 ], [ 41.56355359050394, 52.99385427671018 ], [ 41.56355359050394, 54.03296214287377 ], [ 41.56355359050394, 55.07203195623538 ], [ 41.56355359050394, 56.11113982239897 ], [ 40.524712093954804, 57.15024768856267 ], [ 40.524712093954804, 58.189317501924165 ], [ 40.524712093954804, 59.22842536808787 ], [ 40.524712093954804, 60.26753323425146 ], [ 40.524712093954804, 61.306603047613066 ], [ 39.48541396378096, 62.34571091377666 ], [ 39.48541396378096, 63.38481877994025 ], [ 38.44626804481527, 63.38481877994025 ], [ 38.44626804481527, 63.38481877994025 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 38.44626804481527, 63.38481877994025 ] }, { \"id\": \"KjK_tyinSO5TvAA4-RUF-\", \"type\": \"freedraw\", \"x\": 631.3366111429048, \"y\": -564.0394141522895, \"width\": 37.4074265482659, \"height\": 4.156393411852491, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1871617635, \"version\": 26, \"versionNonce\": 1726104013, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805026381, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039145918965687, 0 ], [ 3.1172855456886737, 0 ], [ 5.195729594828435, 0 ], [ 7.273717010343262, 0 ], [ 9.351856637066476, 1.0391078661635902 ], [ 12.46914218275515, 1.0391078661635902 ], [ 14.547586231894911, 1.0391078661635902 ], [ 16.625573647409738, 1.0391078661635902 ], [ 17.664871777583812, 1.0391078661635902 ], [ 18.70371327413295, 1.0391078661635902 ], [ 19.74285919309864, 1.0391078661635902 ], [ 20.782157323272713, 1.0391078661635902 ], [ 21.820998819821853, 1.0391078661635902 ], [ 22.86014473878754, 1.0391078661635902 ], [ 23.899442868961387, 1.0391078661635902 ], [ 24.938284365510526, 1.0391078661635902 ], [ 27.016728414650288, 2.078215732327294 ], [ 29.094715830165114, 2.078215732327294 ], [ 31.17285545688833, 2.078215732327294 ], [ 34.290141002577, 3.1172855456887874 ], [ 35.329286921542916, 3.1172855456887874 ], [ 37.4074265482659, 3.1172855456887874 ], [ 37.4074265482659, 4.156393411852491 ], [ 37.4074265482659, 4.156393411852491 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 37.4074265482659, 4.156393411852491 ] }, { \"id\": \"3KbZlb_HIa-0GavmEqwXC\", \"type\": \"freedraw\", \"x\": 568.9909002291279, \"y\": -42.41365820889223, \"width\": 46.759283185332606, \"height\": 49.87656873102128, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 548752771, \"version\": 165, \"versionNonce\": 1718291139, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805031802, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.0388414965491393, 0 ], [ -2.0781396267229866, 0 ], [ -3.1172855456886737, -1.0390698133614933 ], [ -5.195425172411888, -2.078139626723214 ], [ -6.234571091377575, -2.078139626723214 ], [ -8.312710718100789, -2.078139626723214 ], [ -9.351856637066476, -3.117285545688901 ], [ -11.42999626378969, -3.117285545688901 ], [ -13.507983679304516, -3.117285545688901 ], [ -15.58642772844405, -3.117285545688901 ], [ -17.664567355167264, -4.156355359050394 ], [ -19.74255477068209, -4.156355359050394 ], [ -20.781852900856165, -4.156355359050394 ], [ -22.859840316370992, -4.156355359050394 ], [ -23.89913844654484, -4.156355359050394 ], [ -24.938284365510526, -4.156355359050394 ], [ -27.01642399223374, -4.156355359050394 ], [ -28.055569911199427, -4.156355359050394 ], [ -29.094411407748566, -4.156355359050394 ], [ -30.13370953792264, -4.156355359050394 ], [ -31.17285545688833, -4.156355359050394 ], [ -32.21169695343747, -4.156355359050394 ], [ -33.25099508361154, -4.156355359050394 ], [ -34.29014100257723, -4.156355359050394 ], [ -35.32898249912637, -4.156355359050394 ], [ -36.368280629300216, -4.156355359050394 ], [ -37.4074265482659, -4.156355359050394 ], [ -37.4074265482659, -3.117285545688901 ], [ -37.4074265482659, -2.078139626723214 ], [ -37.4074265482659, -1.0390698133614933 ], [ -37.4074265482659, 0 ], [ -37.4074265482659, 1.039145918965687 ], [ -37.4074265482659, 2.0782157323271804 ], [ -37.4074265482659, 3.117285545688901 ], [ -37.4074265482659, 4.156431464654588 ], [ -37.4074265482659, 5.195501278016081 ], [ -36.368280629300216, 7.273717010343262 ], [ -36.368280629300216, 8.312786823704982 ], [ -35.32898249912637, 9.351856637066476 ], [ -34.29014100257723, 11.430072369393656 ], [ -32.21169695343747, 12.469142182755377 ], [ -32.21169695343747, 13.508288101721064 ], [ -30.13370953792264, 14.547357915082557 ], [ -29.094411407748566, 16.625573647409738 ], [ -27.01642399223374, 17.664643460771458 ], [ -25.977125862059665, 17.664643460771458 ], [ -24.938284365510526, 18.70371327413295 ], [ -23.89913844654484, 18.70371327413295 ], [ -22.859840316370992, 19.74285919309864 ], [ -21.820998819821853, 20.78192900646036 ], [ -20.781852900856165, 20.78192900646036 ], [ -18.70371327413295, 20.78192900646036 ], [ -17.664567355167264, 20.78192900646036 ], [ -16.62526922499319, 21.820998819821853 ], [ -14.547281809478363, 21.820998819821853 ], [ -13.507983679304516, 21.820998819821853 ], [ -12.469142182755377, 21.820998819821853 ], [ -11.42999626378969, 22.86014473878754 ], [ -10.390698133615615, 22.86014473878754 ], [ -9.351856637066476, 22.86014473878754 ], [ -8.312710718100789, 23.899214552149033 ], [ -8.312710718100789, 24.938284365510754 ], [ -7.273412587926714, 24.938284365510754 ], [ -6.234571091377575, 24.938284365510754 ], [ -6.234571091377575, 25.97743028447644 ], [ -5.195425172411888, 27.016500097837934 ], [ -4.156127042237813, 28.055569911199427 ], [ -4.156127042237813, 29.094715830165114 ], [ -3.1172855456886737, 29.094715830165114 ], [ -2.0781396267229866, 30.133785643526835 ], [ -2.0781396267229866, 31.17285545688833 ], [ -2.0781396267229866, 32.212001375854015 ], [ -2.0781396267229866, 33.25107118921551 ], [ -1.0388414965491393, 34.29014100257723 ], [ -1.0388414965491393, 35.329286921542916 ], [ -1.0388414965491393, 37.4074265482659 ], [ -1.0388414965491393, 38.44657246723182 ], [ -1.0388414965491393, 39.48564228059331 ], [ -1.0388414965491393, 40.524712093954804 ], [ -1.0388414965491393, 41.56385801292049 ], [ -2.0781396267229866, 42.60292782628221 ], [ -3.1172855456886737, 42.60292782628221 ], [ -4.156127042237813, 43.641997639643705 ], [ -5.195425172411888, 43.641997639643705 ], [ -7.273412587926714, 43.641997639643705 ], [ -8.312710718100789, 44.68114355860939 ], [ -10.390698133615615, 44.68114355860939 ], [ -12.469142182755377, 44.68114355860939 ], [ -13.507983679304516, 45.720213371970885 ], [ -15.58642772844405, 45.720213371970885 ], [ -17.664567355167264, 45.720213371970885 ], [ -19.74255477068209, 45.720213371970885 ], [ -21.820998819821853, 45.720213371970885 ], [ -23.89913844654484, 45.720213371970885 ], [ -25.977125862059665, 45.720213371970885 ], [ -28.055569911199427, 45.720213371970885 ], [ -29.094411407748566, 45.720213371970885 ], [ -31.17285545688833, 45.720213371970885 ], [ -33.25099508361154, 45.720213371970885 ], [ -34.29014100257723, 45.720213371970885 ], [ -35.32898249912637, 45.720213371970885 ], [ -37.4074265482659, 45.720213371970885 ], [ -38.44626804481504, 45.720213371970885 ], [ -39.48556617498912, 45.720213371970885 ], [ -39.48556617498912, 44.68114355860939 ], [ -40.524712093954804, 44.68114355860939 ], [ -41.56355359050394, 43.641997639643705 ], [ -41.56355359050394, 42.60292782628221 ], [ -42.60285172067802, 41.56385801292049 ], [ -42.60285172067802, 40.524712093954804 ], [ -42.60285172067802, 38.44657246723182 ], [ -42.60285172067802, 36.36835673490441 ], [ -42.60285172067802, 35.329286921542916 ], [ -42.60285172067802, 34.29014100257723 ], [ -42.60285172067802, 32.212001375854015 ], [ -42.60285172067802, 31.17285545688833 ], [ -42.60285172067802, 30.133785643526835 ], [ -41.56355359050394, 28.055569911199427 ], [ -40.524712093954804, 27.016500097837934 ], [ -39.48556617498912, 25.97743028447644 ], [ -38.44626804481504, 23.899214552149033 ], [ -36.368280629300216, 22.86014473878754 ], [ -35.32898249912637, 21.820998819821853 ], [ -34.29014100257723, 19.74285919309864 ], [ -32.21169695343747, 18.70371327413295 ], [ -31.17285545688833, 17.664643460771458 ], [ -30.13370953792264, 16.625573647409738 ], [ -28.055569911199427, 15.58642772844405 ], [ -25.977125862059665, 14.547357915082557 ], [ -24.938284365510526, 13.508288101721064 ], [ -22.859840316370992, 13.508288101721064 ], [ -20.781852900856165, 12.469142182755377 ], [ -18.70371327413295, 12.469142182755377 ], [ -17.664567355167264, 11.430072369393656 ], [ -14.547281809478363, 11.430072369393656 ], [ -12.469142182755377, 10.391002556032163 ], [ -10.390698133615615, 10.391002556032163 ], [ -8.312710718100789, 10.391002556032163 ], [ -5.195425172411888, 10.391002556032163 ], [ -4.156127042237813, 9.351856637066476 ], [ -2.0781396267229866, 9.351856637066476 ], [ 0, 9.351856637066476 ], [ 1.039145918965687, 9.351856637066476 ], [ 2.0784440491397618, 9.351856637066476 ], [ 2.0784440491397618, 8.312786823704982 ], [ 3.117285545688901, 8.312786823704982 ], [ 3.117285545688901, 6.234571091377575 ], [ 4.156431464654588, 6.234571091377575 ], [ 4.156431464654588, 5.195501278016081 ], [ 4.156431464654588, 4.156431464654588 ], [ 4.156431464654588, 3.117285545688901 ], [ 4.156431464654588, 2.0782157323271804 ], [ 3.117285545688901, 2.0782157323271804 ], [ 1.039145918965687, 1.039145918965687 ], [ 0, 1.039145918965687 ], [ -2.0781396267229866, 0 ], [ -4.156127042237813, 0 ], [ -5.195425172411888, 0 ], [ -5.195425172411888, -1.0390698133614933 ], [ -7.273412587926714, -2.078139626723214 ], [ -8.312710718100789, -3.117285545688901 ], [ 0, 0 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -8.312710718100789, -3.117285545688901 ] }, { \"text\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\", \"fontSize\": 20, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 18, \"id\": \"S1vjqV1Q\", \"type\": \"text\", \"x\": -121.94045620728008, \"y\": -189.46569735563583, \"width\": 1272, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 32175, \"version\": 7, \"versionNonce\": 1456684749, \"updated\": 1661805005763, \"isDeleted\": true, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"containerId\": null, \"originalText\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\", \"rawText\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\" }, { \"id\": \"vYsrxL7U\", \"type\": \"text\", \"x\": -218.6050740812782, \"y\": -304.72596644269106, \"width\": 1477, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1012609251, \"version\": 4, \"versionNonce\": 570931437, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\", \"rawText\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\", \"fontSize\": 20, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 18, \"containerId\": null, \"originalText\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\" }, { \"id\": \"PVYfBsJKO7cDcaAL6P72R\", \"type\": \"freedraw\", \"x\": 28.66120269478506, \"y\": -674.1834400119578, \"width\": 17.664643460771458, \"height\": 4.156393411852491, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2046531171, \"version\": 24, \"versionNonce\": 1086660173, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805001043, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -1.0391078661637039 ], [ 1.039145918965687, -1.0391078661637039 ], [ 2.078215732327294, -1.0391078661637039 ], [ 3.1172855456887874, -1.0391078661637039 ], [ 4.156431464654474, -1.0391078661637039 ], [ 5.195501278016081, -1.0391078661637039 ], [ 6.234571091377688, -1.0391078661637039 ], [ 7.2737170103433755, -1.0391078661637039 ], [ 9.351856637066476, -1.0391078661637039 ], [ 10.391002556032163, -1.0391078661637039 ], [ 11.43007236939377, -1.0391078661637039 ], [ 12.469142182755263, -1.0391078661637039 ], [ 13.508288101721064, -1.0391078661637039 ], [ 13.508288101721064, -2.078215732327294 ], [ 14.547357915082557, -2.078215732327294 ], [ 15.586427728444164, -2.078215732327294 ], [ 16.62557364740985, -2.078215732327294 ], [ 16.62557364740985, -3.117285545688901 ], [ 17.664643460771458, -3.117285545688901 ], [ 17.664643460771458, -4.156393411852491 ], [ 17.664643460771458, -4.156393411852491 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 17.664643460771458, -4.156393411852491 ] }, { \"id\": \"aUc2JTpSv4pzL00UJcOSX\", \"type\": \"freedraw\", \"x\": -378.6640578714863, \"y\": -480.91177423205215, \"width\": 68.58028200515434, \"height\": 46.75928318533249, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1885108483, \"version\": 88, \"versionNonce\": 1123426733, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -1.0391078661637039 ], [ 1.0390698133614933, -1.0391078661637039 ], [ 2.0781396267231003, -1.0391078661637039 ], [ 2.0781396267231003, -2.078215732327294 ], [ 3.1172855456887874, -2.078215732327294 ], [ 3.1172855456887874, -3.117285545688901 ], [ 4.156355359050394, -3.117285545688901 ], [ 5.195425172411888, -4.156393411852491 ], [ 6.234571091377688, -4.156393411852491 ], [ 7.273640904739182, -5.195501278016195 ], [ 8.312710718100789, -5.195501278016195 ], [ 9.351856637066476, -6.234571091377688 ], [ 11.429996263789576, -6.234571091377688 ], [ 12.469142182755377, -7.273678957541392 ], [ 13.50821199611687, -7.273678957541392 ], [ 15.586427728444164, -7.273678957541392 ], [ 17.664567355167264, -8.312786823704982 ], [ 19.74278308749456, -8.312786823704982 ], [ 21.820998819821853, -8.312786823704982 ], [ 22.860068633183346, -8.312786823704982 ], [ 23.899138446544953, -8.312786823704982 ], [ 24.93828436551064, -8.312786823704982 ], [ 25.977354178872247, -8.312786823704982 ], [ 25.977354178872247, -7.273678957541392 ], [ 25.977354178872247, -6.234571091377688 ], [ 27.016423992233854, -5.195501278016195 ], [ 27.016423992233854, -4.156393411852491 ], [ 28.05556991119954, -2.078215732327294 ], [ 28.05556991119954, -1.0391078661637039 ], [ 28.05556991119954, 2.078177679525197 ], [ 29.094639724561034, 4.156355359050394 ], [ 29.094639724561034, 7.273640904739182 ], [ 29.094639724561034, 9.351856637066476 ], [ 29.094639724561034, 11.430034316591673 ], [ 28.05556991119954, 13.50821199611687 ], [ 27.016423992233854, 16.625497541805657 ], [ 24.93828436551064, 18.70371327413295 ], [ 22.860068633183346, 20.78185290085605 ], [ 19.74278308749456, 21.820998819821853 ], [ 16.62549754180577, 23.899138446544953 ], [ 13.50821199611687, 24.93828436551064 ], [ 9.351856637066476, 25.977354178872247 ], [ 5.195425172411888, 28.05556991119954 ], [ 1.0390698133614933, 30.13370953792264 ], [ -3.117285545688901, 32.211925270249935 ], [ -7.2737170103433755, 33.25099508361143 ], [ -10.391002556032277, 34.290141002577116 ], [ -12.469142182755377, 35.32921081593872 ], [ -15.586427728444164, 35.32921081593872 ], [ -17.664643460771458, 36.36828062930033 ], [ -19.742859193098752, 36.36828062930033 ], [ -20.78192900646036, 36.36828062930033 ], [ -21.820998819821853, 36.36828062930033 ], [ -20.78192900646036, 36.36828062930033 ], [ -19.742859193098752, 36.36828062930033 ], [ -17.664643460771458, 36.36828062930033 ], [ -14.54735791508267, 36.36828062930033 ], [ -12.469142182755377, 37.40742654826602 ], [ -9.351856637066476, 37.40742654826602 ], [ -4.156431464654588, 37.40742654826602 ], [ 0, 37.40742654826602 ], [ 4.156355359050394, 37.40742654826602 ], [ 9.351856637066476, 37.40742654826602 ], [ 13.50821199611687, 37.40742654826602 ], [ 17.664567355167264, 37.40742654826602 ], [ 19.74278308749456, 37.40742654826602 ], [ 22.860068633183346, 37.40742654826602 ], [ 23.899138446544953, 37.40742654826602 ], [ 24.93828436551064, 37.40742654826602 ], [ 25.977354178872247, 37.40742654826602 ], [ 27.016423992233854, 37.40742654826602 ], [ 29.094639724561034, 37.40742654826602 ], [ 32.211925270249935, 38.44649636162751 ], [ 34.29014100257723, 38.44649636162751 ], [ 36.36828062930033, 38.44649636162751 ], [ 37.40742654826602, 38.44649636162751 ], [ 39.48556617498912, 38.44649636162751 ], [ 40.524712093954804, 38.44649636162751 ], [ 41.56378190731641, 38.44649636162751 ], [ 42.60285172067802, 38.44649636162751 ], [ 43.641997639643705, 38.44649636162751 ], [ 44.6810674530052, 38.44649636162751 ], [ 45.720137266366805, 38.44649636162751 ], [ 46.75928318533249, 38.44649636162751 ], [ 46.75928318533249, 38.44649636162751 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 46.75928318533249, 38.44649636162751 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#2b8a3e\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"center\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Hello World in VStudio.excalidraw"},{"location":"COM326/Classes/Notes/Hello%20World%20in%20VStudio.excalidraw/#text-elements","text":"Open VS 2019 ^aQaDDNhK Click create a new project ^UaaJf2jP Filter selection to a C++ Windows application ^vtY8Wyvm Then choose a Console App ^QcZBPD6b Locate a suitable location and save the project as Hello_World ^2DX9QRfu You should see your project in a Class View tab. Clicking on Functions and Variables should give you the option to double click and open main(). ^nLRlsVjs You should then open a CPP file with the Hello World code snippet ^VxK6YtOt The program can be run and debugged by clicking the green arrow ^Mgn3oXvk","title":"Text Elements"},{"location":"COM326/Classes/Notes/Hello%20World%20in%20VStudio.excalidraw/#embedded-files","text":"91169eaf0a646fb035e5545d924929ceda73720f: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175954.png 6ca0cfddd3b2d127c751fc167f457530091fed01: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175709.png 3ef956cbaa18ea2ec69abd3ced9556247e29a72a: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829175445.png 1746f0016c0bea89005a3dd4ac62ca27db3d43f1: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829174622.png 463c356e4300532f3f6e6bcb083c84637414fa3d: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173910.png 41265119fec4c83a323f8b7153967523f080c251: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173805.png f01341042c07fc51fb5b7395de2250f05a7bfe0c: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173731.png be6f08b2e8313fee59206634ba2cf91b52f6d687: 1_Teaching/COM326/Classes/Labs/attachments/Pasted image 20220829173619.png %%","title":"Embedded files"},{"location":"COM326/Classes/Notes/Hello%20World%20in%20VStudio.excalidraw/#drawing","text":"{ \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"id\": \"7W4G7QR7\", \"type\": \"image\", \"x\": 370.68208818142966, \"y\": -259.84286450049547, \"width\": 405.456071892482, \"height\": 102.29396309213996, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 99520, \"version\": 1250, \"versionNonce\": 572432515, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"91169eaf0a646fb035e5545d924929ceda73720f\", \"scale\": [ 1, 1 ] }, { \"id\": \"F01V9C0C\", \"type\": \"image\", \"x\": 399.09679050789936, \"y\": -536.1244086375681, \"width\": 348.9559794398921, \"height\": 156.76640113066424, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 61445, \"version\": 1205, \"versionNonce\": 217832749, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"6ca0cfddd3b2d127c751fc167f457530091fed01\", \"scale\": [ 1, 1 ] }, { \"id\": \"oF4AuXQ5\", \"type\": \"image\", \"x\": 71.62061805417022, \"y\": -524.3339276849053, \"width\": 192.5, \"height\": 109.92763157894736, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 88206, \"version\": 1140, \"versionNonce\": 924686371, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [ { \"id\": \"XrSILbBoiObMqJYn5Iy0G\", \"type\": \"arrow\" } ], \"link\": null, \"locked\": false, \"fileId\": \"3ef956cbaa18ea2ec69abd3ced9556247e29a72a\", \"scale\": [ 1, 1 ] }, { \"id\": \"VIzo7bXP\", \"type\": \"image\", \"x\": 48.34638541575532, \"y\": -373.46844077816684, \"width\": 257.9166870117188, \"height\": 132.55161004317435, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 40574, \"version\": 728, \"versionNonce\": 88190861, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"1746f0016c0bea89005a3dd4ac62ca27db3d43f1\", \"scale\": [ 1, 1 ] }, { \"id\": \"gMHl8tMQ\", \"type\": \"image\", \"x\": -407.1134338378906, \"y\": -341.0029524693723, \"width\": 277.91668701171875, \"height\": 56.494539654841184, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 16541, \"version\": 518, \"versionNonce\": 748460995, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"463c356e4300532f3f6e6bcb083c84637414fa3d\", \"scale\": [ 1, 1 ] }, { \"id\": \"ZJ0oObbF\", \"type\": \"image\", \"x\": -229.36325073242188, \"y\": -570.3637630715555, \"width\": 134.91656494140625, \"height\": 27.952326990622847, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 71139, \"version\": 346, \"versionNonce\": 1843279341, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [ { \"id\": \"qCArOxz727wOlWZLDDPDx\", \"type\": \"arrow\" } ], \"link\": null, \"locked\": false, \"fileId\": \"41265119fec4c83a323f8b7153967523f080c251\", \"scale\": [ 1, 1 ] }, { \"id\": \"O54ybJ6O\", \"type\": \"image\", \"x\": -293.1366467114479, \"y\": -208.0828282379838, \"width\": 307.91656494140625, \"height\": 58.99577882910977, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 14681, \"version\": 1039, \"versionNonce\": 247081827, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"f01341042c07fc51fb5b7395de2250f05a7bfe0c\", \"scale\": [ 1, 1 ] }, { \"id\": \"XiaGXQBX\", \"type\": \"image\", \"x\": -271.6132507324219, \"y\": -491.8641592933532, \"width\": 214.41656494140625, \"height\": 83.70272321242062, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 85364, \"version\": 424, \"versionNonce\": 1910173773, \"updated\": 1661805005763, \"isDeleted\": false, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"fileId\": \"be6f08b2e8313fee59206634ba2cf91b52f6d687\", \"scale\": [ 1, 1 ] }, { \"id\": \"qCArOxz727wOlWZLDDPDx\", \"type\": \"arrow\", \"x\": -134.56316080605126, \"y\": -548.512776114816, \"width\": 16.489040447179406, \"height\": 67.88219963799747, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 341342765, \"version\": 1240, \"versionNonce\": 1640285955, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005763, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 16.489040447179406, 67.88219963799747 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"ISbF7ISe7eyN2LU8YwuY_\", \"type\": \"arrow\", \"x\": -233.6562023334211, \"y\": -420.11459841512385, \"width\": 115.92448597682335, \"height\": 105.21705278509455, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1658272131, \"version\": 834, \"versionNonce\": 521232045, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005763, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -115.92448597682335, 105.21705278509455 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"qpLwwU6vDWUDb7ETlFfXc\", \"type\": \"arrow\", \"x\": -173.4215100823855, \"y\": -296.82891796446756, \"width\": 64.45785848057938, \"height\": 106.17295838578895, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2022844867, \"version\": 919, \"versionNonce\": 473624227, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 64.45785848057938, 106.17295838578895 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"tN5Pe_9df65WOZGt0jB75\", \"type\": \"arrow\", \"x\": -48.493499755859375, \"y\": -183.58326530456543, \"width\": 102.54327939863663, \"height\": 104.21791743128426, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2025317325, \"version\": 428, \"versionNonce\": 204144909, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 102.54327939863663, -104.21791743128426 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"XrSILbBoiObMqJYn5Iy0G\", \"type\": \"arrow\", \"x\": 103.4489110392849, \"y\": -348.1780965228311, \"width\": 0.02900684234194273, \"height\": 57.24589062091019, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1940662701, \"version\": 396, \"versionNonce\": 1623925315, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -0.02900684234194273, -57.24589062091019 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": { \"elementId\": \"oF4AuXQ5\", \"focus\": 0.6697606501755824, \"gap\": 8.982308962216763 }, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"RIhWCua43bhRtOhI2bCyj\", \"type\": \"arrow\", \"x\": 259.5793503822397, \"y\": -500.90215976481034, \"width\": 157.72878035404972, \"height\": 47.24770966025142, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 522270125, \"version\": 609, \"versionNonce\": 1050761069, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 157.72878035404972, 47.24770966025142 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"x7dtq0yCgbIhQJyzJLO6m\", \"type\": \"arrow\", \"x\": 589.7725561691608, \"y\": -403.7156428941262, \"width\": 111.22930243732623, \"height\": 151.62593229620325, \"angle\": 0, \"strokeColor\": \"#000000\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 202791917, \"version\": 654, \"versionNonce\": 2018763235, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -111.22930243732623, 151.62593229620325 ] ], \"lastCommittedPoint\": null, \"startBinding\": null, \"endBinding\": null, \"startArrowhead\": null, \"endArrowhead\": \"arrow\" }, { \"id\": \"aQaDDNhK\", \"type\": \"text\", \"x\": -240.89978369303287, \"y\": -532.2834283063092, \"width\": 165.9000672725951, \"height\": 30.4897420933418, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 976400579, \"version\": 1355, \"versionNonce\": 1354621389, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Open VS 2019\", \"rawText\": \"Open VS 2019\", \"fontSize\": 24.805155832942226, \"fontFamily\": 1, \"textAlign\": \"left\", \"verticalAlign\": \"top\", \"baseline\": 21.4897420933418, \"containerId\": null, \"originalText\": \"Open VS 2019\" }, { \"id\": \"UaaJf2jP\", \"type\": \"text\", \"x\": -472.44888137592284, \"y\": -390.2585973395355, \"width\": 396, \"height\": 38, \"angle\": 6.269720806792705, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 729038851, \"version\": 770, \"versionNonce\": 199470467, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Click create a new project\", \"rawText\": \"Click create a new project\", \"fontSize\": 30.16739592589649, \"fontFamily\": 1, \"textAlign\": \"left\", \"verticalAlign\": \"top\", \"baseline\": 27, \"containerId\": null, \"originalText\": \"Click create a new project\" }, { \"id\": \"vtY8Wyvm\", \"type\": \"text\", \"x\": -460.73517757008096, \"y\": -278.8163063951808, \"width\": 296, \"height\": 63, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 647853581, \"version\": 659, \"versionNonce\": 1469718573, \"isDeleted\": false, \"boundElements\": [], \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Filter selection to a \\nC++ Windows application\", \"rawText\": \"Filter selection to a \\nC++ Windows application\", \"fontSize\": 25.192305560865993, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 54, \"containerId\": null, \"originalText\": \"Filter selection to a \\nC++ Windows application\" }, { \"id\": \"QcZBPD6b\", \"type\": \"text\", \"x\": -241.19423127932862, \"y\": -135.74604508558764, \"width\": 202.27782050578654, \"height\": 66.10386291038775, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 6756035, \"version\": 288, \"versionNonce\": 515441955, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Then choose a \\nConsole App\", \"rawText\": \"Then choose a \\nConsole App\", \"fontSize\": 26.441545164155105, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 56.10386291038775, \"containerId\": null, \"originalText\": \"Then choose a \\nConsole App\" }, { \"id\": \"2DX9QRfu\", \"type\": \"text\", \"x\": 26.989359960175364, \"y\": -225.4235554507519, \"width\": 318, \"height\": 90, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1842914467, \"version\": 326, \"versionNonce\": 153064077, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"Locate a suitable location\\n and save the project \\nas Hello_World\", \"rawText\": \"Locate a suitable location\\n and save the project \\nas Hello_World\", \"fontSize\": 23.97950423729789, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 81, \"containerId\": null, \"originalText\": \"Locate a suitable location\\n and save the project \\nas Hello_World\" }, { \"id\": \"nLRlsVjs\", \"type\": \"text\", \"x\": -54.445092070158466, \"y\": -616.6358107021016, \"width\": 548.6436967967765, \"height\": 81.64340726142507, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 67232653, \"version\": 203, \"versionNonce\": 1212311747, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\", \"rawText\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\", \"fontSize\": 21.771575269713345, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 72.64340726142507, \"containerId\": null, \"originalText\": \"You should see your project in a Class View tab. \\nClicking on Functions and Variables should give you \\nthe option to double click and open main().\" }, { \"id\": \"VxK6YtOt\", \"type\": \"text\", \"x\": 351.0780207727323, \"y\": -368.669171886331, \"width\": 420.6101944636313, \"height\": 64.1174076926267, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 975467405, \"version\": 974, \"versionNonce\": 773740643, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should then open a CPP file \\nwith the Hello World code snippet\", \"rawText\": \"You should then open a CPP file \\nwith the Hello World code snippet\", \"fontSize\": 25.646963077050685, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 54.1174076926267, \"containerId\": null, \"originalText\": \"You should then open a CPP file \\nwith the Hello World code snippet\" }, { \"id\": \"Mgn3oXvk\", \"type\": \"text\", \"x\": 340.55715599363407, \"y\": -138.80579657004034, \"width\": 438, \"height\": 62, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1184937517, \"version\": 265, \"versionNonce\": 198972237, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"The program can be run and \\ndebugged by clicking the green arrow\", \"rawText\": \"The program can be run and \\ndebugged by clicking the green arrow\", \"fontSize\": 24.65044590557881, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 53, \"containerId\": null, \"originalText\": \"The program can be run and \\ndebugged by clicking the green arrow\" }, { \"id\": \"fwQqrnaF9pDKc3bhLgAfi\", \"type\": \"freedraw\", \"x\": -249.58243692701507, \"y\": -643.7079112125721, \"width\": 14.117407692626784, \"height\": 44.84327271623488, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 275910499, \"version\": 50, \"versionNonce\": 1041978371, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0.8304107020328502, 0 ], [ 1.6609430492281945, 0 ], [ 2.4912929286797407, -0.8303802907422551 ], [ 3.321703630712534, -0.8303802907422551 ], [ 4.152235977907878, -1.6608518153564091 ], [ 5.812996559392275, -2.4912929286797407 ], [ 7.473878786039165, -3.321673219421996 ], [ 8.304289488072016, -3.321673219421996 ], [ 8.304289488072016, -4.15214474403615 ], [ 9.965171714718906, -4.15214474403615 ], [ 9.965171714718906, -4.9825858573594815 ], [ 10.7955824167517, -4.9825858573594815 ], [ 10.7955824167517, -5.812966148101623 ], [ 11.626114763947044, -5.812966148101623 ], [ 12.45646464339859, -5.812966148101623 ], [ 12.45646464339859, -6.643437672715777 ], [ 13.28687534543144, -6.643437672715777 ], [ 14.117407692626784, -6.643437672715777 ], [ 14.117407692626784, -7.473878786039222 ], [ 14.117407692626784, -6.643437672715777 ], [ 14.117407692626784, -4.9825858573594815 ], [ 14.117407692626784, -3.321673219421996 ], [ 14.117407692626784, -1.6608518153564091 ], [ 14.117407692626784, 0.8304411133233316 ], [ 14.117407692626784, 3.3217340420030723 ], [ 14.117407692626784, 5.813026970682813 ], [ 14.117407692626784, 9.134791423976594 ], [ 14.117407692626784, 12.456464643398476 ], [ 14.117407692626784, 15.778198685401776 ], [ 14.117407692626784, 17.439050500757958 ], [ 14.117407692626784, 19.9303434294377 ], [ 14.117407692626784, 22.42163635811744 ], [ 14.117407692626784, 24.082548996054925 ], [ 14.117407692626784, 24.91292928679718 ], [ 14.117407692626784, 26.573841924734666 ], [ 14.117407692626784, 27.40422221547692 ], [ 14.117407692626784, 29.065134853414406 ], [ 14.117407692626784, 29.895515144156548 ], [ 14.117407692626784, 30.725956257479993 ], [ 14.117407692626784, 31.556427782094033 ], [ 14.117407692626784, 33.217249186159734 ], [ 14.117407692626784, 34.87810100151603 ], [ 14.117407692626784, 35.708542114839474 ], [ 14.117407692626784, 36.539013639453515 ], [ 14.117407692626784, 37.369393930195656 ], [ 14.117407692626784, 37.369393930195656 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 14.117407692626784, 37.369393930195656 ] }, { \"id\": \"s390ptqKN_X71cPytsCAa\", \"type\": \"freedraw\", \"x\": -371.3904169667471, \"y\": -475.71631100683817, \"width\": 40.52471209395492, \"height\": 58.189355554726376, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 674749347, \"version\": 67, \"versionNonce\": 1599972163, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805007345, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039069813361607, 0 ], [ 2.078215732327294, 0 ], [ 3.117285545688901, 0 ], [ 5.195501278016195, 0 ], [ 6.234571091377688, -1.0391078661635902 ], [ 7.273640904739295, -2.078177679525197 ], [ 8.312786823704982, -2.078177679525197 ], [ 9.35185663706659, -3.1172855456887874 ], [ 10.390926450428083, -4.156393411852491 ], [ 11.43007236939377, -5.1954632252139845 ], [ 13.508211996116984, -6.234571091377688 ], [ 14.54735791508267, -7.273678957541279 ], [ 15.586427728444164, -7.273678957541279 ], [ 16.62549754180577, -8.312748770902886 ], [ 17.664643460771458, -8.312748770902886 ], [ 18.703713274133065, -9.351856637066476 ], [ 19.742783087494672, -10.39096450323018 ], [ 20.78192900646036, -10.39096450323018 ], [ 21.820998819821853, -10.39096450323018 ], [ 22.86006863318346, -10.39096450323018 ], [ 23.899214552149147, -10.39096450323018 ], [ 24.938284365510754, -10.39096450323018 ], [ 27.016500097838048, -9.351856637066476 ], [ 27.016500097838048, -8.312748770902886 ], [ 28.05556991119954, -8.312748770902886 ], [ 28.05556991119954, -7.273678957541279 ], [ 28.05556991119954, -5.1954632252139845 ], [ 28.05556991119954, -4.156393411852491 ], [ 28.05556991119954, -1.0391078661635902 ], [ 28.05556991119954, 1.0391078661635902 ], [ 28.05556991119954, 3.117285545688901 ], [ 28.05556991119954, 6.234571091377688 ], [ 27.016500097838048, 9.351818584264493 ], [ 24.938284365510754, 11.430034316591673 ], [ 23.899214552149147, 14.547319862280574 ], [ 21.820998819821853, 17.66460540796936 ], [ 19.742783087494672, 20.781890953658262 ], [ 16.62549754180577, 23.89917649934705 ], [ 14.54735791508267, 27.01646204503595 ], [ 11.43007236939377, 30.133747590724738 ], [ 8.312786823704982, 33.251033136413525 ], [ 5.195501278016195, 36.36831868210243 ], [ 2.078215732327294, 39.485604227791214 ], [ 0, 40.52467404115282 ], [ -1.0390698133614933, 42.602889773480115 ], [ -3.1172855456887874, 44.68110550580741 ], [ -4.156355359050394, 46.75924513253051 ], [ -5.195501278016081, 46.75924513253051 ], [ -5.195501278016081, 47.798391051496196 ], [ -4.156355359050394, 47.798391051496196 ], [ -3.1172855456887874, 47.798391051496196 ], [ -1.0390698133614933, 47.798391051496196 ], [ 2.078215732327294, 47.798391051496196 ], [ 5.195501278016195, 47.798391051496196 ], [ 9.35185663706659, 47.798391051496196 ], [ 12.469142182755377, 47.798391051496196 ], [ 15.586427728444164, 47.798391051496196 ], [ 19.742783087494672, 46.75924513253051 ], [ 22.86006863318346, 46.75924513253051 ], [ 27.016500097838048, 46.75924513253051 ], [ 30.133785643526835, 46.75924513253051 ], [ 32.211925270249935, 46.75924513253051 ], [ 34.29014100257723, 46.75924513253051 ], [ 35.329210815938836, 45.7201753191689 ], [ 35.329210815938836, 45.7201753191689 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 35.329210815938836, 45.7201753191689 ] }, { \"id\": \"uEqlR7kVT3keL3sy7ab1r\", \"type\": \"freedraw\", \"x\": -496.08183879430055, \"y\": -214.90343303513953, \"width\": 38.446496361627624, \"height\": 58.189431660330456, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 154363501, \"version\": 94, \"versionNonce\": 1530797475, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805013963, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.0390698133615501, 0 ], [ 2.078291837931431, 0 ], [ 3.117285545688844, 0 ], [ 4.156355359050394, -1.0389937077574132 ], [ 5.195577383620275, -1.0389937077574132 ], [ 6.234571091377688, -2.078215732327294 ], [ 7.2736409047392385, -2.078215732327294 ], [ 9.351856637066533, -2.078215732327294 ], [ 10.390926450428083, -3.1172855456887874 ], [ 12.46914218275532, -3.1172855456887874 ], [ 14.547434020686751, -3.1172855456887874 ], [ 15.586427728444164, -3.1172855456887874 ], [ 17.664719566375595, -3.1172855456887874 ], [ 19.74278308749456, -3.1172855456887874 ], [ 20.78200511206444, -3.1172855456887874 ], [ 23.899290657753284, -2.078215732327294 ], [ 24.938284365510697, -1.0389937077574132 ], [ 27.016576203442128, 0 ], [ 28.05556991119954, 1.039069813361607 ], [ 29.09463972456109, 2.078291837931374 ], [ 29.09463972456109, 3.1172855456887874 ], [ 30.133861749130915, 4.156355359050394 ], [ 30.133861749130915, 6.234571091377688 ], [ 30.133861749130915, 7.273640904739295 ], [ 30.133861749130915, 8.312862929309063 ], [ 30.133861749130915, 9.351856637066476 ], [ 29.09463972456109, 10.390926450428083 ], [ 24.938284365510697, 13.50821199611687 ], [ 23.899290657753284, 14.547434020686751 ], [ 14.547434020686751, 21.820998819821853 ], [ 12.46914218275532, 21.820998819821853 ], [ 11.430148474997907, 22.86006863318346 ], [ 9.351856637066533, 22.86006863318346 ], [ 8.312862929309063, 22.86006863318346 ], [ 7.2736409047392385, 22.86006863318346 ], [ 8.312862929309063, 22.86006863318346 ], [ 10.390926450428083, 22.86006863318346 ], [ 12.46914218275532, 22.86006863318346 ], [ 14.547434020686751, 22.86006863318346 ], [ 16.62549754180577, 22.86006863318346 ], [ 19.74278308749456, 22.86006863318346 ], [ 20.78200511206444, 22.86006863318346 ], [ 23.899290657753284, 22.86006863318346 ], [ 24.938284365510697, 22.86006863318346 ], [ 27.016576203442128, 22.86006863318346 ], [ 28.05556991119954, 22.86006863318346 ], [ 29.09463972456109, 22.86006863318346 ], [ 29.09463972456109, 23.899290657753227 ], [ 29.09463972456109, 24.93828436551064 ], [ 30.133861749130915, 24.93828436551064 ], [ 30.133861749130915, 25.977354178872247 ], [ 31.172855456888385, 27.016576203442128 ], [ 32.211925270249935, 29.094639724561148 ], [ 32.211925270249935, 30.133861749130915 ], [ 33.25114729481976, 31.17285545688833 ], [ 34.29014100257717, 33.251147294819816 ], [ 35.32921081593872, 35.32921081593872 ], [ 36.36835673490452, 36.3684328405086 ], [ 36.36835673490452, 37.40742654826602 ], [ 37.40742654826602, 39.485718386197505 ], [ 37.40742654826602, 40.52471209395492 ], [ 38.446496361627624, 40.52471209395492 ], [ 38.446496361627624, 42.60300393188629 ], [ 38.446496361627624, 43.641997639643705 ], [ 38.446496361627624, 44.68106745300531 ], [ 38.446496361627624, 45.72028947757508 ], [ 37.40742654826602, 46.759283185332606 ], [ 36.36835673490452, 46.759283185332606 ], [ 35.32921081593872, 47.7983529986941 ], [ 33.25114729481976, 48.83757502326398 ], [ 32.211925270249935, 48.83757502326398 ], [ 30.133861749130915, 49.87656873102139 ], [ 28.05556991119954, 50.915638544383 ], [ 25.977354178872247, 51.95486056895277 ], [ 23.899290657753284, 51.95486056895277 ], [ 20.78200511206444, 52.99385427671018 ], [ 18.70371327413301, 54.03292409007179 ], [ 16.62549754180577, 55.07214611464167 ], [ 13.508211996116927, 55.07214611464167 ], [ 12.46914218275532, 55.07214611464167 ], [ 10.390926450428083, 55.07214611464167 ], [ 9.351856637066533, 55.07214611464167 ], [ 8.312862929309063, 55.07214611464167 ], [ 6.234571091377688, 55.07214611464167 ], [ 4.156355359050394, 55.07214611464167 ], [ 4.156355359050394, 54.03292409007179 ], [ 3.117285545688844, 54.03292409007179 ], [ 2.078291837931431, 52.99385427671018 ], [ 2.078291837931431, 51.95486056895277 ], [ 2.078291837931431, 50.915638544383 ], [ 2.078291837931431, 49.87656873102139 ], [ 2.078291837931431, 49.87656873102139 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 2.078291837931431, 49.87656873102139 ] }, { \"id\": \"RpHzmjRQjJgTKCR78-_Oj\", \"type\": \"freedraw\", \"x\": -293.4582783245262, \"y\": -99.56386784465258, \"width\": 48.83742281205559, \"height\": 31.17285545688833, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 360071693, \"version\": 36, \"versionNonce\": 1508354787, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805016072, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, 1.039069813361607 ], [ 0, 2.078291837931374 ], [ 0, 3.1172855456887874 ], [ -1.039069813361607, 4.156355359050394 ], [ -2.078215732327294, 6.234571091377688 ], [ -2.078215732327294, 8.312862929309063 ], [ -2.078215732327294, 11.430148474997964 ], [ -3.1172855456887874, 14.547434020686751 ], [ -4.156355359050394, 17.664719566375652 ], [ -5.195501278016081, 20.78200511206444 ], [ -5.195501278016081, 23.899290657753227 ], [ -6.234571091377688, 25.977354178872247 ], [ -6.234571091377688, 28.05556991119954 ], [ -6.234571091377688, 29.094639724561148 ], [ -7.273640904739182, 30.133861749130915 ], [ -7.273640904739182, 31.17285545688833 ], [ -6.234571091377688, 31.17285545688833 ], [ -4.156355359050394, 31.17285545688833 ], [ 0, 31.17285545688833 ], [ 3.117285545688901, 31.17285545688833 ], [ 7.273640904739295, 31.17285545688833 ], [ 12.469142182755377, 31.17285545688833 ], [ 16.62549754180577, 31.17285545688833 ], [ 21.820998819821853, 31.17285545688833 ], [ 27.016500097837934, 31.17285545688833 ], [ 31.17285545688833, 31.17285545688833 ], [ 35.32921081593872, 31.17285545688833 ], [ 38.446496361627624, 31.17285545688833 ], [ 39.48564228059331, 31.17285545688833 ], [ 40.52471209395492, 31.17285545688833 ], [ 41.56378190731641, 31.17285545688833 ], [ 41.56378190731641, 30.133861749130915 ], [ 41.56378190731641, 29.094639724561148 ], [ 41.56378190731641, 29.094639724561148 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 41.56378190731641, 29.094639724561148 ] }, { \"id\": \"agEwBnm6_vA7f90W2b_TS\", \"type\": \"freedraw\", \"x\": -275.79363486375473, \"y\": -91.25100491534351, \"width\": 2.0781396267231003, \"height\": 48.83734670645151, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1508321485, \"version\": 26, \"versionNonce\": 418515459, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805016633, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039069813361607, 0 ], [ 1.039069813361607, 1.0389937077574132 ], [ 1.039069813361607, 3.117285545688901 ], [ 1.039069813361607, 4.156279253446314 ], [ 1.039069813361607, 6.234571091377688 ], [ 1.039069813361607, 8.312634612496709 ], [ 1.039069813361607, 11.429920158185496 ], [ 1.039069813361607, 14.547205703874397 ], [ 1.039069813361607, 17.664491249563184 ], [ 1.039069813361607, 21.820998819821853 ], [ 1.039069813361607, 25.977278073268167 ], [ 1.039069813361607, 31.172855456888442 ], [ 1.039069813361607, 36.36820452369625 ], [ 1.039069813361607, 40.52471209395492 ], [ 1.039069813361607, 43.641997639643705 ], [ 1.039069813361607, 45.720061160762725 ], [ 1.039069813361607, 47.79827689309002 ], [ 1.039069813361607, 48.83734670645151 ], [ 1.039069813361607, 47.79827689309002 ], [ 1.039069813361607, 46.759283185332606 ], [ 1.039069813361607, 44.68099134740112 ], [ 2.0781396267231003, 42.60277561507394 ], [ 2.0781396267231003, 40.52471209395492 ], [ 2.0781396267231003, 40.52471209395492 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 2.0781396267231003, 40.52471209395492 ] }, { \"id\": \"FpE7szPAkFZfoLczSL8HU\", \"type\": \"freedraw\", \"x\": 231.28476316456, \"y\": -113.07200373516537, \"width\": 72.73671346980882, \"height\": 47.79850520990237, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 781044653, \"version\": 96, \"versionNonce\": 1695832067, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805019589, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.039145918965687, 0 ], [ -3.117285545688901, 0 ], [ -4.156431464654588, 0 ], [ -6.234571091377802, 0 ], [ -8.312558506892628, 0 ], [ -11.42984405258153, 0 ], [ -14.547129598270203, 0 ], [ -17.664415143959104, 0 ], [ -20.781700689648005, -1.0392220245698809 ], [ -23.89898623533668, -1.0392220245698809 ], [ -28.055569911199655, -1.0392220245698809 ], [ -31.17285545688833, -2.078291837931374 ], [ -34.29014100257723, -2.078291837931374 ], [ -38.44657246723182, -2.078291837931374 ], [ -40.52471209395503, -3.1172855456887874 ], [ -43.641997639643705, -3.1172855456887874 ], [ -44.68114355860939, -3.1172855456887874 ], [ -46.759283185332606, -3.1172855456887874 ], [ -47.79842910429829, -3.1172855456887874 ], [ -48.83727060084743, -4.156507570258668 ], [ -49.87656873102151, -4.156507570258668 ], [ -50.915714649987194, -4.156507570258668 ], [ -51.95455614653633, -4.156507570258668 ], [ -51.95455614653633, -3.1172855456887874 ], [ -51.95455614653633, -2.078291837931374 ], [ -51.95455614653633, 0 ], [ -51.95455614653633, 2.07806352111902 ], [ -49.87656873102151, 4.156279253446314 ], [ -49.87656873102151, 6.234571091377688 ], [ -48.83727060084743, 9.35185663706659 ], [ -48.83727060084743, 11.429920158185496 ], [ -48.83727060084743, 13.50813589051279 ], [ -47.79842910429829, 14.547205703874397 ], [ -47.79842910429829, 15.586427728444164 ], [ -47.79842910429829, 16.625421436201577 ], [ -47.79842910429829, 17.664491249563184 ], [ -47.79842910429829, 18.703713274133065 ], [ -47.79842910429829, 19.74270698189048 ], [ -47.79842910429829, 20.781776795252085 ], [ -46.759283185332606, 20.781776795252085 ], [ -44.68114355860939, 20.781776795252085 ], [ -43.641997639643705, 20.781776795252085 ], [ -41.56385801292072, 20.781776795252085 ], [ -39.48541396378096, 20.781776795252085 ], [ -36.368128418092056, 20.781776795252085 ], [ -32.21200137585424, 19.74270698189048 ], [ -29.09471583016534, 19.74270698189048 ], [ -24.938284365510754, 19.74270698189048 ], [ -22.86014473878754, 19.74270698189048 ], [ -18.70371327413318, 19.74270698189048 ], [ -14.547129598270203, 19.74270698189048 ], [ -11.42984405258153, 20.781776795252085 ], [ -9.351856637066476, 21.820998819821853 ], [ -6.234571091377802, 21.820998819821853 ], [ -4.156431464654588, 22.859992527579266 ], [ -3.117285545688901, 22.859992527579266 ], [ -1.039145918965687, 23.899062340940873 ], [ 0, 23.899062340940873 ], [ 1.0392981301738473, 25.977278073268167 ], [ 1.0392981301738473, 27.01634788662966 ], [ 2.0781396267229866, 28.05556991119954 ], [ 2.0781396267229866, 30.13363343231856 ], [ 3.1172855456886737, 31.172855456888442 ], [ 3.1172855456886737, 32.211849164645855 ], [ 3.1172855456886737, 34.29014100257723 ], [ 3.1172855456886737, 35.32913471033464 ], [ 3.1172855456886737, 36.36820452369625 ], [ 3.1172855456886737, 38.44642025602343 ], [ 3.1172855456886737, 39.48549006938504 ], [ 3.1172855456886737, 40.52471209395492 ], [ 2.0781396267229866, 42.60277561507394 ], [ 0, 42.60277561507394 ], [ -2.0779874155148264, 43.641997639643705 ], [ -4.156431464654588, 43.641997639643705 ], [ -8.312558506892628, 43.641997639643705 ], [ -11.42984405258153, 43.641997639643705 ], [ -15.586427728444278, 43.641997639643705 ], [ -20.781700689648005, 41.56370580171233 ], [ -25.97743028447644, 40.52471209395492 ], [ -31.17285545688833, 38.44642025602343 ], [ -37.40742654826613, 37.40742654826602 ], [ -42.60269950946986, 36.36820452369625 ], [ -47.79842910429829, 35.32913471033464 ], [ -51.95455614653633, 34.29014100257723 ], [ -56.11113982239908, 34.29014100257723 ], [ -59.22842536808798, 34.29014100257723 ], [ -62.345710913776884, 34.29014100257723 ], [ -64.42369832929171, 34.29014100257723 ], [ -66.50214237843124, 34.29014100257723 ], [ -67.54098387498038, 34.29014100257723 ], [ -68.58028200515446, 34.29014100257723 ], [ -69.61942792412015, 34.29014100257723 ], [ -69.61942792412015, 33.25091897800735 ], [ -69.61942792412015, 33.25091897800735 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -69.61942792412015, 33.25091897800735 ] }, { \"id\": \"MO8Ri45CyyREgOd_Vqw21\", \"type\": \"freedraw\", \"x\": 174.13447742319522, \"y\": -684.5744425679902, \"width\": 40.52471209395503, \"height\": 46.759283185332606, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1728011693, \"version\": 104, \"versionNonce\": 1104809091, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805021937, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.0388414965491393, 0 ], [ -2.078139626723214, 0 ], [ -3.117285545688901, 0 ], [ -4.15612704223804, 0 ], [ -5.195425172412115, 0 ], [ -6.234571091377802, 0 ], [ -7.273412587926941, 1.039145918965687 ], [ -9.351856637066476, 1.039145918965687 ], [ -10.390698133615615, 2.078177679525197 ], [ -11.42999626378969, 3.117285545688901 ], [ -13.507983679304516, 3.117285545688901 ], [ -14.54728180947859, 4.156431464654588 ], [ -16.625269224993417, 5.195463225214098 ], [ -18.70371327413318, 6.234571091377688 ], [ -20.781852900856165, 7.2737170103433755 ], [ -22.859840316370992, 8.312748770902886 ], [ -23.899138446545066, 10.391002556032163 ], [ -25.977125862059893, 11.430034316591673 ], [ -28.055569911199655, 12.469142182755377 ], [ -30.13370953792264, 13.508288101721064 ], [ -31.17285545688833, 15.586427728444278 ], [ -33.25099508361154, 16.625573647409965 ], [ -35.32898249912637, 16.625573647409965 ], [ -35.32898249912637, 17.664605407969475 ], [ -36.36828062930044, 18.70371327413295 ], [ -37.40742654826613, 19.742859193098752 ], [ -38.44626804481527, 20.78189095365815 ], [ -39.48556617498912, 20.78189095365815 ], [ -39.48556617498912, 21.820998819821853 ], [ -39.48556617498912, 22.86014473878754 ], [ -39.48556617498912, 23.89917649934705 ], [ -40.52471209395503, 23.89917649934705 ], [ -40.52471209395503, 24.938284365510754 ], [ -40.52471209395503, 25.97743028447644 ], [ -40.52471209395503, 27.01646204503595 ], [ -40.52471209395503, 28.05556991119954 ], [ -40.52471209395503, 29.094715830165228 ], [ -40.52471209395503, 30.133747590724738 ], [ -40.52471209395503, 31.17285545688833 ], [ -40.52471209395503, 32.212001375854015 ], [ -40.52471209395503, 33.251033136413525 ], [ -40.52471209395503, 34.29014100257723 ], [ -40.52471209395503, 35.329286921542916 ], [ -40.52471209395503, 37.40742654826613 ], [ -40.52471209395503, 38.44657246723182 ], [ -39.48556617498912, 39.48560422779133 ], [ -38.44626804481527, 41.563858012920605 ], [ -37.40742654826613, 42.60288977348 ], [ -37.40742654826613, 43.641997639643705 ], [ -36.36828062930044, 43.641997639643705 ], [ -36.36828062930044, 44.68114355860939 ], [ -35.32898249912637, 45.7201753191689 ], [ -34.29014100257723, 45.7201753191689 ], [ -33.25099508361154, 45.7201753191689 ], [ -32.21169695343747, 45.7201753191689 ], [ -31.17285545688833, 46.759283185332606 ], [ -29.094411407748794, 46.759283185332606 ], [ -28.055569911199655, 46.759283185332606 ], [ -27.016423992233968, 46.759283185332606 ], [ -25.977125862059893, 46.759283185332606 ], [ -24.938284365510754, 46.759283185332606 ], [ -23.899138446545066, 46.759283185332606 ], [ -22.859840316370992, 46.759283185332606 ], [ -21.820998819821853, 46.759283185332606 ], [ -20.781852900856165, 46.759283185332606 ], [ -19.742554770682318, 46.759283185332606 ], [ -18.70371327413318, 46.759283185332606 ], [ -18.70371327413318, 45.7201753191689 ], [ -18.70371327413318, 44.68114355860939 ], [ -17.664567355167264, 44.68114355860939 ], [ -16.625269224993417, 43.641997639643705 ], [ -16.625269224993417, 42.60288977348 ], [ -16.625269224993417, 41.563858012920605 ], [ -15.586427728444278, 40.524712093954804 ], [ -15.586427728444278, 39.48560422779133 ], [ -15.586427728444278, 38.44657246723182 ], [ -14.54728180947859, 37.40742654826613 ], [ -14.54728180947859, 36.36831868210243 ], [ -14.54728180947859, 35.329286921542916 ], [ -14.54728180947859, 34.29014100257723 ], [ -14.54728180947859, 33.251033136413525 ], [ -14.54728180947859, 32.212001375854015 ], [ -14.54728180947859, 31.17285545688833 ], [ -14.54728180947859, 30.133747590724738 ], [ -15.586427728444278, 30.133747590724738 ], [ -16.625269224993417, 29.094715830165228 ], [ -17.664567355167264, 28.05556991119954 ], [ -18.70371327413318, 28.05556991119954 ], [ -18.70371327413318, 27.01646204503595 ], [ -19.742554770682318, 27.01646204503595 ], [ -20.781852900856165, 27.01646204503595 ], [ -21.820998819821853, 27.01646204503595 ], [ -22.859840316370992, 25.97743028447644 ], [ -24.938284365510754, 25.97743028447644 ], [ -25.977125862059893, 25.97743028447644 ], [ -27.016423992233968, 25.97743028447644 ], [ -28.055569911199655, 25.97743028447644 ], [ -30.13370953792264, 25.97743028447644 ], [ -31.17285545688833, 24.938284365510754 ], [ -32.21169695343747, 24.938284365510754 ], [ -33.25099508361154, 24.938284365510754 ], [ -33.25099508361154, 24.938284365510754 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -33.25099508361154, 24.938284365510754 ] }, { \"id\": \"gWU3Z-b1RbusE2XsafUkc\", \"type\": \"freedraw\", \"x\": 592.8903430980895, \"y\": -597.290447288703, \"width\": 65.46299645946556, \"height\": 63.38481877994025, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1778200877, \"version\": 53, \"versionNonce\": 1333924589, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805025604, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.0388414965491393, 0 ], [ 2.0779874155148264, 0 ], [ 5.195272961203727, 0 ], [ 8.312558506892628, 0 ], [ 12.469142182755377, 1.0391078661635902 ], [ 16.625269224993417, 1.0391078661635902 ], [ 20.781700689647778, 1.0391078661635902 ], [ 25.977125862059893, 2.078177679525197 ], [ 32.21169695343747, 2.078177679525197 ], [ 38.44626804481527, 2.078177679525197 ], [ 44.680839136192844, 3.1172855456887874 ], [ 48.83727060084743, 3.1172855456887874 ], [ 52.99385427671018, 3.1172855456887874 ], [ 56.11113982239908, 3.1172855456887874 ], [ 58.18912723791391, 3.1172855456887874 ], [ 60.26726686463712, 4.1563934118523775 ], [ 62.34571091377666, 4.1563934118523775 ], [ 63.384552410325796, 4.1563934118523775 ], [ 64.42369832929148, 4.1563934118523775 ], [ 65.46299645946556, 5.1954632252139845 ], [ 65.46299645946556, 6.234571091377575 ], [ 65.46299645946556, 7.273678957541279 ], [ 65.46299645946556, 9.351856637066476 ], [ 65.46299645946556, 11.430034316591673 ], [ 64.42369832929148, 13.508250048918967 ], [ 63.384552410325796, 16.625535594607754 ], [ 62.34571091377666, 19.74282114029654 ], [ 60.26726686463712, 23.899176499346936 ], [ 58.18912723791391, 27.016462045035837 ], [ 55.07184169222501, 30.133747590724624 ], [ 52.99385427671018, 33.251033136413525 ], [ 50.91541022757042, 36.36831868210231 ], [ 48.83727060084743, 39.485604227791214 ], [ 46.759283185332606, 41.563819960118394 ], [ 45.71998505515853, 44.681105505807295 ], [ 44.680839136192844, 47.79839105149608 ], [ 43.641997639643705, 49.87656873102128 ], [ 42.60269950946963, 51.95474641054648 ], [ 41.56355359050394, 52.99385427671018 ], [ 41.56355359050394, 54.03296214287377 ], [ 41.56355359050394, 55.07203195623538 ], [ 41.56355359050394, 56.11113982239897 ], [ 40.524712093954804, 57.15024768856267 ], [ 40.524712093954804, 58.189317501924165 ], [ 40.524712093954804, 59.22842536808787 ], [ 40.524712093954804, 60.26753323425146 ], [ 40.524712093954804, 61.306603047613066 ], [ 39.48541396378096, 62.34571091377666 ], [ 39.48541396378096, 63.38481877994025 ], [ 38.44626804481527, 63.38481877994025 ], [ 38.44626804481527, 63.38481877994025 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 38.44626804481527, 63.38481877994025 ] }, { \"id\": \"KjK_tyinSO5TvAA4-RUF-\", \"type\": \"freedraw\", \"x\": 631.3366111429048, \"y\": -564.0394141522895, \"width\": 37.4074265482659, \"height\": 4.156393411852491, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1871617635, \"version\": 26, \"versionNonce\": 1726104013, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805026381, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 1.039145918965687, 0 ], [ 3.1172855456886737, 0 ], [ 5.195729594828435, 0 ], [ 7.273717010343262, 0 ], [ 9.351856637066476, 1.0391078661635902 ], [ 12.46914218275515, 1.0391078661635902 ], [ 14.547586231894911, 1.0391078661635902 ], [ 16.625573647409738, 1.0391078661635902 ], [ 17.664871777583812, 1.0391078661635902 ], [ 18.70371327413295, 1.0391078661635902 ], [ 19.74285919309864, 1.0391078661635902 ], [ 20.782157323272713, 1.0391078661635902 ], [ 21.820998819821853, 1.0391078661635902 ], [ 22.86014473878754, 1.0391078661635902 ], [ 23.899442868961387, 1.0391078661635902 ], [ 24.938284365510526, 1.0391078661635902 ], [ 27.016728414650288, 2.078215732327294 ], [ 29.094715830165114, 2.078215732327294 ], [ 31.17285545688833, 2.078215732327294 ], [ 34.290141002577, 3.1172855456887874 ], [ 35.329286921542916, 3.1172855456887874 ], [ 37.4074265482659, 3.1172855456887874 ], [ 37.4074265482659, 4.156393411852491 ], [ 37.4074265482659, 4.156393411852491 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 37.4074265482659, 4.156393411852491 ] }, { \"id\": \"3KbZlb_HIa-0GavmEqwXC\", \"type\": \"freedraw\", \"x\": 568.9909002291279, \"y\": -42.41365820889223, \"width\": 46.759283185332606, \"height\": 49.87656873102128, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 548752771, \"version\": 165, \"versionNonce\": 1718291139, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661805031802, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ -1.0388414965491393, 0 ], [ -2.0781396267229866, 0 ], [ -3.1172855456886737, -1.0390698133614933 ], [ -5.195425172411888, -2.078139626723214 ], [ -6.234571091377575, -2.078139626723214 ], [ -8.312710718100789, -2.078139626723214 ], [ -9.351856637066476, -3.117285545688901 ], [ -11.42999626378969, -3.117285545688901 ], [ -13.507983679304516, -3.117285545688901 ], [ -15.58642772844405, -3.117285545688901 ], [ -17.664567355167264, -4.156355359050394 ], [ -19.74255477068209, -4.156355359050394 ], [ -20.781852900856165, -4.156355359050394 ], [ -22.859840316370992, -4.156355359050394 ], [ -23.89913844654484, -4.156355359050394 ], [ -24.938284365510526, -4.156355359050394 ], [ -27.01642399223374, -4.156355359050394 ], [ -28.055569911199427, -4.156355359050394 ], [ -29.094411407748566, -4.156355359050394 ], [ -30.13370953792264, -4.156355359050394 ], [ -31.17285545688833, -4.156355359050394 ], [ -32.21169695343747, -4.156355359050394 ], [ -33.25099508361154, -4.156355359050394 ], [ -34.29014100257723, -4.156355359050394 ], [ -35.32898249912637, -4.156355359050394 ], [ -36.368280629300216, -4.156355359050394 ], [ -37.4074265482659, -4.156355359050394 ], [ -37.4074265482659, -3.117285545688901 ], [ -37.4074265482659, -2.078139626723214 ], [ -37.4074265482659, -1.0390698133614933 ], [ -37.4074265482659, 0 ], [ -37.4074265482659, 1.039145918965687 ], [ -37.4074265482659, 2.0782157323271804 ], [ -37.4074265482659, 3.117285545688901 ], [ -37.4074265482659, 4.156431464654588 ], [ -37.4074265482659, 5.195501278016081 ], [ -36.368280629300216, 7.273717010343262 ], [ -36.368280629300216, 8.312786823704982 ], [ -35.32898249912637, 9.351856637066476 ], [ -34.29014100257723, 11.430072369393656 ], [ -32.21169695343747, 12.469142182755377 ], [ -32.21169695343747, 13.508288101721064 ], [ -30.13370953792264, 14.547357915082557 ], [ -29.094411407748566, 16.625573647409738 ], [ -27.01642399223374, 17.664643460771458 ], [ -25.977125862059665, 17.664643460771458 ], [ -24.938284365510526, 18.70371327413295 ], [ -23.89913844654484, 18.70371327413295 ], [ -22.859840316370992, 19.74285919309864 ], [ -21.820998819821853, 20.78192900646036 ], [ -20.781852900856165, 20.78192900646036 ], [ -18.70371327413295, 20.78192900646036 ], [ -17.664567355167264, 20.78192900646036 ], [ -16.62526922499319, 21.820998819821853 ], [ -14.547281809478363, 21.820998819821853 ], [ -13.507983679304516, 21.820998819821853 ], [ -12.469142182755377, 21.820998819821853 ], [ -11.42999626378969, 22.86014473878754 ], [ -10.390698133615615, 22.86014473878754 ], [ -9.351856637066476, 22.86014473878754 ], [ -8.312710718100789, 23.899214552149033 ], [ -8.312710718100789, 24.938284365510754 ], [ -7.273412587926714, 24.938284365510754 ], [ -6.234571091377575, 24.938284365510754 ], [ -6.234571091377575, 25.97743028447644 ], [ -5.195425172411888, 27.016500097837934 ], [ -4.156127042237813, 28.055569911199427 ], [ -4.156127042237813, 29.094715830165114 ], [ -3.1172855456886737, 29.094715830165114 ], [ -2.0781396267229866, 30.133785643526835 ], [ -2.0781396267229866, 31.17285545688833 ], [ -2.0781396267229866, 32.212001375854015 ], [ -2.0781396267229866, 33.25107118921551 ], [ -1.0388414965491393, 34.29014100257723 ], [ -1.0388414965491393, 35.329286921542916 ], [ -1.0388414965491393, 37.4074265482659 ], [ -1.0388414965491393, 38.44657246723182 ], [ -1.0388414965491393, 39.48564228059331 ], [ -1.0388414965491393, 40.524712093954804 ], [ -1.0388414965491393, 41.56385801292049 ], [ -2.0781396267229866, 42.60292782628221 ], [ -3.1172855456886737, 42.60292782628221 ], [ -4.156127042237813, 43.641997639643705 ], [ -5.195425172411888, 43.641997639643705 ], [ -7.273412587926714, 43.641997639643705 ], [ -8.312710718100789, 44.68114355860939 ], [ -10.390698133615615, 44.68114355860939 ], [ -12.469142182755377, 44.68114355860939 ], [ -13.507983679304516, 45.720213371970885 ], [ -15.58642772844405, 45.720213371970885 ], [ -17.664567355167264, 45.720213371970885 ], [ -19.74255477068209, 45.720213371970885 ], [ -21.820998819821853, 45.720213371970885 ], [ -23.89913844654484, 45.720213371970885 ], [ -25.977125862059665, 45.720213371970885 ], [ -28.055569911199427, 45.720213371970885 ], [ -29.094411407748566, 45.720213371970885 ], [ -31.17285545688833, 45.720213371970885 ], [ -33.25099508361154, 45.720213371970885 ], [ -34.29014100257723, 45.720213371970885 ], [ -35.32898249912637, 45.720213371970885 ], [ -37.4074265482659, 45.720213371970885 ], [ -38.44626804481504, 45.720213371970885 ], [ -39.48556617498912, 45.720213371970885 ], [ -39.48556617498912, 44.68114355860939 ], [ -40.524712093954804, 44.68114355860939 ], [ -41.56355359050394, 43.641997639643705 ], [ -41.56355359050394, 42.60292782628221 ], [ -42.60285172067802, 41.56385801292049 ], [ -42.60285172067802, 40.524712093954804 ], [ -42.60285172067802, 38.44657246723182 ], [ -42.60285172067802, 36.36835673490441 ], [ -42.60285172067802, 35.329286921542916 ], [ -42.60285172067802, 34.29014100257723 ], [ -42.60285172067802, 32.212001375854015 ], [ -42.60285172067802, 31.17285545688833 ], [ -42.60285172067802, 30.133785643526835 ], [ -41.56355359050394, 28.055569911199427 ], [ -40.524712093954804, 27.016500097837934 ], [ -39.48556617498912, 25.97743028447644 ], [ -38.44626804481504, 23.899214552149033 ], [ -36.368280629300216, 22.86014473878754 ], [ -35.32898249912637, 21.820998819821853 ], [ -34.29014100257723, 19.74285919309864 ], [ -32.21169695343747, 18.70371327413295 ], [ -31.17285545688833, 17.664643460771458 ], [ -30.13370953792264, 16.625573647409738 ], [ -28.055569911199427, 15.58642772844405 ], [ -25.977125862059665, 14.547357915082557 ], [ -24.938284365510526, 13.508288101721064 ], [ -22.859840316370992, 13.508288101721064 ], [ -20.781852900856165, 12.469142182755377 ], [ -18.70371327413295, 12.469142182755377 ], [ -17.664567355167264, 11.430072369393656 ], [ -14.547281809478363, 11.430072369393656 ], [ -12.469142182755377, 10.391002556032163 ], [ -10.390698133615615, 10.391002556032163 ], [ -8.312710718100789, 10.391002556032163 ], [ -5.195425172411888, 10.391002556032163 ], [ -4.156127042237813, 9.351856637066476 ], [ -2.0781396267229866, 9.351856637066476 ], [ 0, 9.351856637066476 ], [ 1.039145918965687, 9.351856637066476 ], [ 2.0784440491397618, 9.351856637066476 ], [ 2.0784440491397618, 8.312786823704982 ], [ 3.117285545688901, 8.312786823704982 ], [ 3.117285545688901, 6.234571091377575 ], [ 4.156431464654588, 6.234571091377575 ], [ 4.156431464654588, 5.195501278016081 ], [ 4.156431464654588, 4.156431464654588 ], [ 4.156431464654588, 3.117285545688901 ], [ 4.156431464654588, 2.0782157323271804 ], [ 3.117285545688901, 2.0782157323271804 ], [ 1.039145918965687, 1.039145918965687 ], [ 0, 1.039145918965687 ], [ -2.0781396267229866, 0 ], [ -4.156127042237813, 0 ], [ -5.195425172411888, 0 ], [ -5.195425172411888, -1.0390698133614933 ], [ -7.273412587926714, -2.078139626723214 ], [ -8.312710718100789, -3.117285545688901 ], [ 0, 0 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ -8.312710718100789, -3.117285545688901 ] }, { \"text\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\", \"fontSize\": 20, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 18, \"id\": \"S1vjqV1Q\", \"type\": \"text\", \"x\": -121.94045620728008, \"y\": -189.46569735563583, \"width\": 1272, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"strokeSharpness\": \"sharp\", \"seed\": 32175, \"version\": 7, \"versionNonce\": 1456684749, \"updated\": 1661805005763, \"isDeleted\": true, \"groupIds\": [], \"boundElements\": [], \"link\": null, \"locked\": false, \"containerId\": null, \"originalText\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\", \"rawText\": \"Locate a suitable location to save your project - ideally a USB drive or network drive, and save the project as *Hello_World*\" }, { \"id\": \"vYsrxL7U\", \"type\": \"text\", \"x\": -218.6050740812782, \"y\": -304.72596644269106, \"width\": 1477, \"height\": 25, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"sharp\", \"seed\": 1012609251, \"version\": 4, \"versionNonce\": 570931437, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"text\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\", \"rawText\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\", \"fontSize\": 20, \"fontFamily\": 1, \"textAlign\": \"center\", \"verticalAlign\": \"top\", \"baseline\": 18, \"containerId\": null, \"originalText\": \"You should see your project in a *Class View* tab. Clicking on Functions and Variables should give you the option to double click and open **main()**.\" }, { \"id\": \"PVYfBsJKO7cDcaAL6P72R\", \"type\": \"freedraw\", \"x\": 28.66120269478506, \"y\": -674.1834400119578, \"width\": 17.664643460771458, \"height\": 4.156393411852491, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 2046531171, \"version\": 24, \"versionNonce\": 1086660173, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805001043, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -1.0391078661637039 ], [ 1.039145918965687, -1.0391078661637039 ], [ 2.078215732327294, -1.0391078661637039 ], [ 3.1172855456887874, -1.0391078661637039 ], [ 4.156431464654474, -1.0391078661637039 ], [ 5.195501278016081, -1.0391078661637039 ], [ 6.234571091377688, -1.0391078661637039 ], [ 7.2737170103433755, -1.0391078661637039 ], [ 9.351856637066476, -1.0391078661637039 ], [ 10.391002556032163, -1.0391078661637039 ], [ 11.43007236939377, -1.0391078661637039 ], [ 12.469142182755263, -1.0391078661637039 ], [ 13.508288101721064, -1.0391078661637039 ], [ 13.508288101721064, -2.078215732327294 ], [ 14.547357915082557, -2.078215732327294 ], [ 15.586427728444164, -2.078215732327294 ], [ 16.62557364740985, -2.078215732327294 ], [ 16.62557364740985, -3.117285545688901 ], [ 17.664643460771458, -3.117285545688901 ], [ 17.664643460771458, -4.156393411852491 ], [ 17.664643460771458, -4.156393411852491 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 17.664643460771458, -4.156393411852491 ] }, { \"id\": \"aUc2JTpSv4pzL00UJcOSX\", \"type\": \"freedraw\", \"x\": -378.6640578714863, \"y\": -480.91177423205215, \"width\": 68.58028200515434, \"height\": 46.75928318533249, \"angle\": 0, \"strokeColor\": \"#2b8a3e\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1885108483, \"version\": 88, \"versionNonce\": 1123426733, \"isDeleted\": true, \"boundElements\": null, \"updated\": 1661805005764, \"link\": null, \"locked\": false, \"points\": [ [ 0, 0 ], [ 0, -1.0391078661637039 ], [ 1.0390698133614933, -1.0391078661637039 ], [ 2.0781396267231003, -1.0391078661637039 ], [ 2.0781396267231003, -2.078215732327294 ], [ 3.1172855456887874, -2.078215732327294 ], [ 3.1172855456887874, -3.117285545688901 ], [ 4.156355359050394, -3.117285545688901 ], [ 5.195425172411888, -4.156393411852491 ], [ 6.234571091377688, -4.156393411852491 ], [ 7.273640904739182, -5.195501278016195 ], [ 8.312710718100789, -5.195501278016195 ], [ 9.351856637066476, -6.234571091377688 ], [ 11.429996263789576, -6.234571091377688 ], [ 12.469142182755377, -7.273678957541392 ], [ 13.50821199611687, -7.273678957541392 ], [ 15.586427728444164, -7.273678957541392 ], [ 17.664567355167264, -8.312786823704982 ], [ 19.74278308749456, -8.312786823704982 ], [ 21.820998819821853, -8.312786823704982 ], [ 22.860068633183346, -8.312786823704982 ], [ 23.899138446544953, -8.312786823704982 ], [ 24.93828436551064, -8.312786823704982 ], [ 25.977354178872247, -8.312786823704982 ], [ 25.977354178872247, -7.273678957541392 ], [ 25.977354178872247, -6.234571091377688 ], [ 27.016423992233854, -5.195501278016195 ], [ 27.016423992233854, -4.156393411852491 ], [ 28.05556991119954, -2.078215732327294 ], [ 28.05556991119954, -1.0391078661637039 ], [ 28.05556991119954, 2.078177679525197 ], [ 29.094639724561034, 4.156355359050394 ], [ 29.094639724561034, 7.273640904739182 ], [ 29.094639724561034, 9.351856637066476 ], [ 29.094639724561034, 11.430034316591673 ], [ 28.05556991119954, 13.50821199611687 ], [ 27.016423992233854, 16.625497541805657 ], [ 24.93828436551064, 18.70371327413295 ], [ 22.860068633183346, 20.78185290085605 ], [ 19.74278308749456, 21.820998819821853 ], [ 16.62549754180577, 23.899138446544953 ], [ 13.50821199611687, 24.93828436551064 ], [ 9.351856637066476, 25.977354178872247 ], [ 5.195425172411888, 28.05556991119954 ], [ 1.0390698133614933, 30.13370953792264 ], [ -3.117285545688901, 32.211925270249935 ], [ -7.2737170103433755, 33.25099508361143 ], [ -10.391002556032277, 34.290141002577116 ], [ -12.469142182755377, 35.32921081593872 ], [ -15.586427728444164, 35.32921081593872 ], [ -17.664643460771458, 36.36828062930033 ], [ -19.742859193098752, 36.36828062930033 ], [ -20.78192900646036, 36.36828062930033 ], [ -21.820998819821853, 36.36828062930033 ], [ -20.78192900646036, 36.36828062930033 ], [ -19.742859193098752, 36.36828062930033 ], [ -17.664643460771458, 36.36828062930033 ], [ -14.54735791508267, 36.36828062930033 ], [ -12.469142182755377, 37.40742654826602 ], [ -9.351856637066476, 37.40742654826602 ], [ -4.156431464654588, 37.40742654826602 ], [ 0, 37.40742654826602 ], [ 4.156355359050394, 37.40742654826602 ], [ 9.351856637066476, 37.40742654826602 ], [ 13.50821199611687, 37.40742654826602 ], [ 17.664567355167264, 37.40742654826602 ], [ 19.74278308749456, 37.40742654826602 ], [ 22.860068633183346, 37.40742654826602 ], [ 23.899138446544953, 37.40742654826602 ], [ 24.93828436551064, 37.40742654826602 ], [ 25.977354178872247, 37.40742654826602 ], [ 27.016423992233854, 37.40742654826602 ], [ 29.094639724561034, 37.40742654826602 ], [ 32.211925270249935, 38.44649636162751 ], [ 34.29014100257723, 38.44649636162751 ], [ 36.36828062930033, 38.44649636162751 ], [ 37.40742654826602, 38.44649636162751 ], [ 39.48556617498912, 38.44649636162751 ], [ 40.524712093954804, 38.44649636162751 ], [ 41.56378190731641, 38.44649636162751 ], [ 42.60285172067802, 38.44649636162751 ], [ 43.641997639643705, 38.44649636162751 ], [ 44.6810674530052, 38.44649636162751 ], [ 45.720137266366805, 38.44649636162751 ], [ 46.75928318533249, 38.44649636162751 ], [ 46.75928318533249, 38.44649636162751 ] ], \"pressures\": [], \"simulatePressure\": true, \"lastCommittedPoint\": [ 46.75928318533249, 38.44649636162751 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#2b8a3e\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"center\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Drawing"},{"location":"COM326/Classes/Notes/Run%20Executable%20from%20Command%20Line.excalidraw/","tags":["excalidraw"],"text":"\u26a0 Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 Text Elements \u00b6 Embedded files \u00b6 b27107e49be25ac321789d098d68699d685d89e3: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830102328_512.png %% Drawing \u00b6 { \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"id\": \"vvDVlvD1J88Uce3M6Slcu\", \"type\": \"image\", \"x\": -761.8306274414062, \"y\": -282.3332862854004, \"width\": 288.3322852156424, \"height\": 340.49998474121094, \"angle\": 0, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1645678901, \"version\": 224, \"versionNonce\": 894878197, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661851420898, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"b27107e49be25ac321789d098d68699d685d89e3\", \"scale\": [ 1, 1 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#000000\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"left\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Run Executable from Command Line.excalidraw"},{"location":"COM326/Classes/Notes/Run%20Executable%20from%20Command%20Line.excalidraw/#text-elements","text":"","title":"Text Elements"},{"location":"COM326/Classes/Notes/Run%20Executable%20from%20Command%20Line.excalidraw/#embedded-files","text":"b27107e49be25ac321789d098d68699d685d89e3: 1_Teaching/COM326/Classes/Notes/attachments/Pasted Image 20220830102328_512.png %%","title":"Embedded files"},{"location":"COM326/Classes/Notes/Run%20Executable%20from%20Command%20Line.excalidraw/#drawing","text":"{ \"type\": \"excalidraw\", \"version\": 2, \"source\": \"https://excalidraw.com\", \"elements\": [ { \"id\": \"vvDVlvD1J88Uce3M6Slcu\", \"type\": \"image\", \"x\": -761.8306274414062, \"y\": -282.3332862854004, \"width\": 288.3322852156424, \"height\": 340.49998474121094, \"angle\": 0, \"strokeColor\": \"transparent\", \"backgroundColor\": \"transparent\", \"fillStyle\": \"hachure\", \"strokeWidth\": 1, \"strokeStyle\": \"solid\", \"roughness\": 1, \"opacity\": 100, \"groupIds\": [], \"strokeSharpness\": \"round\", \"seed\": 1645678901, \"version\": 224, \"versionNonce\": 894878197, \"isDeleted\": false, \"boundElements\": null, \"updated\": 1661851420898, \"link\": null, \"locked\": false, \"status\": \"pending\", \"fileId\": \"b27107e49be25ac321789d098d68699d685d89e3\", \"scale\": [ 1, 1 ] } ], \"appState\": { \"theme\": \"dark\", \"viewBackgroundColor\": \"#ffffff\", \"currentItemStrokeColor\": \"#000000\", \"currentItemBackgroundColor\": \"transparent\", \"currentItemFillStyle\": \"hachure\", \"currentItemStrokeWidth\": 1, \"currentItemStrokeStyle\": \"solid\", \"currentItemRoughness\": 1, \"currentItemOpacity\": 100, \"currentItemFontFamily\": 1, \"currentItemFontSize\": 20, \"currentItemTextAlign\": \"left\", \"currentItemStrokeSharpness\": \"sharp\", \"currentItemStartArrowhead\": null, \"currentItemEndArrowhead\": \"arrow\", \"currentItemLinearStrokeSharpness\": \"round\", \"gridSize\": null, \"colorPalette\": {} }, \"files\": {} } %%","title":"Drawing"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/","text":"Book code Code samples from Teach Yourself C++ In One Hour a Day, Ninth Edition by Siddhartha Rao Ascii codes for characters ASCII Chart - cppreference.com C++ Keywords - GeeksforGeeks Lesson 2: The Anatomy of a C++ Program \u00b6 Hello World A function example // Hello World #include <iostream> int main() { std::cout << \"Hello World\" << std::endl; return 0; } // Basic maths example #include <iostream> int main() { int x = 8; int y = 6; std::cout << std::endl; std::cout << x - y << \" \" << x * y << \" \" << x + y; std::cout << std::endl; return 0; } // Spot the bug #include <iostream> int main() { std::cout << \"Hello Buggy World \\n\"; return 0; } What does `#include` do? title: Answer collapse: closed This is a directive to the preprocessor that runs when you call your compiler. This specific directive causes the contents of the file named in <...> after `#include` to be inserted at that line as if it were typed at that location in your source code. collapse: open What is the problem with `#include`? title: Answer collapse: closed Inclusion of many files results in slow compilation times, especially in large projects. This problem has been mitigated in C++20 by the introduction of modules. collapse: open What is the difference between // comments and /* comments? title: Answer collapse: closed The double-slash comments (//) expire at the end of the line. Slash-star (/*) comments are in effect until a closing comment mark (*/) appears. The double-slash comments are also referred to as single-line comments, and the slash-star comments are often referred to as multiline comments. Remember, not even the end of the function terminates a slash-star comment. If you forget the closing comment mark (*/), you will have unintentionally commented away code that follows. collapse: open When do you need to program command-line arguments? title: Answer collapse: closed A You use command-line arguments to support options that may alter the execution of a program. For example, the command format in Windows helps format a drive, with a typical use being format c:. Here c: is the command-line argument sent to executable format.exe. Lesson 3 C++ Variables and Constants \u00b6 Built-in types (C++) | Microsoft Docs The size of a variable depends on its type, and C++ has a very convenient operator called sizeof() that tells you the size, in bytes, of a variable or a type. e.g. cout << \"Size of an int: \" << sizeof (int); // Using Variables to Store Numbers and the Result of Their Multiplication #include <iostream> using namespace std; int main () { cout << \"This program multiplies two numbers\" << endl; cout << \"Enter the first number: \"; int firstNumber = 0; cin >> firstNumber; cout << \"Enter the second number: \"; int secondNumber = 0; cin >> secondNumber; // Multiply two numbers, store result in a variable int multiplicationResult = firstNumber * secondNumber; // Display result cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; return 0; } // Understanding the scope of variables #include <iostream> using namespace std; void MultiplyNumbers () { cout << \"Enter the first number: \"; int firstNumber = 0; cin >> firstNumber; cout << \"Enter the second number: \"; int secondNumber = 0; cin >> secondNumber; // Multiply numbers, store multiplicationResult in a variable int multiplicationResult = firstNumber * secondNumber; // Display multiplicationResult cout << firstNumber << \" x \" << secondNumber << \" = \"; cout << multiplicationResult << endl; } int main () { cout << \"This program multiplies two numbers\" << endl; // Call the function that does all the work MultiplyNumbers(); // cout << firstNumber << \" x \" << secondNumber; // cout << \" = \" << multiplicationResult << endl; return 0; } // Global variables are accesible from all functions in a file #include <iostream> using namespace std; // Declare three global integers int firstNumber = 0; int secondNumber = 0; int multiplicationResult = 0; void MultiplyNumbers () { cout << \"Enter the first number: \"; cin >> firstNumber; cout << \"Enter the second number: \"; cin >> secondNumber; // Multiply two numbers, store result in a variable multiplicationResult = firstNumber * secondNumber; // Display multiplicationResult cout << \"Displaying from MultiplyNumbers(): \"; cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; } int main () { cout << \"This program multiplies two numbers\" << endl; // Call the function that does all the work MultiplyNumbers(); cout << \"Displaying from main(): \"; // This line will now compile and work! cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; return 0; } // The dangers of overflowing memory in C++ #include <iostream> using namespace std; int main() { unsigned short uShortValue = 65535; cout << \"unsigned short 65535 + 1 = \"; cout << ++uShortValue << endl; short signedShort = 32767; cout << \"signed short 32767 + 1 = \"; cout << ++signedShort << endl; return 0; } // The size of different types #include <iostream> int main() { using namespace std; cout << \"Computing the size of inbuilt variable types\" << endl; cout << \"sizeof bool: \" << sizeof(bool) << endl; cout << \"sizeof char: \" << sizeof(char) << endl; cout << \"sizeof unsigned short int: \" << sizeof(unsigned short) << endl; cout << \"sizeof short int: \" << sizeof(short) << endl; cout << \"sizeof unsigned long int: \" << sizeof(unsigned long) << endl; cout << \"sizeof long: \" << sizeof(long) << endl; cout << \"sizeof int: \" << sizeof(int) << endl; cout << \"sizeof uns. long long: \"<< sizeof(unsigned long long)<< endl; cout << \"sizeof long long: \" << sizeof(long long) << endl; cout << \"sizeof unsigned int: \" << sizeof(unsigned int) << endl; cout << \"sizeof float: \" << sizeof(float) << endl; cout << \"sizeof double: \" << sizeof(double) << endl; cout << \"The output changes with compiler, hardware and OS\" << endl; return 0; } auto (C++) | Microsoft Docs // Using auto for variables #include <iostream> using namespace std; int main() { auto coinFlippedHeads = true; auto largeNumber = 2500000000000; cout << \"coinFlippedHeads = \" << coinFlippedHeads << \", \"; cout << \"sizeof(coinFlippedHeads) = \" << sizeof(coinFlippedHeads); cout << endl << \"largeNumber = \" << largeNumber << \", \"; cout << \"sizeof(largeNumber) = \" << sizeof(largeNumber) << endl; return 0; } /* auto with vectors #include <vector> int main() { auto coinFlippedHeads = true; auto largeNumber = 2500000000000; cout << \"coinFlippedHeads = \" << coinFlippedHeads; cout << \" , sizeof(coinFlippedHeads) = \" << sizeof(coinFlippedHeads) << endl; cout << \"largeNumber = \" << largeNumber; cout << \" , sizeof(largeNumber) = \" << sizeof(largeNumber) << endl; vector<int> MylargeNumbers; MylargeNumbers.push_back(-45); MylargeNumbers.push_back(202); MylargeNumbers.push_back(0); MylargeNumbers.push_back(1000); cout << \"Using older C++ style, elements are: \" << endl; for( vector<int>::const_iterator Iterator = MylargeNumbers.begin(); Iterator < MylargeNumbers.end(); ++Iterator ) cout << *Iterator << \" \"; cout << endl; cout << \"Using auto to iterate, elements are: \" << endl; for( auto Iterator = MylargeNumbers.begin(); Iterator < MylargeNumbers.end(); ++Iterator ) cout << *Iterator << \" \"; cout << endl; return 0; } */ // constants #include <iostream> int main() { using namespace std; const double pi = 22.0 / 7; cout << \"The value of constant pi is: \" << pi << endl; // Uncomment next line to fail compilation // pi = 345; // error, assignment to a constant return 0; } // Using constexpr.cpp : Defines the entry point for the console application. #include <iostream> consteval double GetPi() { return 22.0 / 7; } constexpr double XPi(int x) { return x * GetPi(); } // #define pi 3.14286 Rao, Siddhartha. C++ in One Hour a Day, Sams Teach Yourself (p. 141). Pearson Education. Kindle Edition. int main() { using namespace std; constexpr double pi = GetPi(); // evaluated by compiler cout << \"constexpr pi evaluated by compiler to \" << pi << endl; cout << \"constexpr XPi(2) evaluated by compiler to \" << XPi(2) << endl; int multiple = 5; cout << \"(non-const) integer multiple = \" << multiple << endl; cout << \"constexpr is ignored when XPi(multiple) is invoked, \"; cout << \"returns \" << XPi(multiple) << endl; return 0; } // Using Enumerated Values to Indicate Cardinal Wind Directions #include <iostream> using namespace std; enum CardinalDirections { North = 25, South, East, West }; int main() { cout << \"Displaying directions and their symbolic values\" << endl; cout << \"North: \" << North << endl; cout << \"South: \" << South << endl; cout << \"East: \" << East << endl; cout << \"West: \" << West << endl; CardinalDirections windDirection = South; cout << \"Variable windDirection = \" << windDirection << endl; return 0; } collapse: open Why define constants at all if you can use regular variables instead? title: Answer collapse: closed Constants, especially those declared using the keyword const, give you a way of telling the compiler that the value of a particular variable should be fixed and should not be allowed to change. Consequently, the compiler always ensures that the constant variable is never assigned another value\u2014not even if another programmer picks up your work and inadvertently tries to overwrite the value. So, declaring constants where you know the value of a variable should not change is a good programming practice and increases the quality of your application. Why should I initialize the value of a variable? title: Answer collapse: closed If you don\u2019t initialize, you don\u2019t know what the variable contains for a starting value. The starting value is just the contents of the location in the memory that are reserved for the variable. For example, initialization like this: int myFavoriteNumber = 10; writes the initial value of your choosing\u2014in this case 10\u2014to the memory location reserved for the variable myFavoriteNumber as soon as it is created. Why does C++ give me the option of using short int and int and long int? Why not just always use the integer that can store the highest number? title: Answer collapse: closed C++ is a programming language that is used to program for a variety of applications, many running on devices with little computing capacity or memory resources. A programmer can often save memory or speed or both by choosing the right kind of variable where high values are not needed. If you are programming on a regular desktop or a high-end smart phone, chances are that the performance gained or memory saved in choosing one integer type over another is going to be insignificant; in some cases there may be no difference. Why should I avoid using global variables frequently? Isn\u2019t it true that they\u2019re usable throughout my application, and I can save some time otherwise lost to passing values around functions? title: Answer collapse: closed Global variables can be read and assigned globally. The latter is the problem as they can be changed globally. Say that you are working on a project with a few other programmers in a team. You have declared your integers and other variables to be global. If any programmer on your team changes the value of your integer inadvertently in code\u2014which even might be a different .cpp file than the one you are using\u2014the reliability of your code is affected. Therefore, you are advised to use global variables as infrequently as possible. unsigned short myShortInt = 0; // Initial Value myShortInt = myShortInt - 1; // Decrement by 1 std::cout << myShortInt << std::endl; // Output: 65535! Note that this is not a problem with short; it is only a problem with an unsigned short. An unsigned integral type is not to be used when negative values are within the specifications. 1. What is the difference between a signed integer and an unsigned integer? 2. Why should you not use #define to declare a constant? 3. Why would you initialize a variable? 4. Consider the enum below. What is the value of Queen? enum YourCards {Ace, Jack, Queen, King}; Exercises \u00b6 Modify enum YourCards in Quiz Question 4 to demonstrate that the value of Queen can be 45. Write a program that demonstrates that the size of an unsigned integer and a normal integer are the same and that both are smaller in size than a long integer. Write a program to calculate the area and circumference of a circle where the radius is supplied by the user. In Exercise 3, if the area and circumference were to be stored in integers, how would the output be any different? BUG BUSTERS: What is wrong in the following initialization? auto age; Lesson 4 Managing Arrays and Strings \u00b6 // Declaring and initialising an array #include <iostream> using namespace std; int main () { int myNumbers [5] = {34, 56, -21, 5002, 365}; cout << \"First element at index 0: \" << myNumbers [0] << endl; cout << \"Second element at index 1: \" << myNumbers [1] << endl; cout << \"Third element at index 2: \" << myNumbers [2] << endl; cout << \"Fourth element at index 3: \" << myNumbers [3] << endl; cout << \"Fifth element at index 4: \" << myNumbers [4] << endl; return 0; } // Writing to elements of an array #include <iostream> using namespace std; constexpr int Square(int number) { return number*number; } // needs C++ 20 int main() { const int ARRAY_LENGTH = 5; // Array of 5 integers, initialized to five values int myNumbers [ARRAY_LENGTH] = {5, 10, 0, -101, 20}; // Using a constexpr to create an array of 5*5=25 integers int moreNumbers[Square(ARRAY_LENGTH)]; cout << \"Enter index of the element to be changed: \"; int elementIndex = 0; cin >> elementIndex; cout << \"Enter new value: \"; int newValue = 0; cin >> newValue; myNumbers[elementIndex] = newValue; moreNumbers[elementIndex] = newValue; cout << \"Element \" << elementIndex << \" in array myNumbers is: \"; cout << myNumbers[elementIndex] << endl; cout << \"Element \" << elementIndex << \" in array moreNumbers is: \"; cout << moreNumbers[elementIndex] << endl; return 0; } int myNumbers[5] = {}; // initializes all integers to 0 int myNumbers[5] = {34, 56}; // initialize first two elements to 34 and 56 and the rest to 0 const int ARRAY_LENGTH = 5; // define array size as a const int myNumbers[ARRAY_LENGTH] = {34, 56, -21, 5002, 365}; int myNumbers[] = {2016, 2052, -525}; // array of 3 elements implied // Writing to arrays #include <iostream> using namespace std; constexpr int Square(int number) { return number*number; } int main() { const int ARRAY_LENGTH = 5; // Array of 5 integers, initialized to five values int myNumbers [ARRAY_LENGTH] = {5, 10, 0, -101, 20}; // Using a constexpr to create an array of 5*5=25 integers int moreNumbers[Square(ARRAY_LENGTH)]; cout << \"Enter index of the element to be changed: \"; int elementIndex = 0; cin >> elementIndex; cout << \"Enter new value: \"; int newValue = 0; cin >> newValue; myNumbers[elementIndex] = newValue; moreNumbers[elementIndex] = newValue; cout << \"Element \" << elementIndex << \" in array myNumbers is: \"; cout << myNumbers[elementIndex] << endl; cout << \"Element \" << elementIndex << \" in array moreNumbers is: \"; cout << moreNumbers[elementIndex] << endl; return 0; } // Multidimensional arrays #include <iostream> using namespace std; int main() { int threeRowsThreeColumns [3][3] = {% raw %}{{-501, 205, 2011}, {989, 101, 206}, {303, 456, 596}}{% endraw %}; cout << \"Row 0: \" << threeRowsThreeColumns [0][0] << \" \" << threeRowsThreeColumns [0][1] << \" \" << threeRowsThreeColumns [0][2] << endl; cout << \"Row 1: \" << threeRowsThreeColumns [1][0] << \" \" << threeRowsThreeColumns [1][1] << \" \" << threeRowsThreeColumns [1][2] << endl; cout << \"Row 2: \" << threeRowsThreeColumns [2][0] << \" \" << threeRowsThreeColumns [2][1] << \" \" << threeRowsThreeColumns [2][2] << endl; return 0; } // Dynamic arrays #include <iostream> #include <vector> using namespace std; int main() { vector<int> dynArray (3); // note angle brackets (size) dynArray[0] = 365; dynArray[1] = -421; dynArray[2]= 789; cout << \"Number of integers in array: \" << dynArray.size() << endl; cout << \"Enter another element to insert\" << endl; int newValue = 0; cin >> newValue; dynArray.push_back(newValue); cout << \"Number of integers in array: \" << dynArray.size() << endl; cout << \"Last element in array: \"; cout << dynArray[dynArray.size() - 1] << endl; return 0; } // C style Hello World #include <iostream> using namespace std; int main() { char sayHello[] = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '\\0'}; cout << sayHello << endl; cout << \"Size of array: \" << sizeof(sayHello) << endl; cout << \"Replacing space with null\" << endl; sayHello[5] = '\\0'; cout << sayHello << endl; cout << \"Size of array: \" << sizeof(sayHello) << endl; cout << sayHello + 6 << endl; // \"World\" return 0; } ```C++ strings include \u00b6 include \u00b6 using namespace std; int main() { string greetStrings (\"Hello std::string!\"); cout << greetStrings << endl; cout << \"Enter a line of text: \" << endl; string firstLine; getline(cin, firstLine); cout << \"Enter another: \" << endl; string secondLine; getline(cin, secondLine); cout << \"Result of concatenation: \" << endl; string concatString = firstLine + \" \" + secondLine; cout << concatString << endl; cout << \"Copy of concatenated string: \" << endl; string aCopy; aCopy = concatString; cout << aCopy << endl; cout << \"Length of concat string: \" << concatString.length() << endl; return 0; } ```ad-todo Declare an array that represents the squares on the chessboard; the array should be an enum that defines the pieces that may possibly occupy the squares. The enum will contain enumerators (Pawn, Rook, Bishop, and so on), thereby limiting the range of possible values that the elements in the array can hold. Don\u2019t forget that a cell may also be empty! BUG BUSTERS: What is wrong with this code fragment? int myNumbers[5]; myNumbers[5] = 450; // Setting the 5th element to value 450 // chess solution int main() { enum SQUARE { NOTHING = 0, PAWN, ROOK, KNIGHT, BISHOP, KING, QUEEN }; SQUARE ChessBoard[8][8]; // 8 rows x 8 columns // Initialize the squares containing rooks ChessBoard[0][0] = ChessBoard[0][7] = ROOK; ChessBoard[7][0] = ChessBoard[7][7] = ROOK; return 0; } Lesson 5 \u00b6","title":"C++ One hour a day"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#lesson-2-the-anatomy-of-a-c-program","text":"Hello World A function example // Hello World #include <iostream> int main() { std::cout << \"Hello World\" << std::endl; return 0; } // Basic maths example #include <iostream> int main() { int x = 8; int y = 6; std::cout << std::endl; std::cout << x - y << \" \" << x * y << \" \" << x + y; std::cout << std::endl; return 0; } // Spot the bug #include <iostream> int main() { std::cout << \"Hello Buggy World \\n\"; return 0; } What does `#include` do? title: Answer collapse: closed This is a directive to the preprocessor that runs when you call your compiler. This specific directive causes the contents of the file named in <...> after `#include` to be inserted at that line as if it were typed at that location in your source code. collapse: open What is the problem with `#include`? title: Answer collapse: closed Inclusion of many files results in slow compilation times, especially in large projects. This problem has been mitigated in C++20 by the introduction of modules. collapse: open What is the difference between // comments and /* comments? title: Answer collapse: closed The double-slash comments (//) expire at the end of the line. Slash-star (/*) comments are in effect until a closing comment mark (*/) appears. The double-slash comments are also referred to as single-line comments, and the slash-star comments are often referred to as multiline comments. Remember, not even the end of the function terminates a slash-star comment. If you forget the closing comment mark (*/), you will have unintentionally commented away code that follows. collapse: open When do you need to program command-line arguments? title: Answer collapse: closed A You use command-line arguments to support options that may alter the execution of a program. For example, the command format in Windows helps format a drive, with a typical use being format c:. Here c: is the command-line argument sent to executable format.exe.","title":"Lesson 2: The Anatomy of a C++ Program"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#lesson-3-c-variables-and-constants","text":"Built-in types (C++) | Microsoft Docs The size of a variable depends on its type, and C++ has a very convenient operator called sizeof() that tells you the size, in bytes, of a variable or a type. e.g. cout << \"Size of an int: \" << sizeof (int); // Using Variables to Store Numbers and the Result of Their Multiplication #include <iostream> using namespace std; int main () { cout << \"This program multiplies two numbers\" << endl; cout << \"Enter the first number: \"; int firstNumber = 0; cin >> firstNumber; cout << \"Enter the second number: \"; int secondNumber = 0; cin >> secondNumber; // Multiply two numbers, store result in a variable int multiplicationResult = firstNumber * secondNumber; // Display result cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; return 0; } // Understanding the scope of variables #include <iostream> using namespace std; void MultiplyNumbers () { cout << \"Enter the first number: \"; int firstNumber = 0; cin >> firstNumber; cout << \"Enter the second number: \"; int secondNumber = 0; cin >> secondNumber; // Multiply numbers, store multiplicationResult in a variable int multiplicationResult = firstNumber * secondNumber; // Display multiplicationResult cout << firstNumber << \" x \" << secondNumber << \" = \"; cout << multiplicationResult << endl; } int main () { cout << \"This program multiplies two numbers\" << endl; // Call the function that does all the work MultiplyNumbers(); // cout << firstNumber << \" x \" << secondNumber; // cout << \" = \" << multiplicationResult << endl; return 0; } // Global variables are accesible from all functions in a file #include <iostream> using namespace std; // Declare three global integers int firstNumber = 0; int secondNumber = 0; int multiplicationResult = 0; void MultiplyNumbers () { cout << \"Enter the first number: \"; cin >> firstNumber; cout << \"Enter the second number: \"; cin >> secondNumber; // Multiply two numbers, store result in a variable multiplicationResult = firstNumber * secondNumber; // Display multiplicationResult cout << \"Displaying from MultiplyNumbers(): \"; cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; } int main () { cout << \"This program multiplies two numbers\" << endl; // Call the function that does all the work MultiplyNumbers(); cout << \"Displaying from main(): \"; // This line will now compile and work! cout << firstNumber << \" x \" << secondNumber; cout << \" = \" << multiplicationResult << endl; return 0; } // The dangers of overflowing memory in C++ #include <iostream> using namespace std; int main() { unsigned short uShortValue = 65535; cout << \"unsigned short 65535 + 1 = \"; cout << ++uShortValue << endl; short signedShort = 32767; cout << \"signed short 32767 + 1 = \"; cout << ++signedShort << endl; return 0; } // The size of different types #include <iostream> int main() { using namespace std; cout << \"Computing the size of inbuilt variable types\" << endl; cout << \"sizeof bool: \" << sizeof(bool) << endl; cout << \"sizeof char: \" << sizeof(char) << endl; cout << \"sizeof unsigned short int: \" << sizeof(unsigned short) << endl; cout << \"sizeof short int: \" << sizeof(short) << endl; cout << \"sizeof unsigned long int: \" << sizeof(unsigned long) << endl; cout << \"sizeof long: \" << sizeof(long) << endl; cout << \"sizeof int: \" << sizeof(int) << endl; cout << \"sizeof uns. long long: \"<< sizeof(unsigned long long)<< endl; cout << \"sizeof long long: \" << sizeof(long long) << endl; cout << \"sizeof unsigned int: \" << sizeof(unsigned int) << endl; cout << \"sizeof float: \" << sizeof(float) << endl; cout << \"sizeof double: \" << sizeof(double) << endl; cout << \"The output changes with compiler, hardware and OS\" << endl; return 0; } auto (C++) | Microsoft Docs // Using auto for variables #include <iostream> using namespace std; int main() { auto coinFlippedHeads = true; auto largeNumber = 2500000000000; cout << \"coinFlippedHeads = \" << coinFlippedHeads << \", \"; cout << \"sizeof(coinFlippedHeads) = \" << sizeof(coinFlippedHeads); cout << endl << \"largeNumber = \" << largeNumber << \", \"; cout << \"sizeof(largeNumber) = \" << sizeof(largeNumber) << endl; return 0; } /* auto with vectors #include <vector> int main() { auto coinFlippedHeads = true; auto largeNumber = 2500000000000; cout << \"coinFlippedHeads = \" << coinFlippedHeads; cout << \" , sizeof(coinFlippedHeads) = \" << sizeof(coinFlippedHeads) << endl; cout << \"largeNumber = \" << largeNumber; cout << \" , sizeof(largeNumber) = \" << sizeof(largeNumber) << endl; vector<int> MylargeNumbers; MylargeNumbers.push_back(-45); MylargeNumbers.push_back(202); MylargeNumbers.push_back(0); MylargeNumbers.push_back(1000); cout << \"Using older C++ style, elements are: \" << endl; for( vector<int>::const_iterator Iterator = MylargeNumbers.begin(); Iterator < MylargeNumbers.end(); ++Iterator ) cout << *Iterator << \" \"; cout << endl; cout << \"Using auto to iterate, elements are: \" << endl; for( auto Iterator = MylargeNumbers.begin(); Iterator < MylargeNumbers.end(); ++Iterator ) cout << *Iterator << \" \"; cout << endl; return 0; } */ // constants #include <iostream> int main() { using namespace std; const double pi = 22.0 / 7; cout << \"The value of constant pi is: \" << pi << endl; // Uncomment next line to fail compilation // pi = 345; // error, assignment to a constant return 0; } // Using constexpr.cpp : Defines the entry point for the console application. #include <iostream> consteval double GetPi() { return 22.0 / 7; } constexpr double XPi(int x) { return x * GetPi(); } // #define pi 3.14286 Rao, Siddhartha. C++ in One Hour a Day, Sams Teach Yourself (p. 141). Pearson Education. Kindle Edition. int main() { using namespace std; constexpr double pi = GetPi(); // evaluated by compiler cout << \"constexpr pi evaluated by compiler to \" << pi << endl; cout << \"constexpr XPi(2) evaluated by compiler to \" << XPi(2) << endl; int multiple = 5; cout << \"(non-const) integer multiple = \" << multiple << endl; cout << \"constexpr is ignored when XPi(multiple) is invoked, \"; cout << \"returns \" << XPi(multiple) << endl; return 0; } // Using Enumerated Values to Indicate Cardinal Wind Directions #include <iostream> using namespace std; enum CardinalDirections { North = 25, South, East, West }; int main() { cout << \"Displaying directions and their symbolic values\" << endl; cout << \"North: \" << North << endl; cout << \"South: \" << South << endl; cout << \"East: \" << East << endl; cout << \"West: \" << West << endl; CardinalDirections windDirection = South; cout << \"Variable windDirection = \" << windDirection << endl; return 0; } collapse: open Why define constants at all if you can use regular variables instead? title: Answer collapse: closed Constants, especially those declared using the keyword const, give you a way of telling the compiler that the value of a particular variable should be fixed and should not be allowed to change. Consequently, the compiler always ensures that the constant variable is never assigned another value\u2014not even if another programmer picks up your work and inadvertently tries to overwrite the value. So, declaring constants where you know the value of a variable should not change is a good programming practice and increases the quality of your application. Why should I initialize the value of a variable? title: Answer collapse: closed If you don\u2019t initialize, you don\u2019t know what the variable contains for a starting value. The starting value is just the contents of the location in the memory that are reserved for the variable. For example, initialization like this: int myFavoriteNumber = 10; writes the initial value of your choosing\u2014in this case 10\u2014to the memory location reserved for the variable myFavoriteNumber as soon as it is created. Why does C++ give me the option of using short int and int and long int? Why not just always use the integer that can store the highest number? title: Answer collapse: closed C++ is a programming language that is used to program for a variety of applications, many running on devices with little computing capacity or memory resources. A programmer can often save memory or speed or both by choosing the right kind of variable where high values are not needed. If you are programming on a regular desktop or a high-end smart phone, chances are that the performance gained or memory saved in choosing one integer type over another is going to be insignificant; in some cases there may be no difference. Why should I avoid using global variables frequently? Isn\u2019t it true that they\u2019re usable throughout my application, and I can save some time otherwise lost to passing values around functions? title: Answer collapse: closed Global variables can be read and assigned globally. The latter is the problem as they can be changed globally. Say that you are working on a project with a few other programmers in a team. You have declared your integers and other variables to be global. If any programmer on your team changes the value of your integer inadvertently in code\u2014which even might be a different .cpp file than the one you are using\u2014the reliability of your code is affected. Therefore, you are advised to use global variables as infrequently as possible. unsigned short myShortInt = 0; // Initial Value myShortInt = myShortInt - 1; // Decrement by 1 std::cout << myShortInt << std::endl; // Output: 65535! Note that this is not a problem with short; it is only a problem with an unsigned short. An unsigned integral type is not to be used when negative values are within the specifications. 1. What is the difference between a signed integer and an unsigned integer? 2. Why should you not use #define to declare a constant? 3. Why would you initialize a variable? 4. Consider the enum below. What is the value of Queen? enum YourCards {Ace, Jack, Queen, King};","title":"Lesson 3 C++ Variables and Constants"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#exercises","text":"Modify enum YourCards in Quiz Question 4 to demonstrate that the value of Queen can be 45. Write a program that demonstrates that the size of an unsigned integer and a normal integer are the same and that both are smaller in size than a long integer. Write a program to calculate the area and circumference of a circle where the radius is supplied by the user. In Exercise 3, if the area and circumference were to be stored in integers, how would the output be any different? BUG BUSTERS: What is wrong in the following initialization? auto age;","title":"Exercises"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#lesson-4-managing-arrays-and-strings","text":"// Declaring and initialising an array #include <iostream> using namespace std; int main () { int myNumbers [5] = {34, 56, -21, 5002, 365}; cout << \"First element at index 0: \" << myNumbers [0] << endl; cout << \"Second element at index 1: \" << myNumbers [1] << endl; cout << \"Third element at index 2: \" << myNumbers [2] << endl; cout << \"Fourth element at index 3: \" << myNumbers [3] << endl; cout << \"Fifth element at index 4: \" << myNumbers [4] << endl; return 0; } // Writing to elements of an array #include <iostream> using namespace std; constexpr int Square(int number) { return number*number; } // needs C++ 20 int main() { const int ARRAY_LENGTH = 5; // Array of 5 integers, initialized to five values int myNumbers [ARRAY_LENGTH] = {5, 10, 0, -101, 20}; // Using a constexpr to create an array of 5*5=25 integers int moreNumbers[Square(ARRAY_LENGTH)]; cout << \"Enter index of the element to be changed: \"; int elementIndex = 0; cin >> elementIndex; cout << \"Enter new value: \"; int newValue = 0; cin >> newValue; myNumbers[elementIndex] = newValue; moreNumbers[elementIndex] = newValue; cout << \"Element \" << elementIndex << \" in array myNumbers is: \"; cout << myNumbers[elementIndex] << endl; cout << \"Element \" << elementIndex << \" in array moreNumbers is: \"; cout << moreNumbers[elementIndex] << endl; return 0; } int myNumbers[5] = {}; // initializes all integers to 0 int myNumbers[5] = {34, 56}; // initialize first two elements to 34 and 56 and the rest to 0 const int ARRAY_LENGTH = 5; // define array size as a const int myNumbers[ARRAY_LENGTH] = {34, 56, -21, 5002, 365}; int myNumbers[] = {2016, 2052, -525}; // array of 3 elements implied // Writing to arrays #include <iostream> using namespace std; constexpr int Square(int number) { return number*number; } int main() { const int ARRAY_LENGTH = 5; // Array of 5 integers, initialized to five values int myNumbers [ARRAY_LENGTH] = {5, 10, 0, -101, 20}; // Using a constexpr to create an array of 5*5=25 integers int moreNumbers[Square(ARRAY_LENGTH)]; cout << \"Enter index of the element to be changed: \"; int elementIndex = 0; cin >> elementIndex; cout << \"Enter new value: \"; int newValue = 0; cin >> newValue; myNumbers[elementIndex] = newValue; moreNumbers[elementIndex] = newValue; cout << \"Element \" << elementIndex << \" in array myNumbers is: \"; cout << myNumbers[elementIndex] << endl; cout << \"Element \" << elementIndex << \" in array moreNumbers is: \"; cout << moreNumbers[elementIndex] << endl; return 0; } // Multidimensional arrays #include <iostream> using namespace std; int main() { int threeRowsThreeColumns [3][3] = {% raw %}{{-501, 205, 2011}, {989, 101, 206}, {303, 456, 596}}{% endraw %}; cout << \"Row 0: \" << threeRowsThreeColumns [0][0] << \" \" << threeRowsThreeColumns [0][1] << \" \" << threeRowsThreeColumns [0][2] << endl; cout << \"Row 1: \" << threeRowsThreeColumns [1][0] << \" \" << threeRowsThreeColumns [1][1] << \" \" << threeRowsThreeColumns [1][2] << endl; cout << \"Row 2: \" << threeRowsThreeColumns [2][0] << \" \" << threeRowsThreeColumns [2][1] << \" \" << threeRowsThreeColumns [2][2] << endl; return 0; } // Dynamic arrays #include <iostream> #include <vector> using namespace std; int main() { vector<int> dynArray (3); // note angle brackets (size) dynArray[0] = 365; dynArray[1] = -421; dynArray[2]= 789; cout << \"Number of integers in array: \" << dynArray.size() << endl; cout << \"Enter another element to insert\" << endl; int newValue = 0; cin >> newValue; dynArray.push_back(newValue); cout << \"Number of integers in array: \" << dynArray.size() << endl; cout << \"Last element in array: \"; cout << dynArray[dynArray.size() - 1] << endl; return 0; } // C style Hello World #include <iostream> using namespace std; int main() { char sayHello[] = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '\\0'}; cout << sayHello << endl; cout << \"Size of array: \" << sizeof(sayHello) << endl; cout << \"Replacing space with null\" << endl; sayHello[5] = '\\0'; cout << sayHello << endl; cout << \"Size of array: \" << sizeof(sayHello) << endl; cout << sayHello + 6 << endl; // \"World\" return 0; } ```C++ strings","title":"Lesson 4 Managing Arrays and Strings"},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#include","text":"","title":"include "},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#include_1","text":"using namespace std; int main() { string greetStrings (\"Hello std::string!\"); cout << greetStrings << endl; cout << \"Enter a line of text: \" << endl; string firstLine; getline(cin, firstLine); cout << \"Enter another: \" << endl; string secondLine; getline(cin, secondLine); cout << \"Result of concatenation: \" << endl; string concatString = firstLine + \" \" + secondLine; cout << concatString << endl; cout << \"Copy of concatenated string: \" << endl; string aCopy; aCopy = concatString; cout << aCopy << endl; cout << \"Length of concat string: \" << concatString.length() << endl; return 0; } ```ad-todo Declare an array that represents the squares on the chessboard; the array should be an enum that defines the pieces that may possibly occupy the squares. The enum will contain enumerators (Pawn, Rook, Bishop, and so on), thereby limiting the range of possible values that the elements in the array can hold. Don\u2019t forget that a cell may also be empty! BUG BUSTERS: What is wrong with this code fragment? int myNumbers[5]; myNumbers[5] = 450; // Setting the 5th element to value 450 // chess solution int main() { enum SQUARE { NOTHING = 0, PAWN, ROOK, KNIGHT, BISHOP, KING, QUEEN }; SQUARE ChessBoard[8][8]; // 8 rows x 8 columns // Initialize the squares containing rooks ChessBoard[0][0] = ChessBoard[0][7] = ROOK; ChessBoard[7][0] = ChessBoard[7][7] = ROOK; return 0; }","title":"include "},{"location":"COM326/Prep/C%2B%2B%20One%20hour%20a%20day/#lesson-5","text":"","title":"Lesson 5"},{"location":"EEE205/EEE205%20README/","text":"EEE205 - Introduction to Artificial Intelligence \u00b6 As the title suggests this module provides an introduction to AI, looking at the history of AI, and exciting state-of-the-art developments. In practical classes we will focus on learning the essentials of Python and use this to code Data Science and AI examples. The class structure each week is: A lecture covering theoretical material A seminar linked to the practical work that we will be doing that week A practical class focused on coding with Python Class files presented are provided to support lecture, seminar, and practical classes within classes onsite in the university. These can be accessed via my GitHub Pages site EEE205 Artificial Intelligence I (dkcharles.github.io) Ideally you will install Obsidian , create your own local Obsidian Vault by cloning my files off Github , and take your own notes within the within this Vault. This allows you to add to my notes, and link to your own notes. You should take your own notes!! Getting started with Obsidian . Nicole van der Hoeven - YouTube Zsolt's Visual Personal Knowledge Management - YouTube Obsidian built, GitHub Pages presented, EEE205 Class Files.","title":"EEE205 README"},{"location":"EEE205/EEE205%20README/#eee205-introduction-to-artificial-intelligence","text":"As the title suggests this module provides an introduction to AI, looking at the history of AI, and exciting state-of-the-art developments. In practical classes we will focus on learning the essentials of Python and use this to code Data Science and AI examples. The class structure each week is: A lecture covering theoretical material A seminar linked to the practical work that we will be doing that week A practical class focused on coding with Python Class files presented are provided to support lecture, seminar, and practical classes within classes onsite in the university. These can be accessed via my GitHub Pages site EEE205 Artificial Intelligence I (dkcharles.github.io) Ideally you will install Obsidian , create your own local Obsidian Vault by cloning my files off Github , and take your own notes within the within this Vault. This allows you to add to my notes, and link to your own notes. You should take your own notes!! Getting started with Obsidian . Nicole van der Hoeven - YouTube Zsolt's Visual Personal Knowledge Management - YouTube Obsidian built, GitHub Pages presented, EEE205 Class Files.","title":"EEE205 - Introduction to Artificial Intelligence"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/","text":"Introduction to AI \u00b6 EEE205 Lecture 1 Dr Darryl Charles \u00b6 Preparation \u00b6 Read notes on 1. AI Glossary 2. AI Timeline Overview \u00b6 Introduction Module Overview Learning Materials Origins of AI AI in Fiction AI and Societal Issues AI Progress End Notes Module Goals \u00b6 [!aim] To learn about the history of AI, core AI algorithms and principles, and develop an awareness of important recent commercial and research developments. [!example] Objectives 1. Attain knowledge of the history of AI and about state of the art developments. 2. Build skill in programming Python. 3. Be able to implement fundamental data science, statistical, and machine learning code. Module Structure \u00b6 Lectures: Friday 9:30 am to 11:15 am - Starts with a 45 minute theory lecture - A short break - Then a 45 minute practical lecture Practical Class: Friday 12:15 pm to 3:15 pm - Predominantly using Replit to learn the basics of Python, Data Science, and Machine Learning Assessment \u00b6 [!important] 100% Coursework Technical report/paper on an AI topic (50%) - due around week 6 Assignment based on your practical tasks in the Labs (50%) - due around week 12 [!example] Example research topics Thinking Machines: The influence of science fiction on AI design and development. Life 3.0: The challenge of creating artificial general intelligence (AGI). How nature inspires the design of AI and Machine Learning algorithms. AI human-like entities: Can artificial entities be conscious or self-aware? AI Superpowers: How AI is being used by governments and large corporations. Learning Materials \u00b6 My notes and learning material on my Obsidian vault. You may consider cloning my Obsidian vault and add your own notes to your personal version. Books: Tiny Python 3.6 Notebook, or an Illustrated Guide to Python 3. Videos: Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube Python (intermediate): (Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube Python (Algorithms & Data Structures) Introduction - Algorithms & Data Structures #1 - YouTube Python Machine Learning: Python Machine Learning Tutorial - YouTube Python (Advanced) Magic Methods & Dunder - Advanced Python Tutorial #1 - YouTube Origins of AI \u00b6 [!question] Why are we interested in AI - We have long been fascinated by our origins, and how we exist! - Naturally, there is a curiosity about whether we can create our own intelligent entities. - AIs beating humans at Chess, Go and other games has demonstrated the power of AI - but in a weak AI manner. Origins of AI \u00b6 [!question] Can we replicate our intelligence? - The origin of AI is deep-rooted historically in Philosophy, Mathematics, Computing, and Engineering. E.g. Formal reasoning goes back to the first millennium BCE. - This involved philosophers such as Aristotle developing structured methods for formal deduction, which led to the notion of algorithms. Artificial Beings \u00b6 Automatons \u00b6 Ref: https://mymodernmet.com/jaquet-droz-automata/ AI in Movies, Games and Books \u00b6 Hal in 2001 - A Space Odyssey \u00b6 Is AI a Danger to Humans? \u00b6 [!danger] Asimov\u2019s Robot Laws 1. A robot may not injure a human being or, through inaction, allow a human being to come to harm. 2. A robot must obey the orders given it by human beings except where such orders would conflict with the First Law. 3. A robot must protect its own existence as long as such protection does not conflict with the First or Second Laws. Ethics and Morals \u00b6 Ethics is the discipline dealing with what is good and bad and with moral duty and obligation. Ethics is a system of moral principles. Morals are the prevailing standards of behaviour that enable people to live cooperatively in groups. Morality refers to what societies sanction as right and acceptable. [!question] Can AI or robots be truly intelligence \u2013 i.e. have general human intelligence? Can robots have a faith in God. If there is a God, could they have a soul? Should robots have the same right as humans? Should there be laws that define the limits of our interactions with AI/Robots? Should AI/Robots have built in restrictions by international law? Do we need to have an international agreement to limit AI/Robots in war/battle? In More Technical Terms - What is AI? \u00b6 AI Development in Modern Times \u00b6 Ref: History of AI Winters Further Questions Relating to AI Research and Development \u00b6 Will AI take people\u2019s jobs? Will new jobs and careers emerge? What are the ethics surrounding future AI and Robotics? Limiting the creation and use of weapons? Asimov\u2019s laws? Can robots be sentient? If a self-driving car injuries someone, who is responsible? Should AI and robots have rights? Or should their intelligence be limited to prevent self-awareness? How can we safe-guard against \u201caccidental\u201d evolution of superintelligence? AI and robots developing their own agenda Are these worries just nonsense? Wrap-up \u00b6 [!summary] - As intelligent humans we have always been curious about why we exist - We wonder about how we are conscious and what will happen our consciousness when we die - We are fascinated by the challenge of replicating ourselves or part of ourselves - AI has progressed massively in the past 10 years - The next challenges are to try to create Artificial General Intelligence and better autonomous robots Further Study \u00b6 Paths to superintelligence, Bostrom, Nick. Superintelligence. OUP Oxford. Life 3.0. Tegmark, Max, Penguin Books Ltd. Thinking Machines, Dormehl, Luke. Ebury Publishing. AI 2041, Lee, Kai-Fu; Qiufan, Chen. Ebury Publishing. Building a Second Brain, Forte, Tiago. Building a Second Brain. Next Lecture L2 - Applications of AI AI #ml #EEE205 #python #console, #input, #debug, #variable, #function #replit \u00b6","title":"L1   Introduction to AI"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#introduction-to-ai","text":"EEE205 Lecture 1","title":"Introduction to AI"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#dr-darryl-charles","text":"","title":"Dr Darryl Charles"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#preparation","text":"Read notes on 1. AI Glossary 2. AI Timeline","title":"Preparation"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#overview","text":"Introduction Module Overview Learning Materials Origins of AI AI in Fiction AI and Societal Issues AI Progress End Notes","title":"Overview"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#module-goals","text":"[!aim] To learn about the history of AI, core AI algorithms and principles, and develop an awareness of important recent commercial and research developments. [!example] Objectives 1. Attain knowledge of the history of AI and about state of the art developments. 2. Build skill in programming Python. 3. Be able to implement fundamental data science, statistical, and machine learning code.","title":"Module Goals"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#module-structure","text":"Lectures: Friday 9:30 am to 11:15 am - Starts with a 45 minute theory lecture - A short break - Then a 45 minute practical lecture Practical Class: Friday 12:15 pm to 3:15 pm - Predominantly using Replit to learn the basics of Python, Data Science, and Machine Learning","title":"Module Structure"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#assessment","text":"[!important] 100% Coursework Technical report/paper on an AI topic (50%) - due around week 6 Assignment based on your practical tasks in the Labs (50%) - due around week 12 [!example] Example research topics Thinking Machines: The influence of science fiction on AI design and development. Life 3.0: The challenge of creating artificial general intelligence (AGI). How nature inspires the design of AI and Machine Learning algorithms. AI human-like entities: Can artificial entities be conscious or self-aware? AI Superpowers: How AI is being used by governments and large corporations.","title":"Assessment"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#learning-materials","text":"My notes and learning material on my Obsidian vault. You may consider cloning my Obsidian vault and add your own notes to your personal version. Books: Tiny Python 3.6 Notebook, or an Illustrated Guide to Python 3. Videos: Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube Python (intermediate): (Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube Python (Algorithms & Data Structures) Introduction - Algorithms & Data Structures #1 - YouTube Python Machine Learning: Python Machine Learning Tutorial - YouTube Python (Advanced) Magic Methods & Dunder - Advanced Python Tutorial #1 - YouTube","title":"Learning Materials"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#origins-of-ai","text":"[!question] Why are we interested in AI - We have long been fascinated by our origins, and how we exist! - Naturally, there is a curiosity about whether we can create our own intelligent entities. - AIs beating humans at Chess, Go and other games has demonstrated the power of AI - but in a weak AI manner.","title":"Origins of AI"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#origins-of-ai_1","text":"[!question] Can we replicate our intelligence? - The origin of AI is deep-rooted historically in Philosophy, Mathematics, Computing, and Engineering. E.g. Formal reasoning goes back to the first millennium BCE. - This involved philosophers such as Aristotle developing structured methods for formal deduction, which led to the notion of algorithms.","title":"Origins of AI"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#artificial-beings","text":"","title":"Artificial Beings"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#automatons","text":"Ref: https://mymodernmet.com/jaquet-droz-automata/","title":"Automatons"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#ai-in-movies-games-and-books","text":"","title":"AI in Movies, Games and Books"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#hal-in-2001-a-space-odyssey","text":"","title":"Hal in 2001 - A Space Odyssey"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#is-ai-a-danger-to-humans","text":"[!danger] Asimov\u2019s Robot Laws 1. A robot may not injure a human being or, through inaction, allow a human being to come to harm. 2. A robot must obey the orders given it by human beings except where such orders would conflict with the First Law. 3. A robot must protect its own existence as long as such protection does not conflict with the First or Second Laws.","title":"Is AI a Danger to Humans?"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#ethics-and-morals","text":"Ethics is the discipline dealing with what is good and bad and with moral duty and obligation. Ethics is a system of moral principles. Morals are the prevailing standards of behaviour that enable people to live cooperatively in groups. Morality refers to what societies sanction as right and acceptable. [!question] Can AI or robots be truly intelligence \u2013 i.e. have general human intelligence? Can robots have a faith in God. If there is a God, could they have a soul? Should robots have the same right as humans? Should there be laws that define the limits of our interactions with AI/Robots? Should AI/Robots have built in restrictions by international law? Do we need to have an international agreement to limit AI/Robots in war/battle?","title":"Ethics and Morals"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#in-more-technical-terms-what-is-ai","text":"","title":"In More Technical Terms - What is AI?"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#ai-development-in-modern-times","text":"Ref: History of AI Winters","title":"AI Development in Modern Times"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#further-questions-relating-to-ai-research-and-development","text":"Will AI take people\u2019s jobs? Will new jobs and careers emerge? What are the ethics surrounding future AI and Robotics? Limiting the creation and use of weapons? Asimov\u2019s laws? Can robots be sentient? If a self-driving car injuries someone, who is responsible? Should AI and robots have rights? Or should their intelligence be limited to prevent self-awareness? How can we safe-guard against \u201caccidental\u201d evolution of superintelligence? AI and robots developing their own agenda Are these worries just nonsense?","title":"Further Questions Relating to AI Research and Development"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#wrap-up","text":"[!summary] - As intelligent humans we have always been curious about why we exist - We wonder about how we are conscious and what will happen our consciousness when we die - We are fascinated by the challenge of replicating ourselves or part of ourselves - AI has progressed massively in the past 10 years - The next challenges are to try to create Artificial General Intelligence and better autonomous robots","title":"Wrap-up"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#further-study","text":"Paths to superintelligence, Bostrom, Nick. Superintelligence. OUP Oxford. Life 3.0. Tegmark, Max, Penguin Books Ltd. Thinking Machines, Dormehl, Luke. Ebury Publishing. AI 2041, Lee, Kai-Fu; Qiufan, Chen. Ebury Publishing. Building a Second Brain, Forte, Tiago. Building a Second Brain. Next Lecture L2 - Applications of AI","title":"Further Study"},{"location":"EEE205/Classes/a_Lectures/L1%20-%20Introduction%20to%20AI/#ai-ml-eee205-python-console-input-debug-variable-function-replit","text":"","title":"AI  #ml #EEE205 #python #console, #input, #debug, #variable, #function #replit"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/","text":"Contemporary AI \u00b6 Dr Darryl Charles \u00b6 Preparation \u00b6 Search the internet for the most dramatic new applications of AI Overview \u00b6 Introduction Latest creative AI developments Benefits of AI in Supporting People Types of AI Intelligence, Sentience, and Consciousness Tests for Intelligence Conclusion The Impact of AI and Machine Learning \u00b6 Creative Industries The augmented workforce Low-code and no-code AI Bigger and better language modelling AI in cybersecurity AI and the Metaverse Autonomous vehicles Many aspects of Healthcare Deep Fakes \u00b6 Fake Movie Stars \u00b6 Google Parti \u00b6 DALL-E 2 Github Copilot AI Augmented Workforce \u00b6 Robotics Home support robots, exoskeletons, drones, wearable weapons, assisted surgery Machine learning Chat-bots, realistic avatars, natural language processing (NLP), medicine creation, medical diagnosis Cognitive augmentation Decision support, code creation, art creation Reinforcement Learning \u00b6 Deep Learning \u00b6 Definitions of AI \u00b6 \"AI is concerned with intelligent behaviour in artefacts. Intelligent behaviour in turn involves perception, reasoning, learning, communicating and acting in complex environments.\" Artificial Intelligence a New Synthesis, Nils Nilsson. A Traditional Definition of AI \u00b6 Russell and Norvig in their seminal textbook AI: A Modern Approach express AI in terms of four dimensions: Thinking humanly, Thinking rationally, Acting humanly, and Acting rationally. A Game AI? \u00b6 Ian Millington in \u201cAI for Games\u201d defines AI as: \u201cmaking computers able to perform the thinking tasks that humans and animals are capable of\u201d. He distinguishes academic AI from game AI. What is intelligence? \u00b6 \u201cHuman intelligence is a mental quality that consists of the abilities to learn from experience, adapt to new situations, understand and handle abstract concepts, and use knowledge to manipulate one's environment.\u201d Consciousness? \u00b6 Consciousness, at its simplest, is sentience or awareness of internal and external existence. [^1] Can an Artificial Entity be Intelligent? \u00b6 If we are the algorithm creators can an AI truly be autonomous or creative? Can AI think? Should it have rights? Would it have free will? If an AI had super intelligence, would we be safe? Types of AI \u00b6 Weak AI : typically focused on narrow tasks, e.g. controlling flow in a pipe. Strong AI : AI that can adapt, problem solve or learn. Artificial General Intelligence (AGI): more human-like in being able to generalise well be able to perform a range of different tasks. Superintelligence : better than human \u2013 faster, more accurate, beyond human understanding. Turing Test \u00b6 The Lovelace Test 2.0 \u00b6 of Artificial Creativity and Intelligence by Mark Riedl Summary \u00b6 AI is a complex topic There are now many useful applications However, we are still some way off creating AGI or Superintelligence It is unclear whether AI will ever be sentient Reflection and Further Study \u00b6 7 Biggest Artificial Intelligence Trends In 2022 How A.I. is set to evolve in 2022 (cnbc.com) Fiverr vs DALI Parti: Pathways Autoregressive Text-to-Image Model (research.google) (GitHub Copilot vs Tabnine What Is Consciousness? (nature.com) [^1] Consciousness Definition - Merriam-Webster Previous Lecture L1 - Introduction to AI AI #ml #EEE205 #python \u00b6","title":"L2   Applications of AI"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#contemporary-ai","text":"","title":"Contemporary AI"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#dr-darryl-charles","text":"","title":"Dr Darryl Charles"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#preparation","text":"Search the internet for the most dramatic new applications of AI","title":"Preparation"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#overview","text":"Introduction Latest creative AI developments Benefits of AI in Supporting People Types of AI Intelligence, Sentience, and Consciousness Tests for Intelligence Conclusion","title":"Overview"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#the-impact-of-ai-and-machine-learning","text":"Creative Industries The augmented workforce Low-code and no-code AI Bigger and better language modelling AI in cybersecurity AI and the Metaverse Autonomous vehicles Many aspects of Healthcare","title":"The Impact of AI and Machine Learning"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#deep-fakes","text":"","title":"Deep Fakes"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#fake-movie-stars","text":"","title":"Fake Movie Stars"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#google-parti","text":"DALL-E 2 Github Copilot","title":"Google Parti"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#ai-augmented-workforce","text":"Robotics Home support robots, exoskeletons, drones, wearable weapons, assisted surgery Machine learning Chat-bots, realistic avatars, natural language processing (NLP), medicine creation, medical diagnosis Cognitive augmentation Decision support, code creation, art creation","title":"AI Augmented Workforce"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#reinforcement-learning","text":"","title":"Reinforcement Learning"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#deep-learning","text":"","title":"Deep Learning"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#definitions-of-ai","text":"\"AI is concerned with intelligent behaviour in artefacts. Intelligent behaviour in turn involves perception, reasoning, learning, communicating and acting in complex environments.\" Artificial Intelligence a New Synthesis, Nils Nilsson.","title":"Definitions of AI"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#a-traditional-definition-of-ai","text":"Russell and Norvig in their seminal textbook AI: A Modern Approach express AI in terms of four dimensions: Thinking humanly, Thinking rationally, Acting humanly, and Acting rationally.","title":"A Traditional Definition of AI"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#a-game-ai","text":"Ian Millington in \u201cAI for Games\u201d defines AI as: \u201cmaking computers able to perform the thinking tasks that humans and animals are capable of\u201d. He distinguishes academic AI from game AI.","title":"A Game AI?"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#what-is-intelligence","text":"\u201cHuman intelligence is a mental quality that consists of the abilities to learn from experience, adapt to new situations, understand and handle abstract concepts, and use knowledge to manipulate one's environment.\u201d","title":"What is intelligence?"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#consciousness","text":"Consciousness, at its simplest, is sentience or awareness of internal and external existence. [^1]","title":"Consciousness?"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#can-an-artificial-entity-be-intelligent","text":"If we are the algorithm creators can an AI truly be autonomous or creative? Can AI think? Should it have rights? Would it have free will? If an AI had super intelligence, would we be safe?","title":"Can an Artificial Entity be Intelligent?"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#types-of-ai","text":"Weak AI : typically focused on narrow tasks, e.g. controlling flow in a pipe. Strong AI : AI that can adapt, problem solve or learn. Artificial General Intelligence (AGI): more human-like in being able to generalise well be able to perform a range of different tasks. Superintelligence : better than human \u2013 faster, more accurate, beyond human understanding.","title":"Types of AI"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#turing-test","text":"","title":"Turing Test"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#the-lovelace-test-20","text":"of Artificial Creativity and Intelligence by Mark Riedl","title":"The Lovelace Test 2.0"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#summary","text":"AI is a complex topic There are now many useful applications However, we are still some way off creating AGI or Superintelligence It is unclear whether AI will ever be sentient","title":"Summary"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#reflection-and-further-study","text":"7 Biggest Artificial Intelligence Trends In 2022 How A.I. is set to evolve in 2022 (cnbc.com) Fiverr vs DALI Parti: Pathways Autoregressive Text-to-Image Model (research.google) (GitHub Copilot vs Tabnine What Is Consciousness? (nature.com) [^1] Consciousness Definition - Merriam-Webster Previous Lecture L1 - Introduction to AI","title":"Reflection and Further Study"},{"location":"EEE205/Classes/a_Lectures/L2%20-%20Applications%20of%20AI/#ai-ml-eee205-python","text":"","title":"AI  #ml #EEE205 #python"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/","text":"AI Research \u00b6 Dr Darryl Charles \u00b6 Preparation \u00b6 Browse some of the recent research presented here: Two Minute Papers - YouTube Browse the learning materials here: Education \u2013 Google AI I would recommend this as a good supplementary short course: AI For Everyone | Coursera Overview \u00b6 Introduction Jobs b c d e Conclusion The AI Landscape \u00b6 Jobs \u00b6 Core Jobs: - Machine Learning Eng., Deep Learning Eng., Senior Data Scientist, Computer Vision Eng., Data Scientist, Algorithm Developer, Business Intelligence, Data Analyst Core Skills: - Programming, Maths, Problem Solving A Typical Machine Learning Agent \u00b6 Learn from Experience \u00b6 Predicting Car Insurance \u00b6 Deep Learning Architecture \u00b6 Deep Reinforcement Learning - DeepMind \u00b6 Big Data (Hitch Hikers Guide) \u00b6 [!quote] Big Data [The guide] says, \u201cis big. Really big. You just won\u2019t believe how vastly, hugely, mindbogglingly big it is. I mean, you may think it\u2019s a long way down the road to the chemist\u2019s, but that\u2019s just peanuts to Big Data.\u201d 79 zettabytes of data were generated in the world in 2021. 180 zettabytes of data will be generated in 2025. GPT-3 is a very large language model with about 175B parameters. It is trained on about 45TB of text data from different datasets. Self Driving Cars \u00b6 Future Warfare \u00b6 Slide 10 \u00b6 Summary \u00b6 Reflection and Further Study \u00b6 AI #ml #EEE205 #python \u00b6","title":"AI Research"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#ai-research","text":"","title":"AI Research"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#dr-darryl-charles","text":"","title":"Dr Darryl Charles"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#preparation","text":"Browse some of the recent research presented here: Two Minute Papers - YouTube Browse the learning materials here: Education \u2013 Google AI I would recommend this as a good supplementary short course: AI For Everyone | Coursera","title":"Preparation"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#overview","text":"Introduction Jobs b c d e Conclusion","title":"Overview"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#the-ai-landscape","text":"","title":"The AI Landscape"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#jobs","text":"Core Jobs: - Machine Learning Eng., Deep Learning Eng., Senior Data Scientist, Computer Vision Eng., Data Scientist, Algorithm Developer, Business Intelligence, Data Analyst Core Skills: - Programming, Maths, Problem Solving","title":"Jobs"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#a-typical-machine-learning-agent","text":"","title":"A Typical Machine Learning Agent"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#learn-from-experience","text":"","title":"Learn from Experience"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#predicting-car-insurance","text":"","title":"Predicting Car Insurance"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#deep-learning-architecture","text":"","title":"Deep Learning Architecture"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#deep-reinforcement-learning-deepmind","text":"","title":"Deep Reinforcement Learning - DeepMind"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#big-data-hitch-hikers-guide","text":"[!quote] Big Data [The guide] says, \u201cis big. Really big. You just won\u2019t believe how vastly, hugely, mindbogglingly big it is. I mean, you may think it\u2019s a long way down the road to the chemist\u2019s, but that\u2019s just peanuts to Big Data.\u201d 79 zettabytes of data were generated in the world in 2021. 180 zettabytes of data will be generated in 2025. GPT-3 is a very large language model with about 175B parameters. It is trained on about 45TB of text data from different datasets.","title":"Big Data (Hitch Hikers Guide)"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#self-driving-cars","text":"","title":"Self Driving Cars"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#future-warfare","text":"","title":"Future Warfare"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#slide-10","text":"","title":"Slide 10"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#summary","text":"","title":"Summary"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#reflection-and-further-study","text":"","title":"Reflection and Further Study"},{"location":"EEE205/Classes/a_Lectures/L3%20-%20AI%20Research/#ai-ml-eee205-python","text":"","title":"AI  #ml #EEE205 #python"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/","text":"Seminar 1 - Python Basics \u00b6 In this seminar we go over the main background and principles for coding Python. Preparation \u00b6 Watch Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube Check out the basics here: Python Tutorial (w3schools.com) Sign in to Replit and make sure you can see my course files Download Obsidian for your home computer Introduction \u00b6 In this session you will get used to the main tools that you will be using, accessing my notes and instructions, and getting started with Python. The main objectives for todays practical are: Start to learn Python and its main syntax Accept my invitation to join Replit via your Uni email address. Create your account on Replit for writing code Learn how to use Replit Run and amend simple Python programs in Replit Open and bookmark my class site EEE205 Artificial Intelligence I (dkcharles.github.io) I encourage you to install obsidian and to clone my class files from GitHub to your computer dkcharles/EEE205 (github.com) . \"Hello World\" \u00b6 The following Replit project contains the code that once run will display Hello World to a console window. Well, you have to start somewhere! Click on Show files to see the main code files, including main.py and code notes P1 Notes.md . \"Hello World\" example Replit link Python code is Interpreted at runtime \u00b6 Python code is typically saved in files with a .py extension. Python is an interpreter based language Interpreted Language - an overview | ScienceDirect Topics , which means that it converts Python to bytecode that runs in a Python virtual machine. This makes Python very versatile in running across many different hardware and software platforms. Ways to Write AI Code and Perform Data Science / AI \u00b6 There are a lot of tools for programming AI, Machine Learning, and Data Science. The following languages might be considered the most popular: R, Python, C#, and C++ ~ each of these languages access libraries to perform tasks. R is a C-like language typically used within a great tool called RStudio . Python has become increasingly popular and has a large number of useful libraries. Python AI can be performing on command line along with your favourite editor, Anaconda , PyCharm , VSCode, Jupyer Notebooks or Lab, and online at Google Colab . Note, Julia is like Python (and uses similar libraries) but is much faster - it is not as widely used though. C# can access .NET functionality and typically uses ML.NET . C++ is a bit more hardcore to code with but you can build fast executables that are often 10-100 times faster than some aspects of Python's interpreted code. There are other tools such as MATLAB which is popular in academia due to its matrix operations, AzureML , AWS ML , IBM's Watson AI, and a range of Google AI tools . Core Ideas \u00b6 [!important] Aim To discuss using Replit , coding environments and principles , and look at coding some of the basic elements of Python . Lets look at Replit online. You should accept my class invite to Replit This will give you access to the practical sessions and interactive support Replit supports many coding languages, and it has great support for Python Make sure that you do not make your code public, unless you intend to Python Terminal, REPL, Comments and Whitespace \u00b6 Live demo Python Formatting \u00b6 Indentation - Use 4 spaces per indentation level. Spaces are the preferred indentation method. Tabs should be used solely to remain consistent with code that is already indented with tabs. Python disallows mixing tabs and spaces for indentation. Blank Lines Surround top-level function and class definitions with two blank lines. Method definitions inside a class are surrounded by a single blank line. Python Comments \u00b6 # This is a comment and won't run print(\"Hello Universe\") # Comment is after print() so the code will run # Note no semicolon at the endof the line of code - as you would have in Java # You can # do multiple # lines like this \"\"\" This is a better way though \"\"\" Types and Variables \u00b6 Variables are so called because they can contain content that we can generally change that content when a program is running. e.g. `big_number = 1_000_000_000 # underscores for number presentation clarity There are rules for Python variables: A variable name must start with a letter or the underscore character A variable name cannot start with a number A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ ) Variable names are case-sensitive (age, Age and AGE are three different variables) There is a range of different types of content for variables, e.g.: Text Type: str (text) Numeric Types: int, float (whole numbers, with a decimal point) Sequence Types: list, tuple, range (changeable list, unchangeable list, a range of values) Mapping Type: dict (a label and its value, e.g. apple, red) Set Types: set (for doing set maths) Boolean Type: bool (true or false) Binary Types: bytes (8 bits per byte ~ normally thinking of binary values) Python can work out the type of variable once you assign a value but you cannot combine variables of different types together. Check out the following example, which won't run. An Example of a Function \u00b6 Challenge \u00b6 What is wrong with each of the example below? number = ab number = 10; int number = 10 # there are 3 different things wrong below def aFn(value) { squared = value ^ 2 return squared } print(aFn(2)) Reflection and Further Study \u00b6 Book: Illustrated Guide to Python 3, chapters 1 - 3. Python (intermediate): Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube 100 Days of Code: The Complete Python Pro Bootcamp for 2022 | Udemy If you are an enthusiastic learner - Install Anaconda on your home computer if you would like to try out Python in Jupyter notebooks EEE205, #AI, #ml, #console, #input, #debug, #variable, #function \u00b6","title":"Seminar 1 - Python Basics"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#seminar-1-python-basics","text":"In this seminar we go over the main background and principles for coding Python.","title":"Seminar 1 - Python Basics"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#preparation","text":"Watch Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube Check out the basics here: Python Tutorial (w3schools.com) Sign in to Replit and make sure you can see my course files Download Obsidian for your home computer","title":"Preparation"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#introduction","text":"In this session you will get used to the main tools that you will be using, accessing my notes and instructions, and getting started with Python. The main objectives for todays practical are: Start to learn Python and its main syntax Accept my invitation to join Replit via your Uni email address. Create your account on Replit for writing code Learn how to use Replit Run and amend simple Python programs in Replit Open and bookmark my class site EEE205 Artificial Intelligence I (dkcharles.github.io) I encourage you to install obsidian and to clone my class files from GitHub to your computer dkcharles/EEE205 (github.com) .","title":"Introduction"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#hello-world","text":"The following Replit project contains the code that once run will display Hello World to a console window. Well, you have to start somewhere! Click on Show files to see the main code files, including main.py and code notes P1 Notes.md . \"Hello World\" example Replit link","title":"\"Hello World\""},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#python-code-is-interpreted-at-runtime","text":"Python code is typically saved in files with a .py extension. Python is an interpreter based language Interpreted Language - an overview | ScienceDirect Topics , which means that it converts Python to bytecode that runs in a Python virtual machine. This makes Python very versatile in running across many different hardware and software platforms.","title":"Python code is Interpreted at runtime"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#ways-to-write-ai-code-and-perform-data-science-ai","text":"There are a lot of tools for programming AI, Machine Learning, and Data Science. The following languages might be considered the most popular: R, Python, C#, and C++ ~ each of these languages access libraries to perform tasks. R is a C-like language typically used within a great tool called RStudio . Python has become increasingly popular and has a large number of useful libraries. Python AI can be performing on command line along with your favourite editor, Anaconda , PyCharm , VSCode, Jupyer Notebooks or Lab, and online at Google Colab . Note, Julia is like Python (and uses similar libraries) but is much faster - it is not as widely used though. C# can access .NET functionality and typically uses ML.NET . C++ is a bit more hardcore to code with but you can build fast executables that are often 10-100 times faster than some aspects of Python's interpreted code. There are other tools such as MATLAB which is popular in academia due to its matrix operations, AzureML , AWS ML , IBM's Watson AI, and a range of Google AI tools .","title":"Ways to Write AI Code and Perform Data Science / AI"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#core-ideas","text":"[!important] Aim To discuss using Replit , coding environments and principles , and look at coding some of the basic elements of Python . Lets look at Replit online. You should accept my class invite to Replit This will give you access to the practical sessions and interactive support Replit supports many coding languages, and it has great support for Python Make sure that you do not make your code public, unless you intend to","title":"Core Ideas"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#python-terminal-repl-comments-and-whitespace","text":"Live demo","title":"Python Terminal, REPL, Comments and Whitespace"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#python-formatting","text":"Indentation - Use 4 spaces per indentation level. Spaces are the preferred indentation method. Tabs should be used solely to remain consistent with code that is already indented with tabs. Python disallows mixing tabs and spaces for indentation. Blank Lines Surround top-level function and class definitions with two blank lines. Method definitions inside a class are surrounded by a single blank line.","title":"Python Formatting"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#python-comments","text":"# This is a comment and won't run print(\"Hello Universe\") # Comment is after print() so the code will run # Note no semicolon at the endof the line of code - as you would have in Java # You can # do multiple # lines like this \"\"\" This is a better way though \"\"\"","title":"Python Comments"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#types-and-variables","text":"Variables are so called because they can contain content that we can generally change that content when a program is running. e.g. `big_number = 1_000_000_000 # underscores for number presentation clarity There are rules for Python variables: A variable name must start with a letter or the underscore character A variable name cannot start with a number A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ ) Variable names are case-sensitive (age, Age and AGE are three different variables) There is a range of different types of content for variables, e.g.: Text Type: str (text) Numeric Types: int, float (whole numbers, with a decimal point) Sequence Types: list, tuple, range (changeable list, unchangeable list, a range of values) Mapping Type: dict (a label and its value, e.g. apple, red) Set Types: set (for doing set maths) Boolean Type: bool (true or false) Binary Types: bytes (8 bits per byte ~ normally thinking of binary values) Python can work out the type of variable once you assign a value but you cannot combine variables of different types together. Check out the following example, which won't run.","title":"Types and Variables"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#an-example-of-a-function","text":"","title":"An Example of a Function"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#challenge","text":"What is wrong with each of the example below? number = ab number = 10; int number = 10 # there are 3 different things wrong below def aFn(value) { squared = value ^ 2 return squared } print(aFn(2))","title":"Challenge"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#reflection-and-further-study","text":"Book: Illustrated Guide to Python 3, chapters 1 - 3. Python (intermediate): Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube 100 Days of Code: The Complete Python Pro Bootcamp for 2022 | Udemy If you are an enthusiastic learner - Install Anaconda on your home computer if you would like to try out Python in Jupyter notebooks","title":"Reflection and Further Study"},{"location":"EEE205/Classes/b_Seminars/S1%20Python%20Basics/#eee205-ai-ml-console-input-debug-variable-function","text":"","title":"EEE205, #AI, #ml, #console, #input, #debug, #variable, #function"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/","text":"P1 Beginning Python \u00b6 In this practical class you will begin to code in Python. Preparation \u00b6 You should have attended the first seminar and reviewed the slides/notes/links S1 Python Basics . Video 2 and 3 from Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube is a good quick Python intro. The author's Kindle books are also reasonably affordable if you like to read on the train etc. There are a lot of places that you read about the basics of Python. \" Treading on Python Series: Illustrated Guide to Python 3 \" seems to be a decent book. However, there are lots of decent Python books, and every few months there is a deal at humblebundle.com for ebooks. w3schools Python Tutorial is a good site for quick reference. Introduction \u00b6 In this class you will go through several Python code examples and attempt several code challenges. After reading through the material here you are directed to our Replit class. Open the main.py file below. Run the code to reveal the elegance of Python :-) It should run in the iframe below, but you can also open it in Replit ( ctrl left click in an Obsidian vault). PEP 20 \u2013 The Zen of Python is a philosophical and opinionated view of how to code, and is kind of fun! A full Python style guide is shown in PEP 8 . This provides detailed information of the preferred way to write Python code, though it does take quite a while to read and understand fully! [!question] What does the following code do in the example? print \"\\n \\n \" Instructions \u00b6 Log in to our Replit and complete the exercises in EEE205 Week 1 - Beginning Python . Challenge \u00b6 Add a condition and a loop to the code below to keep asking the person to enter a value until they enter a valid y or n. You might code it so that a person only gets asked 5 times before getting 'locked out'! :-) The code project is on our class Replit . print(\"Is Python easier than Java?\") answer = input(\"y or n: \") if (answer == 'y'): print(\"I suspect you are right\") elif (answer == 'n'): print(\"You must like classes\") else: print(\"I give up!\") Reflection \u00b6 After completing this class, can you: Print output using Python from a Console and from a Shell ? Understand the precision of indents (4/2 spaces) in Python Use maths operators correctly, e.g. +-/* ? Use logic operators such as not , or , and and ? Assign values (string, float, int, bool) appropriately to variables? Understand for loops and conditions such as if ... else Ideally, you will look at some of the additional learning resources to get on top of the basics from today. This will make the next exercises a little easier. AI #ml #EEE205 #python, #console, #input, #debug, #variable, #function \u00b6","title":"P1 Beginning Python"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#p1-beginning-python","text":"In this practical class you will begin to code in Python.","title":"P1 Beginning Python"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#preparation","text":"You should have attended the first seminar and reviewed the slides/notes/links S1 Python Basics . Video 2 and 3 from Python for beginners: Python Beginner Tutorial #1 - Installation and First Program - YouTube is a good quick Python intro. The author's Kindle books are also reasonably affordable if you like to read on the train etc. There are a lot of places that you read about the basics of Python. \" Treading on Python Series: Illustrated Guide to Python 3 \" seems to be a decent book. However, there are lots of decent Python books, and every few months there is a deal at humblebundle.com for ebooks. w3schools Python Tutorial is a good site for quick reference.","title":"Preparation"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#introduction","text":"In this class you will go through several Python code examples and attempt several code challenges. After reading through the material here you are directed to our Replit class. Open the main.py file below. Run the code to reveal the elegance of Python :-) It should run in the iframe below, but you can also open it in Replit ( ctrl left click in an Obsidian vault). PEP 20 \u2013 The Zen of Python is a philosophical and opinionated view of how to code, and is kind of fun! A full Python style guide is shown in PEP 8 . This provides detailed information of the preferred way to write Python code, though it does take quite a while to read and understand fully! [!question] What does the following code do in the example? print \"\\n \\n \"","title":"Introduction"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#instructions","text":"Log in to our Replit and complete the exercises in EEE205 Week 1 - Beginning Python .","title":"Instructions"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#challenge","text":"Add a condition and a loop to the code below to keep asking the person to enter a value until they enter a valid y or n. You might code it so that a person only gets asked 5 times before getting 'locked out'! :-) The code project is on our class Replit . print(\"Is Python easier than Java?\") answer = input(\"y or n: \") if (answer == 'y'): print(\"I suspect you are right\") elif (answer == 'n'): print(\"You must like classes\") else: print(\"I give up!\")","title":"Challenge"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#reflection","text":"After completing this class, can you: Print output using Python from a Console and from a Shell ? Understand the precision of indents (4/2 spaces) in Python Use maths operators correctly, e.g. +-/* ? Use logic operators such as not , or , and and ? Assign values (string, float, int, bool) appropriately to variables? Understand for loops and conditions such as if ... else Ideally, you will look at some of the additional learning resources to get on top of the basics from today. This will make the next exercises a little easier.","title":"Reflection"},{"location":"EEE205/Classes/c_Labs/P1%20Beginning%20Python/#ai-ml-eee205-python-console-input-debug-variable-function","text":"","title":"AI  #ml #EEE205 #python,  #console, #input, #debug, #variable, #function"},{"location":"EEE205/Classes/d_Notes/AI%20Glossary/","text":"Algorithm : A formula or set of rules for performing a task. In AI, the algorithm tells the machine how to go about finding answers to a question or solutions to a problem. Artificial Intelligence (AI): A field of computer science dedicated to the study of computer software making intelligent decisions, reasoning, and problem solving. Artificial Neural Networks (ANN): Learning models based on the biological neural networks present in the brains of animals. Based on the activity of neurons, ANNs are used to solve tasks that would be too difficult for traditional methods of programming. Case-Based Reasoning (CBR): An approach to knowledge-based problem solving that uses the solutions of a past, similar problem (case) to solve an existing problem. Data mining : The process by which patterns are discovered within large sets of data with the goal of extracting useful information from it. Deep learning : A subset of machine learning that uses specialized algorithms to model and understand complex structures and relationships among data and datasets. Heuristics : These are rules drawn from experience used to solve a problem more quickly than traditional problem-solving methods in AI. While faster, a heuristic approach typically is less optimal than the classic methods it replaces. Inductive reasoning : In AI, inductive reasoning uses evidence and data to create statements and rules. Machine learning : A field of AI focused on getting machines to act without being programmed to do so. Machines \u201clearn\u201d from patterns they recognize and adjust their behaviour accordingly. Natural language processing (NLP): The ability of computers to understand, or process natural human languages and derive meaning from them. NLP typically involves machine interpretation of text or speech recognition. Planning : A branch of AI dealing with planned sequences or strategies to be performed by an AI-powered machine. Things such as actions to take, variables to account for, and duration of performance are accounted for. Pruning : The use of a search algorithm to cut off undesirable solutions to a problem in an AI system. It reduces the number of decisions that can be made by the AI system. Strong AI : An area of AI development that is working toward the goal of making AI systems that are as useful and skilled as the human mind. Turing test : A test developed by Alan Turing that tests the ability of a machine to mimic human behaviour. The test involves a human evaluator who undertakes natural language conversations with another human and a machine and rates the conversations. Weak AI : Also known as narrow AI, weak AI refers to a non-sentient computer system that operates within a predetermined range of skills and usually focuses on a singular task or small set of tasks. Most AI in use today is weak AI. Weights : The connection strength between units, or nodes, in a neural network. These weights can be adjusted in a process called learning. Full List here: https://en.wikipedia.org/wiki/Glossary_of_artificial_intelligence #AI #ml","title":"AI Glossary"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/","text":"AI Timeline Summary \u00b6 Full timeline here Timeline of artificial intelligence - Wikipedia Early AI Timeline - 1901 - 1950 \u00b6 1913: Bertrand Russell and Alfred North Whitehead published Principia Mathematica , which revolutionized formal logic . 1915: Leonardo Torres y Quevedo built a chess automaton, El Ajedrecista and published speculation about thinking and automata. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1923: Karel \u010capek 's play R.U.R. (Rossum's Universal Robots) opened in London. This is the first use of the word \" robot \" in English. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1920s and 1930s: Ludwig Wittgenstein and Rudolf Carnap lead philosophy into logical analysis of knowledge . Alonzo Church develops Lambda Calculus to investigate computability using recursive functional notation. 1931: Kurt G\u00f6del showed that sufficiently powerful formal systems , if consistent, permit the formulation of true theorems that are unprovable by any theorem-proving machine deriving all possible theorems from the axioms. To do this he had to build a universal, integer-based programming language, which is the reason why he is sometimes called the \"father of theoretical computer science \". 1941: Konrad Zuse built the first working program-controlled computers. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1943: Warren Sturgis McCulloch and Walter Pitts publish \"A Logical Calculus of the Ideas Immanent in Nervous Activity\" (1943), laying foundations for artificial neural networks . (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1943: Arturo Rosenblueth , Norbert Wiener and Julian Bigelow coin the term \" cybernetics \". Wiener's popular book by that name published in 1948. 1945: Game theory which would prove invaluable in the progress of AI was introduced with the 1944 paper, Theory of Games and Economic Behavior by mathematician John von Neumann and economist Oskar Morgenstern . 1945: Vannevar Bush published As We May Think ( The Atlantic Monthly , July 1945) a prescient vision of the future in which computers assist humans in many activities. 1948: John von Neumann (quoted by E.T. Jaynes ) in response to a comment at a lecture that it was impossible for a machine to think: \"You insist that there is something a machine cannot do. If you will tell me precisely what it is that a machine cannot do, then I can always make a machine which will do just that!\". Von Neumann was presumably alluding to the Church-Turing thesis which states that any effective procedure can be simulated by a (generalized) computer. Early AI Timeline - 1950s \u00b6 1950: Alan Turing proposes the Turing Test as a measure of machine intelligence. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1950: Claude Shannon published a detailed analysis of chess playing as search . 1950: Isaac Asimov published his Three Laws of Robotics . 1951: The first working AI programs were written in 1951 to run on the Ferranti Mark 1 machine of the University of Manchester : a checkers-playing program written by Christopher Strachey and a chess-playing program written by Dietrich Prinz . 1952\u20131962: Arthur Samuel ( IBM ) wrote the first game-playing program, (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) for checkers ( draughts ), to achieve sufficient skill to challenge a respectable amateur. His first checkers-playing program was written in 1952, and in 1955 he created a version that learned to play. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1956: The Dartmouth College summer AI conference is organized by John McCarthy , Marvin Minsky , Nathan Rochester of IBM and Claude Shannon . McCarthy coins the term artificial intelligence for the conference. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1956: The first demonstration of the Logic Theorist (LT) written by Allen Newell , J.C. Shaw and Herbert A. Simon ( Carnegie Institute of Technology , now Carnegie Mellon University or CMU). This is often called the first AI program, though Samuel's checkers program also has a strong claim. 1958: John McCarthy ( Massachusetts Institute of Technology or MIT) invented the Lisp programming language . 1958: Herbert Gelernter and Nathan Rochester (IBM) described a theorem prover in geometry that exploits a semantic model of the domain in the form of diagrams of \"typical\" cases. 1958: Teddington Conference on the Mechanization of Thought Processes was held in the UK and among the papers presented were John McCarthy's Programs with Common Sense, Oliver Selfridge 's Pandemonium, and Marvin Minsky 's Some Methods of Heuristic Programming and Artificial Intelligence. 1959: The General Problem Solver (GPS) was created by Newell, Shaw and Simon while at CMU. 1959: John McCarthy and Marvin Minsky founded the MIT AI Lab . Late 1950s, early 1960s: Margaret Masterman and colleagues at University of Cambridge design semantic nets for machine translation . Early AI Timeline - 1960s \u00b6 1960s: Ray Solomonoff lays the foundations of a mathematical theory of AI, introducing universal Bayesian methods for inductive inference and prediction. 1961: James Slagle (PhD dissertation, MIT) wrote (in Lisp) the first symbolic integration program, SAINT, which solved calculus problems at the college freshman level. 1961: In Minds, Machines and G\u00f6del , John Lucas (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) denied the possibility of machine intelligence on logical or philosophical grounds. He referred to Kurt G\u00f6del 's result of 1931: sufficiently powerful formal systems are either inconsistent or allow for formulating true theorems unprovable by any theorem-proving AI deriving all provable theorems from the axioms. Since humans are able to \"see\" the truth of such theorems, machines were deemed inferior. 1963: Edward Feigenbaum and Julian Feldman published Computers and Thought, the first collection of articles about artificial intelligence. 1963: Leonard Uhr and Charles Vossler published \"A Pattern Recognition Program That Generates, Evaluates, and Adjusts Its Own Operators\", which described one of the first machine learning programs that could adaptively acquire and modify features and thereby overcome the limitations of simple Perceptrons of Rosenblatt 1965: Lotfi Zadeh at U.C. Berkeley publishes his first paper introducing fuzzy logic \"Fuzzy Sets\" (Information and Control 8: 338\u2013353). 1965: Joseph Weizenbaum (MIT) built ELIZA , an interactive program that carries on a dialogue in English language on any topic. It was a popular toy at AI centers on the ARPANET when a version that \"simulated\" the dialogue of a psychotherapist was programmed. 1965: Edward Feigenbaum initiated Dendral , a ten-year effort to develop software to deduce the molecular structure of organic compounds using scientific instrument data. It was the first expert system . 1966: Machine Intelligence (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) workshop at Edinburgh \u2013 the first of an influential annual series organized by Donald Michie and others. 1966: Negative report on machine translation kills much work in Natural language processing (NLP) for many years. 1968: Richard Greenblatt (programmer) at MIT built a knowledge-based chess-playing program , MacHack , that was good enough to achieve a class-C rating in tournament play. 1968: Wallace and Boulton's program, Snob (Comp.J. 11(2) 1968), for unsupervised classification (clustering) uses the Bayesian Minimum Message Length criterion, a mathematical realisation of Occam's razor . 1969: Stanford Research Institute (SRI): Shakey the Robot , demonstrated combining animal locomotion , perception and problem solving . 1969: First International Joint Conference on Artificial Intelligence ( IJCAI ) held at Stanford. 1969: Marvin Minsky and Seymour Papert publish Perceptrons , demonstrating previously unrecognized limits of this feed-forward two-layered structure, and This book is considered by some to mark the beginning of the AI winter of the 1970s, a failure of confidence and funding for AI. Nevertheless, significant progress in the field continued (see below). 1969: McCarthy and Hayes started the discussion about the frame problem with their essay, \"Some Philosophical Problems from the Standpoint of Artificial Intelligence\". Recent AI Timeline - 2010s \u00b6 2010: Microsoft launched Kinect for Xbox 360, the first gaming device to track human body movement , using just a 3D camera and infra-red detection, enabling users to play their Xbox 360 wirelessly. The award-winning machine learning for human motion capture technology for this device was developed by the Computer Vision group at Microsoft Research , Cambridge. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2011: IBM 's Watson computer defeated television game show Jeopardy! champions Rutter and Jennings . 2011\u20132014: Apple 's Siri (2011), Google 's Google Now (2012) and Microsoft 's Cortana (2014) are smartphone apps that use natural language to answer questions, make recommendations and perform actions. 2013: Robot HRP-2 built by SCHAFT Inc of Japan , a subsidiary of Google , defeats 15 teams to win DARPA \u2019s Robotics Challenge Trials . HRP-2 scored 27 out of 32 points in 8 tasks needed in disaster response. Tasks are drive a vehicle, walk over debris, climb a ladder, remove debris, walk through doors, cut through a wall, close valves and connect a hose. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2015: An open letter to ban development and use of autonomous weapons signed by Hawking , Musk , Wozniak and 3,000 researchers in AI and robotics 2015: Google DeepMind 's AlphaGo (version: Fan) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) defeated 3 time European Go champion 2 dan professional Fan Hui by 5 games to 0. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2016: Google DeepMind 's AlphaGo (version: Lee) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) defeated Lee Sedol 4\u20131. Lee Sedol is a 9 dan professional Korean Go champion who won 27 major tournaments from 2002 to 2016. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) Before the match with AlphaGo, Lee Sedol was confident in predicting an easy 5\u20130 or 4\u20131 victory. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2017: Asilomar Conference on Beneficial AI was held, to discuss AI ethics and how to bring about beneficial AI while avoiding the existential risk from artificial general intelligence . 2017: Poker AI Libratus individually defeated each of its 4 human opponents\u2014among the best players in the world\u2014at an exceptionally high aggregated win rate, over a statistically significant sample. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) In contrast to Chess and Go, Poker is an imperfect information game. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2017: Google DeepMind 's AlphaGo version: Master won 60\u20130 rounds on two public Go websites including 3 wins against world Go champion Ke 2017: An OpenAI -machined learned bot played at The International 2017 Dota 2 tournament in August 2017. It won during a 1v1 demonstration game against professional Dota 2 player Dendi . (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2018: Alibaba language processing AI outscores top humans at a Stanford University reading and comprehension test, scoring 82.44 against 82.304 on a set of 100,000 questions. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2019: DeepMind's AlphaStar reaches Grandmaster level at StarCraft II, outperforming 99.8 percent of human players. 2020: Microsoft introduced its Turing Natural Language Generation (T-NLG), which was then the \"largest language model ever published at 17 billion parameters\". 2020: OpenAI's GPT-3, a state-of-the-art autoregressive language model that uses deep learning to produce a variety of computer codes, poetry and other language tasks exceptionally similar, and almost indistinguishable from those written by humans. Its capacity was ten times greater than that of the T-NLG. It was introduced in May 2020, and was in beta testing in June 2020. AI #ml \u00b6","title":"AI Timeline"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#ai-timeline-summary","text":"Full timeline here Timeline of artificial intelligence - Wikipedia","title":"AI Timeline Summary"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#early-ai-timeline-1901-1950","text":"1913: Bertrand Russell and Alfred North Whitehead published Principia Mathematica , which revolutionized formal logic . 1915: Leonardo Torres y Quevedo built a chess automaton, El Ajedrecista and published speculation about thinking and automata. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1923: Karel \u010capek 's play R.U.R. (Rossum's Universal Robots) opened in London. This is the first use of the word \" robot \" in English. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1920s and 1930s: Ludwig Wittgenstein and Rudolf Carnap lead philosophy into logical analysis of knowledge . Alonzo Church develops Lambda Calculus to investigate computability using recursive functional notation. 1931: Kurt G\u00f6del showed that sufficiently powerful formal systems , if consistent, permit the formulation of true theorems that are unprovable by any theorem-proving machine deriving all possible theorems from the axioms. To do this he had to build a universal, integer-based programming language, which is the reason why he is sometimes called the \"father of theoretical computer science \". 1941: Konrad Zuse built the first working program-controlled computers. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1943: Warren Sturgis McCulloch and Walter Pitts publish \"A Logical Calculus of the Ideas Immanent in Nervous Activity\" (1943), laying foundations for artificial neural networks . (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1943: Arturo Rosenblueth , Norbert Wiener and Julian Bigelow coin the term \" cybernetics \". Wiener's popular book by that name published in 1948. 1945: Game theory which would prove invaluable in the progress of AI was introduced with the 1944 paper, Theory of Games and Economic Behavior by mathematician John von Neumann and economist Oskar Morgenstern . 1945: Vannevar Bush published As We May Think ( The Atlantic Monthly , July 1945) a prescient vision of the future in which computers assist humans in many activities. 1948: John von Neumann (quoted by E.T. Jaynes ) in response to a comment at a lecture that it was impossible for a machine to think: \"You insist that there is something a machine cannot do. If you will tell me precisely what it is that a machine cannot do, then I can always make a machine which will do just that!\". Von Neumann was presumably alluding to the Church-Turing thesis which states that any effective procedure can be simulated by a (generalized) computer.","title":"Early AI Timeline - 1901 - 1950"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#early-ai-timeline-1950s","text":"1950: Alan Turing proposes the Turing Test as a measure of machine intelligence. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1950: Claude Shannon published a detailed analysis of chess playing as search . 1950: Isaac Asimov published his Three Laws of Robotics . 1951: The first working AI programs were written in 1951 to run on the Ferranti Mark 1 machine of the University of Manchester : a checkers-playing program written by Christopher Strachey and a chess-playing program written by Dietrich Prinz . 1952\u20131962: Arthur Samuel ( IBM ) wrote the first game-playing program, (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) for checkers ( draughts ), to achieve sufficient skill to challenge a respectable amateur. His first checkers-playing program was written in 1952, and in 1955 he created a version that learned to play. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1956: The Dartmouth College summer AI conference is organized by John McCarthy , Marvin Minsky , Nathan Rochester of IBM and Claude Shannon . McCarthy coins the term artificial intelligence for the conference. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 1956: The first demonstration of the Logic Theorist (LT) written by Allen Newell , J.C. Shaw and Herbert A. Simon ( Carnegie Institute of Technology , now Carnegie Mellon University or CMU). This is often called the first AI program, though Samuel's checkers program also has a strong claim. 1958: John McCarthy ( Massachusetts Institute of Technology or MIT) invented the Lisp programming language . 1958: Herbert Gelernter and Nathan Rochester (IBM) described a theorem prover in geometry that exploits a semantic model of the domain in the form of diagrams of \"typical\" cases. 1958: Teddington Conference on the Mechanization of Thought Processes was held in the UK and among the papers presented were John McCarthy's Programs with Common Sense, Oliver Selfridge 's Pandemonium, and Marvin Minsky 's Some Methods of Heuristic Programming and Artificial Intelligence. 1959: The General Problem Solver (GPS) was created by Newell, Shaw and Simon while at CMU. 1959: John McCarthy and Marvin Minsky founded the MIT AI Lab . Late 1950s, early 1960s: Margaret Masterman and colleagues at University of Cambridge design semantic nets for machine translation .","title":"Early AI Timeline - 1950s"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#early-ai-timeline-1960s","text":"1960s: Ray Solomonoff lays the foundations of a mathematical theory of AI, introducing universal Bayesian methods for inductive inference and prediction. 1961: James Slagle (PhD dissertation, MIT) wrote (in Lisp) the first symbolic integration program, SAINT, which solved calculus problems at the college freshman level. 1961: In Minds, Machines and G\u00f6del , John Lucas (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) denied the possibility of machine intelligence on logical or philosophical grounds. He referred to Kurt G\u00f6del 's result of 1931: sufficiently powerful formal systems are either inconsistent or allow for formulating true theorems unprovable by any theorem-proving AI deriving all provable theorems from the axioms. Since humans are able to \"see\" the truth of such theorems, machines were deemed inferior. 1963: Edward Feigenbaum and Julian Feldman published Computers and Thought, the first collection of articles about artificial intelligence. 1963: Leonard Uhr and Charles Vossler published \"A Pattern Recognition Program That Generates, Evaluates, and Adjusts Its Own Operators\", which described one of the first machine learning programs that could adaptively acquire and modify features and thereby overcome the limitations of simple Perceptrons of Rosenblatt 1965: Lotfi Zadeh at U.C. Berkeley publishes his first paper introducing fuzzy logic \"Fuzzy Sets\" (Information and Control 8: 338\u2013353). 1965: Joseph Weizenbaum (MIT) built ELIZA , an interactive program that carries on a dialogue in English language on any topic. It was a popular toy at AI centers on the ARPANET when a version that \"simulated\" the dialogue of a psychotherapist was programmed. 1965: Edward Feigenbaum initiated Dendral , a ten-year effort to develop software to deduce the molecular structure of organic compounds using scientific instrument data. It was the first expert system . 1966: Machine Intelligence (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) workshop at Edinburgh \u2013 the first of an influential annual series organized by Donald Michie and others. 1966: Negative report on machine translation kills much work in Natural language processing (NLP) for many years. 1968: Richard Greenblatt (programmer) at MIT built a knowledge-based chess-playing program , MacHack , that was good enough to achieve a class-C rating in tournament play. 1968: Wallace and Boulton's program, Snob (Comp.J. 11(2) 1968), for unsupervised classification (clustering) uses the Bayesian Minimum Message Length criterion, a mathematical realisation of Occam's razor . 1969: Stanford Research Institute (SRI): Shakey the Robot , demonstrated combining animal locomotion , perception and problem solving . 1969: First International Joint Conference on Artificial Intelligence ( IJCAI ) held at Stanford. 1969: Marvin Minsky and Seymour Papert publish Perceptrons , demonstrating previously unrecognized limits of this feed-forward two-layered structure, and This book is considered by some to mark the beginning of the AI winter of the 1970s, a failure of confidence and funding for AI. Nevertheless, significant progress in the field continued (see below). 1969: McCarthy and Hayes started the discussion about the frame problem with their essay, \"Some Philosophical Problems from the Standpoint of Artificial Intelligence\".","title":"Early AI Timeline - 1960s"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#recent-ai-timeline-2010s","text":"2010: Microsoft launched Kinect for Xbox 360, the first gaming device to track human body movement , using just a 3D camera and infra-red detection, enabling users to play their Xbox 360 wirelessly. The award-winning machine learning for human motion capture technology for this device was developed by the Computer Vision group at Microsoft Research , Cambridge. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2011: IBM 's Watson computer defeated television game show Jeopardy! champions Rutter and Jennings . 2011\u20132014: Apple 's Siri (2011), Google 's Google Now (2012) and Microsoft 's Cortana (2014) are smartphone apps that use natural language to answer questions, make recommendations and perform actions. 2013: Robot HRP-2 built by SCHAFT Inc of Japan , a subsidiary of Google , defeats 15 teams to win DARPA \u2019s Robotics Challenge Trials . HRP-2 scored 27 out of 32 points in 8 tasks needed in disaster response. Tasks are drive a vehicle, walk over debris, climb a ladder, remove debris, walk through doors, cut through a wall, close valves and connect a hose. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2015: An open letter to ban development and use of autonomous weapons signed by Hawking , Musk , Wozniak and 3,000 researchers in AI and robotics 2015: Google DeepMind 's AlphaGo (version: Fan) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) defeated 3 time European Go champion 2 dan professional Fan Hui by 5 games to 0. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2016: Google DeepMind 's AlphaGo (version: Lee) (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) defeated Lee Sedol 4\u20131. Lee Sedol is a 9 dan professional Korean Go champion who won 27 major tournaments from 2002 to 2016. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) Before the match with AlphaGo, Lee Sedol was confident in predicting an easy 5\u20130 or 4\u20131 victory. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2017: Asilomar Conference on Beneficial AI was held, to discuss AI ethics and how to bring about beneficial AI while avoiding the existential risk from artificial general intelligence . 2017: Poker AI Libratus individually defeated each of its 4 human opponents\u2014among the best players in the world\u2014at an exceptionally high aggregated win rate, over a statistically significant sample. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) In contrast to Chess and Go, Poker is an imperfect information game. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2017: Google DeepMind 's AlphaGo version: Master won 60\u20130 rounds on two public Go websites including 3 wins against world Go champion Ke 2017: An OpenAI -machined learned bot played at The International 2017 Dota 2 tournament in August 2017. It won during a 1v1 demonstration game against professional Dota 2 player Dendi . (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2018: Alibaba language processing AI outscores top humans at a Stanford University reading and comprehension test, scoring 82.44 against 82.304 on a set of 100,000 questions. (https://en.wikipedia.org/wiki/Timeline_of_artificial_intelligence) 2019: DeepMind's AlphaStar reaches Grandmaster level at StarCraft II, outperforming 99.8 percent of human players. 2020: Microsoft introduced its Turing Natural Language Generation (T-NLG), which was then the \"largest language model ever published at 17 billion parameters\". 2020: OpenAI's GPT-3, a state-of-the-art autoregressive language model that uses deep learning to produce a variety of computer codes, poetry and other language tasks exceptionally similar, and almost indistinguishable from those written by humans. Its capacity was ten times greater than that of the T-NLG. It was introduced in May 2020, and was in beta testing in June 2020.","title":"Recent AI Timeline  - 2010s"},{"location":"EEE205/Classes/d_Notes/AI%20Timeline/#ai-ml","text":"","title":"AI  #ml"},{"location":"EEE205/Classes/d_Notes/Further%20Information/","text":"Date: <%+ tp.date.now(\"DD-MM-YYYY\")%> AI People \u00b6 Geoff Hinton: This Canadian Genius Created Modern AI - YouTube Geoff Hinton: The Foundations of Deep Learning - YouTube Andrew Ng: Advice on Getting Started in Deep Learning - YouTube Ian Goodfellow: Generative Adversarial Networks (GANs) - YouTube Kai-Fu Lee: How AI can save our humanity - YouTube AI Websites and Resources \u00b6 DeepLearning.AI: Start or Advance Your Career in AI deepfakes/faceswap: Deepfakes Software For All (github.com) MIT-IBM Watson AI Lab Home To ChatBots: jd-bots.com Google AI Machine Learning Intro (w3schools.com) AI For Everyone | Coursera The Beginner's Guide to Artificial Intelligence (Unity 2022) | Udemy Lazy Programmer Inc. Artificial intelligence and machine learning engineer | Udemy OpenAI DALL\u00b7E: Creating Images from Text (openai.com) POLITICO AI: Decoded: The EU\u2019s AI rules \u2014 Finland talks to machines Midjourney Feed aidungeon.io Online Books and Refs \u00b6 Deep Learning (deeplearningbook.org) Machine Learning Glossary \u2014 ML Glossary documentation Books \u00b6 Tiny Python 3.6 Notebook (Kindle) Illustrated Guide to Python 3 (Play Books) Advanced Guide to Python 3 Programming Python Machine Learning - Sebastian Raschka Machine Learning with PyTorch and Ski-Learn - Raschka (Packt) Grokking Machine Learning Deep Reinforcement Learning with Python (Kindle) Grokking Deep Learning Building a Second Brain (Kindle) AI 2041 (Kindle) Python \u00b6 PyGame: A Primer on Game Programming in Python \u2013 Real Python Maths: Mathematical Foundations of Machine Learning | Udemy Python: 100 Days of Code: The Complete Python Pro Bootcamp for 2022 | Udemy Python for beginners: (19) Python Beginner Tutorial #1 - Installation and First Program - YouTube Python (intermediate): (19) Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) (19) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube Python (Algorithms & Data Structures) (19) Introduction - Algorithms & Data Structures #1 - YouTube Python Machine Learning: (19) Python Machine Learning Tutorial - YouTube Python (Advanced) (19) Magic Methods & Dunder - Advanced Python Tutorial #1 - YouTube Exploring Game Mechanics with Python by Example (h3dlearn.com) Videos \u00b6 The History of AI by John Clerkin - YouTube Using Math to Generate Serpinski's Triangle - Python RE: Numberphile Chaos Game Conway's Game of Life - Rosetta Code Seeing Theory Seeing Theory - Basic Probability Gradient Descent in 3 minutes - YouTube AI #ml \u00b6","title":"Sources 19-08-2022"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#ai-people","text":"Geoff Hinton: This Canadian Genius Created Modern AI - YouTube Geoff Hinton: The Foundations of Deep Learning - YouTube Andrew Ng: Advice on Getting Started in Deep Learning - YouTube Ian Goodfellow: Generative Adversarial Networks (GANs) - YouTube Kai-Fu Lee: How AI can save our humanity - YouTube","title":"AI People"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#ai-websites-and-resources","text":"DeepLearning.AI: Start or Advance Your Career in AI deepfakes/faceswap: Deepfakes Software For All (github.com) MIT-IBM Watson AI Lab Home To ChatBots: jd-bots.com Google AI Machine Learning Intro (w3schools.com) AI For Everyone | Coursera The Beginner's Guide to Artificial Intelligence (Unity 2022) | Udemy Lazy Programmer Inc. Artificial intelligence and machine learning engineer | Udemy OpenAI DALL\u00b7E: Creating Images from Text (openai.com) POLITICO AI: Decoded: The EU\u2019s AI rules \u2014 Finland talks to machines Midjourney Feed aidungeon.io","title":"AI Websites and Resources"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#online-books-and-refs","text":"Deep Learning (deeplearningbook.org) Machine Learning Glossary \u2014 ML Glossary documentation","title":"Online Books and Refs"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#books","text":"Tiny Python 3.6 Notebook (Kindle) Illustrated Guide to Python 3 (Play Books) Advanced Guide to Python 3 Programming Python Machine Learning - Sebastian Raschka Machine Learning with PyTorch and Ski-Learn - Raschka (Packt) Grokking Machine Learning Deep Reinforcement Learning with Python (Kindle) Grokking Deep Learning Building a Second Brain (Kindle) AI 2041 (Kindle)","title":"Books"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#python","text":"PyGame: A Primer on Game Programming in Python \u2013 Real Python Maths: Mathematical Foundations of Machine Learning | Udemy Python: 100 Days of Code: The Complete Python Pro Bootcamp for 2022 | Udemy Python for beginners: (19) Python Beginner Tutorial #1 - Installation and First Program - YouTube Python (intermediate): (19) Python Intermediate Tutorial #1 - Classes and Objects - YouTube Python (data science) (19) Python Data Science Tutorial #1 - Anaconda and PyCharm Setup - YouTube Python (Algorithms & Data Structures) (19) Introduction - Algorithms & Data Structures #1 - YouTube Python Machine Learning: (19) Python Machine Learning Tutorial - YouTube Python (Advanced) (19) Magic Methods & Dunder - Advanced Python Tutorial #1 - YouTube Exploring Game Mechanics with Python by Example (h3dlearn.com)","title":"Python"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#videos","text":"The History of AI by John Clerkin - YouTube Using Math to Generate Serpinski's Triangle - Python RE: Numberphile Chaos Game Conway's Game of Life - Rosetta Code Seeing Theory Seeing Theory - Basic Probability Gradient Descent in 3 minutes - YouTube","title":"Videos"},{"location":"EEE205/Classes/d_Notes/Further%20Information/#ai-ml","text":"","title":"AI  #ml"},{"location":"EEE205/Prep/EEE205%20Planning%20-%202022-2023/","text":"Lectures \u00b6 Lecture 1 - AI \u00b6 Introduction to AI Contemporary AI State-of-the-art AI Research AI and Ethics Maths for AI and ML Key Algorithms Machine Learning Knowledge, Reasoning, and Planning Learning and Uncertainty Neural Networks AI tools and case studies Seminar and Practical - Python and ML \u00b6 Introduction to Python, Replit, and other tools. Hello World, comments, whitespace Writing and reading data, strings, bools, numbers, variables Conditionals, containers (Lists, Tuples, Sets), iterations, dictionaries Functions, Classes, Libraries and Packages Python and ML libraries Statistics and data analysis Modelling, Regression, and prediction Classification and clustering Scikit-learn TensorFlow and Keras Sentiment analysis Books: Treading on Python Series: Illustrated Guide to Python 3 #Grokking Machine Learning MEAP V12 Deep Learning, Kelleher EEE205 #AI #ml \u00b6","title":"EEE205 Planning   2022 2023"},{"location":"EEE205/Prep/EEE205%20Planning%20-%202022-2023/#lectures","text":"","title":"Lectures"},{"location":"EEE205/Prep/EEE205%20Planning%20-%202022-2023/#lecture-1-ai","text":"Introduction to AI Contemporary AI State-of-the-art AI Research AI and Ethics Maths for AI and ML Key Algorithms Machine Learning Knowledge, Reasoning, and Planning Learning and Uncertainty Neural Networks AI tools and case studies","title":"Lecture 1 - AI"},{"location":"EEE205/Prep/EEE205%20Planning%20-%202022-2023/#seminar-and-practical-python-and-ml","text":"Introduction to Python, Replit, and other tools. Hello World, comments, whitespace Writing and reading data, strings, bools, numbers, variables Conditionals, containers (Lists, Tuples, Sets), iterations, dictionaries Functions, Classes, Libraries and Packages Python and ML libraries Statistics and data analysis Modelling, Regression, and prediction Classification and clustering Scikit-learn TensorFlow and Keras Sentiment analysis Books: Treading on Python Series: Illustrated Guide to Python 3 #Grokking Machine Learning MEAP V12 Deep Learning, Kelleher","title":"Seminar and Practical - Python and ML"},{"location":"EEE205/Prep/EEE205%20Planning%20-%202022-2023/#eee205-ai-ml","text":"","title":"EEE205 #AI #ml"},{"location":"EEE205/Prep/S1%20Notes/","text":"This program displays Hello World when run. To run the code: Click on Show Files . Click on main.py to open the main code file. Click the run button to execute the code. To work online and use your own account, press and hold the CTRL key while clicking the left mouse on Open in Replit button. To get proper access to Replit online, you should sign in. In Replit you can only edit the code if you fork (or remix ) a copy to your own account first.","title":"S1 Notes"}]}